Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.as_command.time", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.list_factory", "doc.quickstart", "doc.sqlalchemy", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.list_factory.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "float Mode", "int Mode", "str Mode", "time Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "List factory", "Quick start", "Factory from sqlalchemy", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 20, 21], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27], "an": [2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 26, 27], "object": [3, 4, 5, 10, 11, 12, 17, 18, 20, 24, 26, 27], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 26], "rule": [3, 11, 26], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 22, 26], "specifi": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 20, 26, 27], "when": [3, 6, 7, 11, 14, 15, 16, 18, 26], "creat": [2, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27], "If": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 21, 26, 27], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 26, 27], "do": [11, 15, 26], "care": [11, 22], "about": 11, "condit": [0, 11, 26], "other": [3, 7, 11, 12, 13, 16, 18, 26, 27], "than": [5, 10, 11, 16, 18, 26], "can": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26], "simpli": [11, 18], "suppli": 11, "exampl": [0, 3, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27], "from_exampl": [2, 11, 14, 17, 21, 26, 27], "want": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 21, 27], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 26, 27], "constructor": 11, "correspond": [11, 12, 26], "import": [2, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26, 27], "factory_a": 11, "generated_a": 11, "next": [11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 26, 27], "assert": [11, 12, 13, 14, 15, 16, 17, 18, 22, 26], "isinst": [11, 12, 14, 16, 17, 18, 22, 26], "str": [0, 3, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27], "factory_b": 11, "randstr": [11, 12, 16, 20, 22, 26], "length": [6, 9, 11, 12, 18, 20, 22, 26], "16": [11, 12, 20, 21], "generated_b": 11, "len": [0, 6, 11, 16, 18, 22, 26], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 21, 22], "argument": [11, 12, 13, 18, 23, 26], "nonetyp": 11, "There": [3, 11, 22], "dedic": 11, "function": [11, 12, 13, 17, 20, 26, 27], "const": [11, 26], "instead": [11, 12, 16, 18, 27], "none": [11, 18, 26, 27], "bool": [0, 11, 16, 26, 27], "randbool": [11, 16, 26], "true": [0, 1, 11, 12, 18, 21, 26, 27], "fals": [1, 11, 18, 26, 27], "int": [0, 7, 11, 12, 16, 17, 18, 21, 26], "randint": [11, 12, 16, 18, 20, 26], "integ": [7, 8, 9, 11, 18, 21, 27], "float": [0, 8, 11, 18, 24, 26], "randfloat": [7, 11, 26], "string": [3, 9, 11, 18, 21, 26, 27], "list": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 17, 21, 22, 26], "randlist": [11, 16, 26], "tupl": [11, 26], "dict": [2, 11, 17, 21, 26, 27], "randdict": [11, 16, 18, 20, 26], "decim": [0, 7, 8, 11, 26], "randdecim": [6, 11, 16, 20, 26], "datetim": [0, 4, 10, 11, 18, 21, 26], "randdatetim": [5, 11, 26], "date": [0, 5, 10, 11, 18, 26], "randdat": [4, 11, 26], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 16, 18, 21, 22, 26], "randtim": [10, 11, 26], "timedelta": [0, 5, 10, 11, 21, 26], "randtimedelta": [11, 26], "candid": [6, 7, 11], "or_non": [11, 26], "factory_nul": 11, "0": [1, 6, 7, 8, 11, 12, 13, 16, 18, 20, 21, 22, 24, 26], "1": [6, 7, 11, 13, 15, 16, 18, 21, 22, 24, 26], "get": [11, 20], "alwai": [11, 12, 16, 18], "return": [11, 12, 13, 22, 26, 27], "sever": [0, 3, 11], "method": [11, 21, 22], "determin": 11, "from": [11, 12, 13, 15, 20, 21, 27], "multipl": [1, 2, 4, 5, 6, 7, 8, 10, 11, 16, 26], "make": [11, 16, 21], "e": 11, "so": [1, 4, 5, 6, 7, 8, 10, 11, 14, 15, 18, 26], "boolean": [1, 11, 18], "_": 11, "rang": [4, 5, 6, 7, 8, 9, 10, 11], "10": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 18, 20, 22, 26], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 23, 26], "choos": [11, 26], "either": [11, 12], "each": [0, 1, 2, 3, 11, 12, 13, 18, 22, 26, 27], "result": [11, 26], "chosen": [11, 26], "one": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 21, 26], "specif": [0, 4, 5, 6, 7, 10, 11, 16, 19, 26], "randchoic": [11, 12, 13, 18, 21, 26], "allow": [11, 20, 26], "deni": 11, "same": [3, 11, 13, 16, 18, 20], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 20], "predefin": 11, "thi": [3, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 26, 27], "chang": [3, 4, 5, 10, 11, 18, 26], "post_process": [11, 18, 20, 21, 26], "format": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 20, 26], "50000": [11, 26], "decimal_len": [11, 16, 20, 26], "2": [0, 6, 7, 11, 13, 15, 16, 18, 20, 21, 26], "lambda": [11, 18, 20, 21, 26], "x": [11, 26], "f": [11, 12, 26], "12": [0, 10, 11, 21, 26], "345": [11, 26], "67": [11, 26], "3": [0, 3, 9, 11, 15, 16, 17, 18, 26], "153": [11, 26], "21": [11, 26], "90": [11, 26], "etc": [11, 17, 26], "provid": 11, "also": [0, 2, 5, 7, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 26], "context": [11, 26], "iter": [0, 11, 16, 21, 23, 26], "includ": [3, 6, 7, 11, 18], "normal": [3, 11, 16, 26], "would": [11, 12, 13, 15, 16, 18, 21], "think": 11, "could": 11, "just": [1, 4, 5, 6, 7, 8, 10, 11, 17, 22], "directli": [11, 14, 26], "need": [11, 16], "itertool": 11, "uuid": [2, 11, 14, 17], "defin": [2, 3, 11, 26], "class": [11, 13, 18, 24, 26, 27], "mailaddressfactori": 11, "def": [11, 13, 21], "self": 11, "com": 11, "http": 11, "doc": 11, "org": 11, "librari": 11, "html": 11, "count": 11, "id": [11, 16, 18, 20, 27], "uuid4": [2, 11, 14, 17], "name": [2, 11, 12, 14, 17, 18, 20, 27], "mail": 11, "set": [11, 16], "endswith": 11, "by_cal": [11, 26], "by_iter": [11, 21, 26], "A": [11, 18, 26], "finit": 11, "onc": [11, 22], "termin": [11, 22], "cannot": [11, 18, 20, 26], "ani": [0, 11, 12, 13, 18, 24, 26, 27], "more": [0, 11, 26], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 20, 21, 22, 26, 27], "element": [3, 12, 18, 21, 23, 26], "randomli": [12, 16, 17, 18, 19, 23, 26, 27], "like": [1, 4, 5, 6, 7, 8, 10, 12, 13, 16, 18, 21, 26], "built": [12, 13, 18], "two": [3, 12, 13, 18], "wai": [12, 13, 18, 22], "code": [2, 12, 13, 14, 16, 18, 22], "look": [12, 13, 16, 18, 21], "dictitem": [12, 13, 15, 26], "sex": 12, "m": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 27], "ag": [2, 12, 14, 17, 18, 20], "kei": [12, 18, 22, 26], "exist": [3, 12, 15], "random": [12, 16, 19, 22, 26, 27], "100": [0, 6, 7, 8, 12, 16], "9": 12, "As": [12, 18, 21, 23], "pass": [12, 17, 18, 26], "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 18, 20, 21, 22, 23, 26, 27], "keyword": [12, 26], "By": [4, 5, 10, 12, 13, 17, 18], "possibl": [12, 18, 20], "whether": 12, "dictionari": [12, 27], "abov": [3, 12, 15, 18, 21], "see": [0, 2, 11, 12, 14, 18, 21], "here": [12, 18, 19], "how": [12, 18, 23], "build": [12, 18, 23], "dictitemexampl": [12, 13, 24], "smith": 12, "22": 12, "Not": 12, "limit": [6, 12], "given": [12, 16, 18, 21], "output": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 20, 23], "similar": 12, "its": [12, 22, 26], "Or": 12, "wrap": 12, "mani": 16, "case": [1, 2, 6, 16, 18, 20, 21], "becaus": 16, "tailor": 16, "applic": 16, "record": [2, 16, 18], "singl": [3, 16], "mai": [1, 2, 15, 16, 18, 22, 26], "appropri": 16, "rather": [5, 10, 16], "999_999": [16, 20], "price": [16, 20], "1000": [6, 16, 20], "200": [16, 21], "record_list": 16, "th": 16, "longer": 16, "number": [6, 7, 16, 26, 27], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 10, 16], "last": 16, "el_factori": 16, "4": [7, 16, 18], "therefor": 16, "typic": 16, "where": 16, "ha": 16, "mean": [16, 26], "onli": [5, 15, 16, 26], "el": 16, "5": [1, 9, 16, 22, 26], "sure": 16, "map": [16, 26, 27], "piec": 16, "attribut": 16, "type": [0, 3, 13, 15, 16, 20, 23, 26, 27], "necessari": [1, 16], "separ": [2, 3, 16], "schema": 16, "sinc": [3, 16, 20], "omit": [2, 14, 16], "equal": [16, 26], "accept": [16, 26], "guarante": [15, 16], "try": 17, "step": [17, 21], "prepar": 17, "8": [9, 13, 17, 26], "newer": 17, "pip": 17, "command": [1, 3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 20, 23], "factori": [2, 17, 21, 23, 24, 27], "20": [0, 2, 14, 17, 18], "some": [11, 18, 19], "timelin": [19, 23], "data": [2, 15, 19, 23], "depend": [19, 23], "previou": [18, 19, 20, 23], "json": [1, 2, 3, 4, 5, 6, 7, 10, 19, 23], "modul": [20, 23], "18": 20, "64": 20, "value_json": 20, "dump": 20, "we": 20, "wosar5ajmwhngj72": 20, "51": [0, 20], "convert": [3, 18, 20], "default": [1, 4, 5, 6, 7, 10, 13, 18, 20, 26, 27], "583085": 20, "754": 20, "were": 20, "begin": 20, "v": [20, 22, 26], "non": 21, "pseudo": 21, "seri": 21, "iter_datetim": 21, "start": [21, 23], "nxt": 21, "while": [2, 21], "yield": 21, "iter_randomwalk": 21, "step_f": 21, "2022": [0, 21], "hour": 21, "locat": 21, "hourli": 21, "01": [0, 4, 5, 6, 7, 21], "01t12": [5, 21], "00": [5, 10, 21], "13": 21, "14": 21, "15": [6, 7, 21], "seen": 21, "definit": [0, 2, 18, 21, 23, 26], "increas": 21, "exactli": 21, "differ": [3, 21], "randomwalk": 21, "thu": 21, "wa": [14, 21, 26], "d": [4, 5, 21], "isoformat": 21, "128": 22, "generated1": 22, "generated2": 22, "note": [18, 22], "low": 22, "probabl": [1, 4, 5, 6, 7, 8, 10, 13, 18, 22, 26], "thei": [18, 22, 26], "ident": 22, "usual": 22, "sugar": 22, "coat": 22, "syntax": 22, "although": [11, 22], "itself": 22, "cnt": 22, "generated_valu": 22, "dispos": 22, "must": [2, 22, 26], "regener": 22, "infinity_it": [22, 26], "foo": [22, 26], "bar": [22, 26], "k": [18, 22, 26], "zip": [22, 26], "warn": 22, "run": [2, 22, 23], "below": [2, 3, 22], "continu": 22, "indefinit": 22, "caus": 22, "infinit": 22, "loop": 22, "handl": 22, "packag": 23, "help": 23, "quick": 23, "instal": 23, "minim": 23, "construct": [23, 26], "nullabl": [18, 23], "union": [23, 26, 27], "choic": 23, "constanc": 23, "process": [1, 23, 26], "custom": [18, 23, 27], "detail": [3, 23], "individu": 23, "tip": 23, "usag": 23, "subpackag": 23, "submodul": 23, "index": 23, "except": 24, "prop_exist": [24, 26], "base": [18, 24, 25, 26, 27], "obj": 24, "sequenc": [24, 26], "factoryconstructionerror": [25, 26], "messag": 25, "properti": [25, 26], "item": [18, 26], "arg": 26, "kwd": 26, "abc": 26, "t": 26, "infin": [6, 7, 26], "serv": 26, "NOT": 26, "size": 26, "paramet": [26, 27], "abstract": 26, "accord": [0, 26], "assembl": 26, "prob": 26, "rnd": [26, 27], "whose": [18, 26], "option": [16, 20, 23, 26, 27], "callabl": 26, "r": [1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 26], "modifi": 26, "fromexamplecontext": 26, "path": 26, "custom_func": [18, 26, 27], "_customfunc": 26, "example_is_custom": [], "examples_stack": 26, "child": 26, "current_exampl": 26, "recurs": 26, "classmethod": [], "root": [], "func": 26, "It": [1, 2, 18, 26], "match": [26, 27], "execut": [0, 3, 14, 16, 20, 26], "first": 26, "new": 26, "recommend": 26, "receiv": 26, "kwarg": [26, 27], "futur": [18, 26], "updat": 26, "should": 26, "take": 26, "preced": 26, "over": 26, "rais": 26, "support": 26, "prop_tru": [1, 26], "inconsist": 26, "weight": [13, 26], "chose": [], "No": [2, 26], "minimum": [4, 5, 6, 7, 8, 10, 26], "maximum": [4, 5, 6, 7, 8, 10, 15, 26], "tzinfo": 26, "liter": 26, "fix": 26, "awar": 26, "correct": 26, "otherwis": 26, "supportsfloat": 26, "p_inf": 26, "n_inf": 26, "nan": [6, 7, 26], "part": [6, 7, 26], "posit": [6, 7, 15, 26], "neg": [6, 7, 26], "items_dict": 26, "hashabl": 26, "ignor": [18, 26], "_base": 26, "_list": 26, "items_list": 26, "charset": [9, 26], "charact": [9, 26], "timezon": [], "inform": [], "unit": 26, "atom": 26, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10], "factory_definition_fil": [], "filenam": [2, 26], "instanc": [2, 27], "variabl": [2, 14], "print": 3, "repr": 3, "befor": 3, "standard": [3, 4, 5, 7, 10], "after": [3, 7, 15], "being": 3, "For": [0, 3, 18, 27], "factory_def": [0, 2, 3, 14], "py": [0, 2, 3, 14], "out": 3, "txt": 3, "veri": 3, "practic": 3, "thing": 3, "done": [3, 13, 16, 20], "redirect": 3, "featur": [3, 18], "shell": 3, "combin": 3, "describ": [0, 3, 14], "them": [2, 3, 14], "l": [1, 2, 3, 4, 5, 6, 7, 8, 10], "repeatedli": [3, 18], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 4, 5, 6, 7, 8, 10, 11, 14], "far": 14, "load": 14, "runtim": 14, "written": [7, 14], "bound": 14, "save": 14, "under": 14, "your": 14, "from_pyfil": [14, 26], "extern": 23, "file": [0, 2, 23, 26], "pathlik": 26, "io": 26, "notimpl": 26, "behav": 26, "until": 26, "enumer": [11, 13], "randenum": [11, 26], "particular": [11, 18], "enum": [11, 26], "myenum": 13, "custom_chain_length": 26, "signal_terminate_custom": 26, "terminate_custom_chain": 26, "enum_cl": 26, "bias": 13, "elif": 13, "commonli": 11, "increment": [11, 18, 21, 26], "wish": 15, "initi": 15, "ad": 15, "databas": [2, 15, 18], "initial_valu": [15, 26], "101": 15, "31": [4, 15], "102": 15, "103": 15, "fit": 15, "sign": 15, "32": 15, "bit": 15, "add": [21, 27], "auto": 21, "field": [21, 27], "special": 23, "sequenti": 26, "reach": 26, "reset": 26, "satisfi": [1, 4, 5, 6, 7, 8, 10, 18, 26], "sqlalchemi": [11, 12, 24], "enabl": [], "experiment": 18, "remov": 18, "significantli": 18, "variou": 18, "appli": 18, "mapped_column": 18, "orm": [18, 27], "declarative_bas": [18, 27], "user": [18, 27], "__tablename__": [18, 27], "primary_kei": [18, 27], "autoincr": [18, 27], "least": 18, "work": 18, "biginteg": 18, "numer": [7, 18], "text": 18, "timestamp": 18, "interv": 18, "doe": [7, 18], "all": [3, 18], "rdb": 18, "pleas": 18, "relationship": 18, "foreign": 18, "constraint": 18, "even": 18, "uniqu": [2, 18], "primari": 18, "duplic": 18, "known": 18, "greater": 18, "intuit": 18, "birthdai": 18, "problem": [7, 18], "check": 18, "shown": 2, "accomplish": [], "deriv": 27, "column": 27, "model": [12, 18, 27], "as_dict": [12, 18, 27], "factory_from_column": 27, "60": 18, "overridden": 18, "second": 18, "respect": 18, "for_exampl": [], "inspect": 18, "col": 18, "attr": 18, "override_column": 27, "obtain": [1, 2, 27], "independ": 18, "reiter": 18, "automat": 18, "manual": 18, "group_id": 18, "respond": 18, "regular": 18, "manag": 18, "order": 18, "actual": 18, "coe": [], "advanc": 18, "basic": 0, "further": 0, "avail": [0, 2, 3], "page": 0, "42": 0, "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 14], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10], "mode": [3, 14, 23], "50": 1, "lower": 1, "program": [1, 7], "anoth": 1, "languag": [1, 7], "desir": 1, "point": [5, 7, 10], "p": [6, 7], "inf": [6, 7], "prob_p_inf": [6, 7], "n": [6, 7], "prob_n_inf": [6, 7], "prob_nan": [6, 7], "behavior": [4, 5, 6, 7, 10], "left": [4, 5, 6, 7, 10], "between": [4, 5, 6, 7, 10], "1e": [6, 7], "have": 7, "abil": 7, "place": [6, 7], "digit": 7, "repres": 7, "read": 7, "equival": 2, "test": 2, "util": 2, "o": 2, "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [4, 5, 10], "fmt": [4, 5, 10], "8601": [4, 5, 10], "form": [4, 5, 10], "strftime": [4, 5, 10], "strptime": [4, 5, 10], "2021": [4, 5], "01t00": 5, "y": [4, 5], "h": [5, 10], "simultan": [4, 5, 10], "elaps": [5, 10], "certain": [5, 10], "both": [4, 10]}, "objects": {"": [[24, 0, 0, "-", "randog"]], "randog": [[24, 1, 1, "", "DictItemExample"], [24, 1, 1, "", "Example"], [25, 0, 0, "-", "exceptions"], [26, 0, 0, "-", "factory"], [27, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[24, 2, 1, "", "example"], [24, 2, 1, "", "prop_exists"]], "randog.exceptions": [[25, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[25, 4, 1, "", "message"]], "randog.factory": [[26, 1, 1, "", "DictItem"], [26, 1, 1, "", "Factory"], [26, 1, 1, "", "FromExampleContext"], [26, 6, 1, "", "by_callable"], [26, 6, 1, "", "by_iterator"], [26, 6, 1, "", "const"], [26, 6, 1, "", "from_example"], [26, 6, 1, "", "from_pyfile"], [26, 6, 1, "", "increment"], [26, 6, 1, "", "randbool"], [26, 6, 1, "", "randchoice"], [26, 6, 1, "", "randdate"], [26, 6, 1, "", "randdatetime"], [26, 6, 1, "", "randdecimal"], [26, 6, 1, "", "randdict"], [26, 6, 1, "", "randenum"], [26, 6, 1, "", "randfloat"], [26, 6, 1, "", "randint"], [26, 6, 1, "", "randlist"], [26, 6, 1, "", "randstr"], [26, 6, 1, "", "randtime"], [26, 6, 1, "", "randtimedelta"], [26, 6, 1, "", "union"]], "randog.factory.DictItem": [[26, 2, 1, "", "factory"], [26, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[26, 5, 1, "", "infinity_iter"], [26, 5, 1, "", "iter"], [26, 5, 1, "", "next"], [26, 5, 1, "", "or_none"], [26, 5, 1, "", "post_process"]], "randog.factory.FromExampleContext": [[26, 4, 1, "", "current_example"], [26, 4, 1, "", "custom_chain_length"], [26, 4, 1, "", "custom_funcs"], [26, 4, 1, "", "examples"], [26, 5, 1, "", "from_example"], [26, 4, 1, "", "path"], [26, 5, 1, "", "recursive"], [26, 4, 1, "", "rnd"], [26, 4, 1, "", "signal_terminate_custom"], [26, 5, 1, "", "terminate_custom_chain"]], "randog.sqlalchemy": [[27, 6, 1, "", "custom"], [27, 6, 1, "", "factory"], [27, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 11, "factori": [11, 12, 13, 14, 15, 16, 18, 20, 22, 26], "gener": [11, 16, 18, 23], "random": [11, 21, 23], "valu": 11, "element": [11, 16], "type": [11, 18, 21], "nullabl": 11, "union": 11, "randomli": [11, 20], "choic": 11, "constanc": 11, "process": 11, "output": [3, 11], "custom": 11, "detail": [0, 11], "how": 11, "build": 11, "individu": [11, 18], "dict": [12, 18], "randdict": 12, "from_exampl": [12, 13, 16, 18], "list": 16, "each": 16, "length": 16, "tupl": 16, "quick": 17, "start": 17, "instal": 17, "minim": 17, "us": [17, 22], "tip": 19, "usag": 19, "creat": 20, "json": 20, "decim": [6, 20], "e": 20, "t": 20, "c": 20, "string": 20, "timelin": 21, "data": 21, "depend": 21, "previou": 21, "chang": 21, "smpl_datetim": 21, "str": [9, 21], "As": 22, "iter": [3, 22], "obj": 23, "content": [23, 24], "indic": 23, "tabl": 23, "randog": [18, 24, 25, 26, 27], "packag": [24, 25, 26, 27], "subpackag": 24, "submodul": 24, "modul": 24, "except": 25, "run": 0, "command": 0, "format": 3, "file": [3, 14], "extern": 14, "definit": 14, "enum": 13, "randenum": 13, "special": 11, "increment": 15, "integ": 15, "from": 18, "sqlalchemi": [18, 27], "support": 18, "column": 18, "limit": 18, "model": [], "instanc": 18, "some": [], "field": 18, "specifi": 18, "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10], "int": 8, "float": 7, "datetim": 5, "date": 4, "time": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"]], "byfile Mode": [[2, "byfile-mode"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "date Mode": [[4, "date-mode"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "float Mode": [[7, "float-mode"]], "int Mode": [[8, "int-mode"]], "str Mode": [[9, "str-mode"]], "time Mode": [[10, "time-mode"]], "Construct Factories (generator of random values)": [[11, "construct-factories-generator-of-random-values"]], "Elemental types": [[11, "elemental-types"]], "Nullable": [[11, "nullable"]], "Union type": [[11, "union-type"]], "Randomly choice": [[11, "randomly-choice"]], "Constance": [[11, "constance"]], "Processing output": [[11, "processing-output"]], "Custom Factory": [[11, "custom-factory"]], "Details on how to build individual factories": [[11, "details-on-how-to-build-individual-factories"]], "Special Factory": [[11, "special-factory"]], "Dict factory": [[12, "dict-factory"]], "Factory by randdict": [[12, "factory-by-randdict"]], "Factory by from_example": [[12, "factory-by-from-example"], [13, "factory-by-from-example"], [16, "factory-by-from-example"], [18, "factory-by-from-example"]], "Enum factory": [[13, "enum-factory"]], "Factory by randenum": [[13, "factory-by-randenum"]], "External File Definition of Factory": [[14, "external-file-definition-of-factory"]], "Incremental integer factory": [[15, "incremental-integer-factory"]], "List factory": [[16, "list-factory"]], "Each elements": [[16, "each-elements"]], "Length": [[16, "length"]], "Generate tuple": [[16, "generate-tuple"]], "Quick start": [[17, "quick-start"]], "Installation": [[17, "installation"]], "Minimal use": [[17, "minimal-use"]], "Factory from sqlalchemy": [[18, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[18, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[18, "supported-column-type"]], "Limitations": [[18, "limitations"]], "Specify factories for individual fields": [[18, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[18, "generate-a-dict-instance"]], "Tips (Usage)": [[19, "tips-usage"]], "Create JSON randomly": [[20, "create-json-randomly"]], "Decimal e.t.c.": [[20, "decimal-e-t-c"]], "Factory of JSON string": [[20, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[21, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[21, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[22, "use-factories"]], "As iterator": [[22, "as-iterator"]], "random-obj-generator": [[23, "random-obj-generator"]], "Contents:": [[23, null]], "Indices and tables": [[23, "indices-and-tables"]], "randog package": [[24, "randog-package"]], "Subpackages and submodules": [[24, "subpackages-and-submodules"]], "Module contents": [[24, "module-randog"]], "randog.exceptions package": [[25, "module-randog.exceptions"]], "randog.factory package": [[26, "module-randog.factory"]], "randog.sqlalchemy package": [[27, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[24, "randog.DictItemExample"]], "example (class in randog)": [[24, "randog.Example"]], "example (randog.dictitemexample attribute)": [[24, "randog.DictItemExample.example"]], "module": [[24, "module-randog"], [25, "module-randog.exceptions"], [26, "module-randog.factory"], [27, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[24, "randog.DictItemExample.prop_exists"]], "randog": [[24, "module-randog"]], "factoryconstructionerror": [[25, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[25, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[25, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[26, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[26, "randog.factory.Factory"]], "fromexamplecontext (class in randog.factory)": [[26, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[26, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[26, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[26, "randog.factory.const"]], "current_example (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.custom_funcs"]], "examples (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[26, "randog.factory.DictItem.factory"]], "from_example() (in module randog.factory)": [[26, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[26, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[26, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[26, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[26, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[26, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[26, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[26, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[26, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[26, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[26, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[26, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[26, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[26, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[26, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[26, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[26, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[26, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[26, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[26, "randog.factory.randlist"]], "randog.factory": [[26, "module-randog.factory"]], "randstr() (in module randog.factory)": [[26, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[26, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[26, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[26, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.rnd"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[26, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[26, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[26, "randog.factory.union"]], "custom() (in module randog.sqlalchemy)": [[27, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[27, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[27, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[27, "module-randog.sqlalchemy"]]}})