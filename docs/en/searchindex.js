Search.setIndex({"docnames": ["doc.as_command", "doc.construct_factories", "doc.dict_factory", "doc.external_def", "doc.list_factory", "doc.quickstart", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory"], "filenames": ["doc.as_command.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.external_def.rst", "doc.list_factory.rst", "doc.quickstart.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst"], "titles": ["Run as Command", "Construct Factories (generator of random values)", "Dict factory", "External File Definition of Factory", "List factory", "Quick start", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package"], "terms": {"In": [0, 1, 3, 4, 7, 8], "randog": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "i": [0, 1, 2, 3, 4, 7, 8, 9, 10, 13], "an": [0, 1, 2, 3, 4, 5, 8, 9, 13], "object": [0, 1, 2, 5, 7, 11, 13], "The": [0, 1, 2, 3, 4, 8, 9, 13], "rule": [0, 1, 13], "ar": [0, 1, 2, 4, 6, 9, 13], "specifi": [1, 4, 7, 13], "when": [0, 1, 3, 4, 13], "creat": [0, 1, 2, 4, 5, 6, 8, 9, 10, 13], "If": [0, 1, 2, 3, 4, 8, 13], "you": [0, 1, 2, 3, 4, 5, 8, 13], "do": [1, 13], "care": [1, 9], "about": 1, "condit": [1, 13], "other": [0, 1, 2, 4, 13], "than": [1, 4], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13], "simpli": 1, "suppli": 1, "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 11, 13], "from_exampl": [0, 1, 3, 5, 8, 13], "want": [0, 1, 4, 5, 8], "us": [0, 1, 2, 3, 4, 7, 8, 10, 13], "constructor": 1, "correspond": [1, 13], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13], "factory_a": 1, "generated_a": 1, "next": [1, 2, 3, 4, 5, 7, 8, 9, 13], "assert": [1, 2, 3, 4, 5, 9, 13], "isinst": [1, 2, 3, 4, 5, 9, 13], "str": [0, 1, 2, 3, 4, 5, 7, 9, 12, 13], "factory_b": 1, "randstr": [1, 2, 4, 7, 9, 13], "length": [1, 2, 7, 9, 13], "16": [1, 2, 7, 8], "generated_b": 1, "len": [1, 4, 9, 13], "follow": [0, 1, 3, 5, 7, 8, 9], "argument": [0, 1, 2, 13], "nonetyp": 1, "There": [0, 1, 9], "dedic": 1, "function": [1, 2, 5, 7, 13], "const": [1, 13], "instead": [1, 2, 4], "none": [1, 13], "bool": [1, 4, 13], "randbool": [1, 4, 13], "true": [1, 8, 13], "fals": [1, 13], "int": [1, 2, 4, 5, 8, 13], "randint": [1, 2, 4, 7, 13], "integ": 1, "float": [1, 11, 13], "randfloat": [1, 13], "string": [0, 1, 8, 13], "list": [0, 1, 5, 8, 9, 13], "randlist": [1, 4, 13], "tupl": [1, 13], "dict": [1, 5, 8, 13], "randdict": [1, 4, 7, 13], "decim": [1, 13], "randdecim": [1, 4, 7, 13], "datetim": [1, 8, 13], "randdatetim": [1, 13], "date": [1, 13], "randdat": [1, 13], "time": [0, 1, 2, 4, 8, 9, 13], "randtim": [1, 13], "timedelta": [1, 8, 13], "randtimedelta": [1, 13], "candid": 1, "or_non": [1, 13], "factory_nul": 1, "0": [1, 2, 4, 7, 8, 9, 11, 13], "1": [1, 4, 8, 9, 11, 13], "get": [1, 7], "alwai": [1, 2, 4], "return": [1, 2, 9, 13], "sever": 1, "method": [1, 8, 9], "determin": 1, "from": [1, 2, 7, 8], "multipl": [1, 4], "make": [1, 4, 8], "e": 1, "so": [1, 3, 13], "boolean": 1, "_": 1, "rang": 1, "10": [1, 7, 9, 13], "which": [0, 1, 4, 10, 13], "choos": [1, 13], "either": [1, 2], "each": [0, 1, 2, 9, 13], "result": [1, 13], "chosen": [1, 13], "one": [0, 1, 4, 8, 13], "specif": [1, 4, 6, 13], "randchoic": [1, 2, 8, 13], "allow": [1, 7, 13], "deni": 1, "same": [0, 1, 4], "python": [0, 1, 3, 5, 7], "predefin": 1, "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13], "chang": [0, 1, 13], "post_process": [1, 7, 8, 13], "format": [1, 7, 10, 13], "50000": [1, 13], "decimal_len": [1, 4, 7, 13], "2": [1, 4, 7, 8, 13], "lambda": [1, 7, 8, 13], "x": [1, 13], "f": [1, 2, 13], "12": [1, 8, 13], "345": [1, 13], "67": [1, 13], "3": [0, 1, 4, 5, 13], "153": [1, 13], "21": [1, 13], "90": [1, 13], "etc": [1, 5, 13], "provid": 1, "also": [1, 2, 3, 4, 5, 7, 8, 9, 13], "context": [1, 13], "iter": [1, 4, 8, 10, 13], "includ": [0, 1], "normal": [0, 1, 4, 13], "would": [1, 2, 4, 8], "think": 1, "could": 1, "just": [1, 5, 9], "directli": [1, 3, 13], "need": [1, 4], "itertool": 1, "uuid": [0, 1, 3, 5], "defin": [0, 1, 13], "class": [1, 11, 13], "mailaddressfactori": 1, "def": [1, 8], "self": 1, "com": 1, "http": 1, "doc": 1, "org": 1, "librari": 1, "html": 1, "count": 1, "id": [1, 4, 7], "uuid4": [0, 1, 3, 5], "name": [0, 1, 2, 3, 5, 7], "mail": 1, "set": [1, 4], "endswith": 1, "by_cal": [1, 13], "by_iter": [1, 8, 13], "A": [1, 13], "finit": 1, "onc": [1, 9], "termin": [1, 9], "cannot": [1, 7, 13], "ani": [1, 2, 11, 13], "more": [1, 13], "gener": [0, 2, 3, 5, 7, 8, 9, 13], "element": [0, 2, 8, 10, 13], "randomli": [2, 4, 5, 6, 10, 13], "like": [2, 4, 8, 13], "built": 2, "two": [0, 2], "wai": [0, 2, 9], "code": [0, 2, 3, 4, 9], "look": [2, 4, 8], "dictitem": [2, 13], "sex": 2, "m": [0, 2, 3], "ag": [0, 2, 3, 5, 7], "kei": [2, 9, 13], "exist": [0, 2], "random": [2, 4, 6, 9, 13], "100": [2, 4], "9": 2, "As": [2, 8, 10], "pass": [2, 5, 13], "valu": [2, 7, 8, 9, 10, 13], "keyword": [2, 13], "By": [2, 5], "possibl": [2, 7], "whether": 2, "dictionari": 2, "abov": [0, 2, 8], "see": [2, 3], "here": [2, 6], "how": [2, 10], "build": [2, 10], "dictitemexampl": [2, 11], "smith": 2, "22": 2, "Not": 2, "limit": 2, "given": [2, 4, 8], "output": [2, 7, 10], "similar": 2, "its": [2, 9, 13], "Or": 2, "wrap": 2, "mani": 4, "case": [4, 7, 8], "becaus": 4, "tailor": 4, "applic": 4, "record": 4, "singl": [0, 4], "mai": [4, 9, 13], "appropri": 4, "rather": 4, "999_999": [4, 7], "price": [4, 7], "1000": [4, 7], "200": [4, 8], "record_list": 4, "th": 4, "longer": 4, "number": [4, 13], "repeat": [0, 4], "last": 4, "el_factori": 4, "4": 4, "therefor": 4, "typic": 4, "where": 4, "ha": 4, "mean": [4, 13], "onli": [4, 13], "el": 4, "5": [4, 9, 13], "sure": 4, "map": [4, 13], "piec": 4, "attribut": 4, "type": [0, 4, 7, 10, 13], "necessari": 4, "separ": [0, 4], "schema": 4, "sinc": [0, 4, 7], "omit": [0, 3, 4], "equal": [4, 13], "accept": [4, 13], "guarante": 4, "try": 5, "step": [5, 8], "prepar": 5, "8": [5, 13], "newer": 5, "pip": 5, "command": [3, 5, 10], "factori": [0, 5, 8, 10, 11], "20": [0, 3, 5], "some": 6, "timelin": [6, 10], "data": [6, 10], "depend": [6, 10], "previou": [6, 7, 10], "json": [0, 6, 10], "modul": [7, 10], "18": 7, "64": 7, "value_json": 7, "dump": 7, "we": 7, "wosar5ajmwhngj72": 7, "51": 7, "convert": [0, 7], "default": [7, 13], "583085": 7, "754": 7, "were": 7, "begin": 7, "v": [7, 9, 13], "non": 8, "pseudo": 8, "seri": 8, "iter_datetim": 8, "start": [8, 10], "nxt": 8, "while": 8, "yield": 8, "iter_randomwalk": 8, "step_f": 8, "2022": 8, "hour": 8, "locat": 8, "hourli": 8, "01": 8, "01t12": 8, "00": 8, "13": 8, "14": 8, "15": 8, "seen": 8, "definit": [0, 8, 10, 13], "increas": 8, "exactli": 8, "differ": [0, 8], "randomwalk": 8, "thu": 8, "wa": [3, 8], "d": 8, "isoformat": 8, "128": 9, "generated1": 9, "generated2": 9, "note": 9, "low": 9, "probabl": [9, 13], "thei": 9, "ident": 9, "usual": 9, "sugar": 9, "coat": 9, "syntax": 9, "although": 9, "itself": 9, "cnt": 9, "generated_valu": 9, "dispos": 9, "must": [0, 9, 13], "regener": 9, "infinity_it": [9, 13], "foo": [9, 13], "bar": [9, 13], "k": [9, 13], "zip": [9, 13], "warn": 9, "run": [3, 9, 10], "below": [0, 9], "continu": 9, "indefinit": 9, "caus": 9, "infinit": 9, "loop": 9, "handl": 9, "packag": 10, "help": 10, "quick": 10, "instal": 10, "minim": 10, "construct": [10, 13], "nullabl": 10, "union": [10, 13], "choic": 10, "constanc": 10, "process": [10, 13], "custom": [10, 13], "detail": [0, 10], "individu": 10, "tip": 10, "usag": 10, "subpackag": 10, "submodul": 10, "index": 10, "except": 11, "prop_exist": [11, 13], "base": [11, 12, 13], "obj": 11, "sequenc": [11, 13], "factoryconstructionerror": [12, 13], "messag": 12, "properti": [12, 13], "item": 13, "arg": 13, "kwd": 13, "abc": 13, "t": 13, "infin": 13, "serv": 13, "NOT": 13, "size": 13, "paramet": 13, "abstract": 13, "accord": 13, "assembl": 13, "prob": 13, "rnd": 13, "whose": 13, "option": [0, 13], "callabl": 13, "r": [0, 13], "modifi": 13, "fromexamplecontext": 13, "path": 13, "custom_func": 13, "_customfunc": 13, "example_is_custom": 13, "examples_stack": 13, "child": 13, "current_exampl": 13, "recurs": 13, "classmethod": 13, "root": 13, "func": 13, "It": [0, 13], "match": 13, "execut": [0, 3, 13], "first": 13, "new": 13, "recommend": 13, "receiv": 13, "kwarg": 13, "futur": 13, "updat": 13, "should": 13, "take": 13, "preced": 13, "over": 13, "rais": 13, "support": 13, "prop_tru": 13, "inconsist": 13, "weight": 13, "chose": [], "No": 13, "minimum": 13, "maximum": 13, "tzinfo": 13, "liter": 13, "fix": 13, "awar": 13, "correct": 13, "otherwis": 13, "supportsfloat": 13, "p_inf": 13, "n_inf": 13, "nan": 13, "part": 13, "posit": 13, "neg": 13, "items_dict": 13, "hashabl": 13, "ignor": 13, "_base": 13, "_list": 13, "items_list": 13, "charset": 13, "charact": 13, "timezon": 13, "inform": 13, "unit": 13, "atom": 13, "simplest": 0, "factory_definition_fil": 0, "filenam": [0, 13], "instanc": 0, "variabl": [0, 3], "print": 0, "repr": 0, "befor": 0, "standard": 0, "after": 0, "being": 0, "For": 0, "factory_def": [0, 3], "py": [0, 3], "out": 0, "txt": 0, "veri": 0, "practic": 0, "thing": 0, "done": 0, "redirect": 0, "featur": 0, "shell": 0, "combin": 0, "describ": [0, 3], "them": [0, 3], "l": 0, "repeatedli": 0, "ONE": 0, "contain": 0, "conform": 0, "On": 0, "hand": 0, "placehold": 0, "out_1": 0, "out_2": 0, "out_3": 0, "out_": 0, "out_0001": 0, "out_0002": 0, "out_0003": 0, "04": 0, "most": 3, "far": 3, "load": 3, "runtim": 3, "written": 3, "bound": 3, "save": 3, "under": 3, "your": 3, "from_pyfil": [3, 13], "extern": 10, "file": [10, 13], "pathlik": 13, "io": 13}, "objects": {"": [[11, 0, 0, "-", "randog"]], "randog": [[11, 1, 1, "", "DictItemExample"], [11, 1, 1, "", "Example"], [12, 0, 0, "-", "exceptions"], [13, 0, 0, "-", "factory"]], "randog.DictItemExample": [[11, 2, 1, "", "example"], [11, 2, 1, "", "prop_exists"]], "randog.exceptions": [[12, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[12, 4, 1, "", "message"]], "randog.factory": [[13, 1, 1, "", "DictItem"], [13, 1, 1, "", "Factory"], [13, 1, 1, "", "FromExampleContext"], [13, 6, 1, "", "by_callable"], [13, 6, 1, "", "by_iterator"], [13, 6, 1, "", "const"], [13, 6, 1, "", "from_example"], [13, 6, 1, "", "from_pyfile"], [13, 6, 1, "", "randbool"], [13, 6, 1, "", "randchoice"], [13, 6, 1, "", "randdate"], [13, 6, 1, "", "randdatetime"], [13, 6, 1, "", "randdecimal"], [13, 6, 1, "", "randdict"], [13, 6, 1, "", "randfloat"], [13, 6, 1, "", "randint"], [13, 6, 1, "", "randlist"], [13, 6, 1, "", "randstr"], [13, 6, 1, "", "randtime"], [13, 6, 1, "", "randtimedelta"], [13, 6, 1, "", "union"]], "randog.factory.DictItem": [[13, 2, 1, "", "factory"], [13, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[13, 5, 1, "", "infinity_iter"], [13, 5, 1, "", "iter"], [13, 5, 1, "", "next"], [13, 5, 1, "", "or_none"], [13, 5, 1, "", "post_process"]], "randog.factory.FromExampleContext": [[13, 5, 1, "", "child"], [13, 4, 1, "", "current_example"], [13, 4, 1, "", "custom_func"], [13, 5, 1, "", "customized"], [13, 4, 1, "", "example_is_customized"], [13, 4, 1, "", "examples"], [13, 5, 1, "", "from_example"], [13, 4, 1, "", "path"], [13, 5, 1, "", "recursive"], [13, 4, 1, "", "rnd"], [13, 5, 1, "", "root"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 1, "factori": [1, 2, 3, 4, 7, 9, 13], "gener": [1, 4, 10], "random": [1, 8, 10], "valu": 1, "element": [1, 4], "type": [1, 8], "nullabl": 1, "union": 1, "randomli": [1, 7], "choic": 1, "constanc": 1, "process": 1, "output": [0, 1], "custom": 1, "detail": 1, "how": 1, "build": 1, "individu": 1, "dict": 2, "randdict": 2, "from_exampl": [2, 4], "list": 4, "each": 4, "length": 4, "tupl": 4, "quick": 5, "start": 5, "instal": 5, "minim": 5, "us": [5, 9], "tip": 6, "usag": 6, "creat": 7, "json": 7, "decim": 7, "e": 7, "t": 7, "c": 7, "string": 7, "timelin": 8, "data": 8, "depend": 8, "previou": 8, "chang": 8, "smpl_datetim": 8, "str": 8, "As": 9, "iter": [0, 9], "obj": 10, "content": [10, 11], "indic": 10, "tabl": 10, "randog": [11, 12, 13], "packag": [11, 12, 13], "subpackag": 11, "submodul": 11, "modul": 11, "except": 12, "run": 0, "command": 0, "format": 0, "file": [0, 3], "extern": 3, "definit": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Output format": [[0, "output-format"]], "Output to file": [[0, "output-to-file"]], "Iteration": [[0, "iteration"]], "Construct Factories (generator of random values)": [[1, "construct-factories-generator-of-random-values"]], "Elemental types": [[1, "elemental-types"]], "Nullable": [[1, "nullable"]], "Union type": [[1, "union-type"]], "Randomly choice": [[1, "randomly-choice"]], "Constance": [[1, "constance"]], "Processing output": [[1, "processing-output"]], "Custom Factory": [[1, "custom-factory"]], "Details on how to build individual factories": [[1, "details-on-how-to-build-individual-factories"]], "Dict factory": [[2, "dict-factory"]], "Factory by randdict": [[2, "factory-by-randdict"]], "Factory by from_example": [[2, "factory-by-from-example"], [4, "factory-by-from-example"]], "External File Definition of Factory": [[3, "external-file-definition-of-factory"]], "List factory": [[4, "list-factory"]], "Each elements": [[4, "each-elements"]], "Length": [[4, "length"]], "Generate tuple": [[4, "generate-tuple"]], "Quick start": [[5, "quick-start"]], "Installation": [[5, "installation"]], "Minimal use": [[5, "minimal-use"]], "Tips (Usage)": [[6, "tips-usage"]], "Create JSON randomly": [[7, "create-json-randomly"]], "Decimal e.t.c.": [[7, "decimal-e-t-c"]], "Factory of JSON string": [[7, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[8, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[8, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[9, "use-factories"]], "As iterator": [[9, "as-iterator"]], "random-obj-generator": [[10, "random-obj-generator"]], "Contents:": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "randog package": [[11, "randog-package"]], "Subpackages and submodules": [[11, "subpackages-and-submodules"]], "Module contents": [[11, "module-randog"]], "randog.exceptions package": [[12, "module-randog.exceptions"]], "randog.factory package": [[13, "module-randog.factory"]]}, "indexentries": {"dictitemexample (class in randog)": [[11, "randog.DictItemExample"]], "example (class in randog)": [[11, "randog.Example"]], "example (randog.dictitemexample attribute)": [[11, "randog.DictItemExample.example"]], "module": [[11, "module-randog"], [12, "module-randog.exceptions"], [13, "module-randog.factory"]], "prop_exists (randog.dictitemexample attribute)": [[11, "randog.DictItemExample.prop_exists"]], "randog": [[11, "module-randog"]], "factoryconstructionerror": [[12, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[12, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[12, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[13, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[13, "randog.factory.Factory"]], "fromexamplecontext (class in randog.factory)": [[13, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[13, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[13, "randog.factory.by_iterator"]], "child() (randog.factory.fromexamplecontext method)": [[13, "randog.factory.FromExampleContext.child"]], "const() (in module randog.factory)": [[13, "randog.factory.const"]], "current_example (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.current_example"]], "custom_func (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.custom_func"]], "customized() (randog.factory.fromexamplecontext method)": [[13, "randog.factory.FromExampleContext.customized"]], "example_is_customized (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.example_is_customized"]], "examples (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[13, "randog.factory.DictItem.factory"]], "from_example() (in module randog.factory)": [[13, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[13, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[13, "randog.factory.from_pyfile"]], "infinity_iter() (randog.factory.factory method)": [[13, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[13, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[13, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[13, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[13, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[13, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[13, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[13, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[13, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[13, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[13, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[13, "randog.factory.randdict"]], "randfloat() (in module randog.factory)": [[13, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[13, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[13, "randog.factory.randlist"]], "randog.factory": [[13, "module-randog.factory"]], "randstr() (in module randog.factory)": [[13, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[13, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[13, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[13, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[13, "randog.factory.FromExampleContext.rnd"]], "root() (randog.factory.fromexamplecontext class method)": [[13, "randog.factory.FromExampleContext.root"]], "union() (in module randog.factory)": [[13, "randog.factory.union"]]}})