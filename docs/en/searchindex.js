Search.setIndex({"docnames": ["doc.construct_factories", "doc.dict_factory", "doc.list_factory", "doc.quickstart", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory"], "filenames": ["doc.construct_factories.rst", "doc.dict_factory.rst", "doc.list_factory.rst", "doc.quickstart.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst"], "titles": ["Construct Factories (generator of random values)", "Dict factory", "List factory", "Quick start", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package"], "terms": {"In": [0, 2, 5, 6], "randog": [0, 1, 2, 3, 5, 6, 7, 8], "i": [0, 1, 2, 5, 6, 7, 8, 11], "an": [0, 1, 2, 3, 6, 7, 11], "object": [0, 1, 3, 5, 9, 11], "The": [0, 1, 2, 6, 7, 11], "rule": [0, 11], "ar": [0, 1, 2, 4, 7, 11], "specifi": [0, 2, 5, 11], "when": [0, 2, 11], "creat": [0, 1, 2, 3, 4, 6, 7, 8, 11], "If": [0, 1, 2, 6, 11], "you": [0, 1, 2, 3, 6, 11], "do": [0, 11], "care": [0, 7], "about": 0, "condit": [0, 11], "other": [0, 1, 2, 11], "than": [0, 2], "can": [0, 1, 2, 3, 5, 6, 7, 11], "simpli": 0, "suppli": 0, "exampl": [0, 1, 2, 3, 4, 5, 6, 9, 11], "from_exampl": [0, 3, 6, 11], "want": [0, 2, 3, 6], "us": [0, 1, 2, 5, 6, 8, 11], "constructor": 0, "correspond": [0, 11], "import": [0, 1, 2, 3, 5, 6, 7, 11], "factory_a": 0, "generated_a": 0, "next": [0, 1, 2, 3, 5, 6, 7, 11], "assert": [0, 1, 2, 3, 7, 11], "isinst": [0, 1, 2, 3, 7, 11], "str": [0, 1, 2, 3, 5, 7, 10, 11], "factory_b": 0, "randstr": [0, 1, 2, 5, 7, 11], "length": [0, 1, 5, 7, 11], "16": [0, 1, 5, 6], "generated_b": 0, "len": [0, 2, 7, 11], "follow": [0, 3, 5, 6, 7], "argument": [0, 1, 11], "nonetyp": 0, "There": [0, 7], "dedic": 0, "function": [0, 1, 3, 5, 11], "const": [0, 11], "instead": [0, 1, 2], "none": [0, 11], "bool": [0, 2, 11], "randbool": [0, 2, 11], "true": [0, 6, 11], "fals": [0, 11], "int": [0, 1, 2, 3, 6, 11], "randint": [0, 1, 2, 5, 11], "integ": 0, "float": [0, 9, 11], "randfloat": [0, 11], "string": [0, 6, 11], "list": [0, 3, 6, 7, 11], "randlist": [0, 2, 11], "tupl": [0, 11], "dict": [0, 3, 6, 11], "randdict": [0, 2, 5, 11], "decim": [0, 11], "randdecim": [0, 2, 5, 11], "datetim": [0, 6, 11], "randdatetim": [0, 11], "date": [0, 11], "randdat": [0, 11], "time": [0, 1, 2, 6, 7, 11], "randtim": [0, 11], "timedelta": [0, 6, 11], "randtimedelta": [0, 11], "candid": 0, "or_non": [0, 11], "factory_nul": 0, "0": [0, 1, 2, 5, 6, 7, 9, 11], "1": [0, 2, 6, 7, 9, 11], "get": [0, 5], "alwai": [0, 1, 2], "return": [0, 1, 7, 11], "sever": 0, "method": [0, 6, 7], "determin": 0, "from": [0, 1, 5, 6], "multipl": [0, 2], "make": [0, 2, 6], "e": 0, "so": [0, 11], "boolean": 0, "_": 0, "rang": 0, "10": [0, 5, 7, 11], "which": [0, 2, 8, 11], "choos": [0, 11], "either": [0, 1], "each": [0, 1, 7, 11], "result": [0, 11], "chosen": [0, 11], "one": [0, 2, 6, 11], "specif": [0, 2, 4, 11], "randchoic": [0, 1, 6, 11], "allow": [0, 5, 11], "deni": 0, "same": [0, 2], "python": [0, 3, 5], "predefin": 0, "thi": [0, 1, 2, 3, 5, 6, 7, 11], "chang": [0, 11], "post_process": [0, 5, 6, 11], "format": [0, 5, 11], "50000": [0, 11], "decimal_len": [0, 2, 5, 11], "2": [0, 2, 5, 6, 11], "lambda": [0, 5, 6, 11], "x": [0, 11], "f": [0, 1, 11], "12": [0, 6, 11], "345": [0, 11], "67": [0, 11], "3": [0, 2, 3, 11], "153": [0, 11], "21": [0, 11], "90": [0, 11], "etc": [0, 3, 11], "provid": 0, "also": [0, 1, 2, 3, 5, 6, 7, 11], "context": [0, 11], "iter": [0, 2, 6, 8, 11], "includ": 0, "normal": [0, 2, 11], "would": [0, 1, 2, 6], "think": 0, "could": 0, "just": [0, 3, 7], "directli": [0, 11], "need": [0, 2], "itertool": 0, "uuid": [0, 3], "defin": 0, "class": [0, 9, 11], "mailaddressfactori": 0, "def": [0, 6], "self": 0, "com": 0, "http": 0, "doc": 0, "org": 0, "librari": 0, "html": 0, "count": 0, "id": [0, 2, 5], "uuid4": [0, 3], "name": [0, 1, 3, 5], "mail": 0, "set": [0, 2], "endswith": 0, "by_cal": [0, 11], "by_iter": [0, 6, 11], "A": [0, 11], "finit": 0, "onc": [0, 7], "termin": [0, 7], "cannot": [0, 5, 11], "ani": [0, 1, 9, 11], "more": [0, 11], "gener": [1, 3, 5, 6, 7, 11], "element": [1, 6, 8, 11], "randomli": [1, 2, 3, 4, 8, 11], "like": [1, 2, 6, 11], "built": 1, "two": 1, "wai": [1, 7], "code": [1, 2, 7], "look": [1, 2, 6], "dictitem": [1, 11], "sex": 1, "m": 1, "ag": [1, 3, 5], "kei": [1, 7, 11], "exist": 1, "random": [1, 2, 4, 7, 11], "100": [1, 2], "9": 1, "As": [1, 6, 8], "pass": [1, 3, 11], "valu": [1, 5, 6, 7, 8, 11], "keyword": [1, 11], "By": [1, 3], "possibl": [1, 5], "whether": 1, "dictionari": 1, "abov": [1, 6], "see": 1, "here": [1, 4], "how": [1, 8], "build": [1, 8], "dictitemexampl": [1, 9], "smith": 1, "22": 1, "Not": 1, "limit": 1, "given": [1, 2, 6], "output": [1, 5, 8], "similar": 1, "its": [1, 7, 11], "Or": 1, "wrap": 1, "mani": 2, "case": [2, 5, 6], "becaus": 2, "tailor": 2, "applic": 2, "record": 2, "singl": 2, "mai": [2, 7, 11], "appropri": 2, "rather": 2, "999_999": [2, 5], "price": [2, 5], "1000": [2, 5], "200": [2, 6], "record_list": 2, "th": 2, "longer": 2, "number": [2, 11], "repeat": 2, "last": 2, "el_factori": 2, "4": 2, "therefor": 2, "typic": 2, "where": 2, "ha": 2, "mean": [2, 11], "onli": [2, 11], "el": 2, "5": [2, 7, 11], "sure": 2, "map": [2, 11], "piec": 2, "attribut": 2, "type": [2, 5, 8, 11], "necessari": 2, "separ": 2, "schema": 2, "sinc": [2, 5], "omit": 2, "equal": [2, 11], "accept": [2, 11], "guarante": 2, "try": 3, "step": [3, 6], "prepar": 3, "8": [3, 11], "newer": 3, "pip": 3, "command": 3, "factori": [3, 6, 8, 9], "20": 3, "some": 4, "timelin": [4, 8], "data": [4, 8], "depend": [4, 8], "previou": [4, 5, 8], "json": [4, 8], "modul": [5, 8], "18": 5, "64": 5, "value_json": 5, "dump": 5, "we": 5, "wosar5ajmwhngj72": 5, "51": 5, "convert": 5, "default": [5, 11], "583085": 5, "754": 5, "were": 5, "begin": 5, "v": [5, 7, 11], "non": 6, "pseudo": 6, "seri": 6, "iter_datetim": 6, "start": [6, 8], "nxt": 6, "while": 6, "yield": 6, "iter_randomwalk": 6, "step_f": 6, "2022": 6, "hour": 6, "locat": 6, "hourli": 6, "01": 6, "01t12": 6, "00": 6, "13": 6, "14": 6, "15": 6, "seen": 6, "definit": 6, "increas": 6, "exactli": 6, "differ": 6, "randomwalk": 6, "thu": 6, "wa": 6, "d": 6, "isoformat": 6, "128": 7, "generated1": 7, "generated2": 7, "note": 7, "low": 7, "probabl": [7, 11], "thei": 7, "ident": 7, "usual": 7, "sugar": 7, "coat": 7, "syntax": 7, "although": 7, "itself": 7, "cnt": 7, "generated_valu": 7, "dispos": 7, "must": [7, 11], "regener": 7, "infinity_it": [7, 11], "foo": [7, 11], "bar": [7, 11], "k": [7, 11], "zip": [7, 11], "warn": 7, "run": 7, "below": 7, "continu": 7, "indefinit": 7, "caus": 7, "infinit": 7, "loop": 7, "handl": 7, "packag": 8, "help": 8, "quick": 8, "instal": 8, "minim": 8, "construct": [8, 11], "nullabl": 8, "union": [8, 11], "choic": 8, "constanc": 8, "process": [8, 11], "custom": [8, 11], "detail": 8, "individu": 8, "tip": 8, "usag": 8, "subpackag": 8, "submodul": 8, "index": 8, "except": 9, "prop_exist": [9, 11], "base": [9, 10, 11], "obj": 9, "sequenc": [9, 11], "factoryconstructionerror": [10, 11], "messag": 10, "properti": [10, 11], "item": 11, "arg": 11, "kwd": 11, "abc": 11, "t": 11, "infin": 11, "serv": 11, "NOT": 11, "size": 11, "paramet": 11, "abstract": 11, "accord": 11, "assembl": 11, "prob": 11, "rnd": 11, "whose": 11, "option": 11, "callabl": 11, "r": 11, "modifi": 11, "fromexamplecontext": 11, "path": 11, "custom_func": 11, "_customfunc": 11, "example_is_custom": 11, "examples_stack": 11, "child": 11, "current_exampl": 11, "recurs": 11, "classmethod": 11, "root": 11, "func": 11, "It": 11, "match": 11, "execut": 11, "first": 11, "new": 11, "recommend": 11, "receiv": 11, "kwarg": 11, "futur": 11, "updat": 11, "should": 11, "take": 11, "preced": 11, "over": 11, "rais": 11, "support": 11, "prop_tru": 11, "inconsist": 11, "weight": 11, "chose": [], "No": 11, "minimum": 11, "maximum": 11, "tzinfo": 11, "liter": 11, "fix": 11, "awar": 11, "correct": 11, "otherwis": 11, "supportsfloat": 11, "p_inf": 11, "n_inf": 11, "nan": 11, "part": 11, "posit": 11, "neg": 11, "items_dict": 11, "hashabl": 11, "ignor": 11, "_base": 11, "_list": 11, "items_list": 11, "charset": 11, "charact": 11, "timezon": 11, "inform": 11, "unit": 11, "atom": 11}, "objects": {"": [[9, 0, 0, "-", "randog"]], "randog": [[9, 1, 1, "", "DictItemExample"], [9, 1, 1, "", "Example"], [10, 0, 0, "-", "exceptions"], [11, 0, 0, "-", "factory"]], "randog.DictItemExample": [[9, 2, 1, "", "example"], [9, 2, 1, "", "prop_exists"]], "randog.exceptions": [[10, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[10, 4, 1, "", "message"]], "randog.factory": [[11, 1, 1, "", "DictItem"], [11, 1, 1, "", "Factory"], [11, 1, 1, "", "FromExampleContext"], [11, 6, 1, "", "by_callable"], [11, 6, 1, "", "by_iterator"], [11, 6, 1, "", "const"], [11, 6, 1, "", "from_example"], [11, 6, 1, "", "randbool"], [11, 6, 1, "", "randchoice"], [11, 6, 1, "", "randdate"], [11, 6, 1, "", "randdatetime"], [11, 6, 1, "", "randdecimal"], [11, 6, 1, "", "randdict"], [11, 6, 1, "", "randfloat"], [11, 6, 1, "", "randint"], [11, 6, 1, "", "randlist"], [11, 6, 1, "", "randstr"], [11, 6, 1, "", "randtime"], [11, 6, 1, "", "randtimedelta"], [11, 6, 1, "", "union"]], "randog.factory.DictItem": [[11, 2, 1, "", "factory"], [11, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[11, 5, 1, "", "infinity_iter"], [11, 5, 1, "", "iter"], [11, 5, 1, "", "next"], [11, 5, 1, "", "or_none"], [11, 5, 1, "", "post_process"]], "randog.factory.FromExampleContext": [[11, 5, 1, "", "child"], [11, 4, 1, "", "current_example"], [11, 4, 1, "", "custom_func"], [11, 5, 1, "", "customized"], [11, 4, 1, "", "example_is_customized"], [11, 4, 1, "", "examples"], [11, 5, 1, "", "from_example"], [11, 4, 1, "", "path"], [11, 5, 1, "", "recursive"], [11, 4, 1, "", "rnd"], [11, 5, 1, "", "root"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 0, "factori": [0, 1, 2, 5, 7, 11], "gener": [0, 2, 8], "random": [0, 6, 8], "valu": 0, "element": [0, 2], "type": [0, 6], "nullabl": 0, "union": 0, "randomli": [0, 5], "choic": 0, "constanc": 0, "process": 0, "output": 0, "custom": 0, "detail": 0, "how": 0, "build": 0, "individu": 0, "dict": 1, "randdict": 1, "from_exampl": [1, 2], "list": 2, "each": 2, "length": 2, "tupl": 2, "quick": 3, "start": 3, "instal": 3, "minim": 3, "us": [3, 7], "tip": 4, "usag": 4, "creat": 5, "json": 5, "decim": 5, "e": 5, "t": 5, "c": 5, "string": 5, "timelin": 6, "data": 6, "depend": 6, "previou": 6, "chang": 6, "smpl_datetim": 6, "str": 6, "As": 7, "iter": 7, "obj": 8, "content": [8, 9], "indic": 8, "tabl": 8, "randog": [9, 10, 11], "packag": [9, 10, 11], "subpackag": 9, "submodul": 9, "modul": 9, "except": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Construct Factories (generator of random values)": [[0, "construct-factories-generator-of-random-values"]], "Elemental types": [[0, "elemental-types"]], "Nullable": [[0, "nullable"]], "Union type": [[0, "union-type"]], "Randomly choice": [[0, "randomly-choice"]], "Constance": [[0, "constance"]], "Processing output": [[0, "processing-output"]], "Custom Factory": [[0, "custom-factory"]], "Details on how to build individual factories": [[0, "details-on-how-to-build-individual-factories"]], "Dict factory": [[1, "dict-factory"]], "Factory by randdict": [[1, "factory-by-randdict"]], "Factory by from_example": [[1, "factory-by-from-example"], [2, "factory-by-from-example"]], "List factory": [[2, "list-factory"]], "Each elements": [[2, "each-elements"]], "Length": [[2, "length"]], "Generate tuple": [[2, "generate-tuple"]], "Quick start": [[3, "quick-start"]], "Installation": [[3, "installation"]], "Minimal use": [[3, "minimal-use"]], "Tips (Usage)": [[4, "tips-usage"]], "Create JSON randomly": [[5, "create-json-randomly"]], "Decimal e.t.c.": [[5, "decimal-e-t-c"]], "Factory of JSON string": [[5, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[6, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[6, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[7, "use-factories"]], "As iterator": [[7, "as-iterator"]], "random-obj-generator": [[8, "random-obj-generator"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "randog package": [[9, "randog-package"]], "Subpackages and submodules": [[9, "subpackages-and-submodules"]], "Module contents": [[9, "module-randog"]], "randog.exceptions package": [[10, "module-randog.exceptions"]], "randog.factory package": [[11, "module-randog.factory"]]}, "indexentries": {"dictitemexample (class in randog)": [[9, "randog.DictItemExample"]], "example (class in randog)": [[9, "randog.Example"]], "example (randog.dictitemexample attribute)": [[9, "randog.DictItemExample.example"]], "module": [[9, "module-randog"], [10, "module-randog.exceptions"], [11, "module-randog.factory"]], "prop_exists (randog.dictitemexample attribute)": [[9, "randog.DictItemExample.prop_exists"]], "randog": [[9, "module-randog"]], "factoryconstructionerror": [[10, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[10, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[10, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[11, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[11, "randog.factory.Factory"]], "fromexamplecontext (class in randog.factory)": [[11, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[11, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[11, "randog.factory.by_iterator"]], "child() (randog.factory.fromexamplecontext method)": [[11, "randog.factory.FromExampleContext.child"]], "const() (in module randog.factory)": [[11, "randog.factory.const"]], "current_example (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.current_example"]], "custom_func (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.custom_func"]], "customized() (randog.factory.fromexamplecontext method)": [[11, "randog.factory.FromExampleContext.customized"]], "example_is_customized (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.example_is_customized"]], "examples (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[11, "randog.factory.DictItem.factory"]], "from_example() (in module randog.factory)": [[11, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[11, "randog.factory.FromExampleContext.from_example"]], "infinity_iter() (randog.factory.factory method)": [[11, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[11, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[11, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[11, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[11, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[11, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[11, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[11, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[11, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[11, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[11, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[11, "randog.factory.randdict"]], "randfloat() (in module randog.factory)": [[11, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[11, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[11, "randog.factory.randlist"]], "randog.factory": [[11, "module-randog.factory"]], "randstr() (in module randog.factory)": [[11, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[11, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[11, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[11, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[11, "randog.factory.FromExampleContext.rnd"]], "root() (randog.factory.fromexamplecontext class method)": [[11, "randog.factory.FromExampleContext.root"]], "union() (in module randog.factory)": [[11, "randog.factory.union"]]}})