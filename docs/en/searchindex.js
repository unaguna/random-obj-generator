Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.list_factory", "doc.quickstart", "doc.sqlalchemy", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.list_factory.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "datetime Mode", "decimal Mode", "float Mode", "int Mode", "str Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "List factory", "Quick start", "Factory from sqlalchemy", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 19], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 25], "an": [2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 24, 25], "object": [3, 4, 9, 10, 15, 16, 18, 22, 24, 25], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 24], "rule": [3, 9, 24], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 20, 24], "specifi": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 18, 24, 25], "when": [3, 5, 6, 9, 12, 13, 14, 16, 24], "creat": [2, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25], "If": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19, 24, 25], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 24, 25], "do": [9, 13, 24], "care": [9, 20], "about": 9, "condit": [0, 9, 24], "other": [3, 6, 9, 10, 11, 14, 16, 24, 25], "than": [4, 9, 14, 16, 24], "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 24], "simpli": [9, 16], "suppli": 9, "exampl": [0, 3, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25], "from_exampl": [2, 9, 12, 15, 19, 24, 25], "want": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 16, 19, 25], "us": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 18, 19, 21, 24, 25], "constructor": 9, "correspond": [9, 10, 24], "import": [2, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25], "factory_a": 9, "generated_a": 9, "next": [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 24, 25], "assert": [9, 10, 11, 12, 13, 14, 15, 16, 20, 24], "isinst": [9, 10, 12, 14, 15, 16, 20, 24], "str": [0, 3, 9, 10, 12, 14, 15, 16, 18, 20, 23, 24, 25], "factory_b": 9, "randstr": [9, 10, 14, 18, 20, 24], "length": [5, 8, 9, 10, 16, 18, 20, 24], "16": [9, 10, 18, 19], "generated_b": 9, "len": [0, 5, 9, 14, 16, 20, 24], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 18, 19, 20], "argument": [9, 10, 11, 16, 21, 24], "nonetyp": 9, "There": [3, 9, 20], "dedic": 9, "function": [9, 10, 11, 15, 18, 24, 25], "const": [9, 24], "instead": [9, 10, 14, 16, 25], "none": [9, 16, 24, 25], "bool": [0, 9, 14, 24, 25], "randbool": [9, 14, 24], "true": [0, 1, 9, 10, 16, 19, 24, 25], "fals": [1, 9, 16, 24, 25], "int": [0, 6, 9, 10, 14, 15, 16, 19, 24], "randint": [9, 10, 14, 16, 18, 24], "integ": [6, 7, 8, 9, 16, 19, 25], "float": [0, 7, 9, 16, 22, 24], "randfloat": [6, 9, 24], "string": [3, 8, 9, 16, 19, 24, 25], "list": [1, 2, 3, 4, 5, 6, 7, 9, 15, 19, 20, 24], "randlist": [9, 14, 24], "tupl": [9, 24], "dict": [2, 9, 15, 19, 24, 25], "randdict": [9, 14, 16, 18, 24], "decim": [0, 6, 7, 9, 24], "randdecim": [5, 9, 14, 18, 24], "datetim": [0, 9, 16, 19, 24], "randdatetim": [4, 9, 24], "date": [0, 4, 9, 16, 24], "randdat": [9, 24], "time": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 14, 16, 19, 20, 24], "randtim": [9, 24], "timedelta": [0, 4, 9, 19, 24], "randtimedelta": [9, 24], "candid": [5, 6, 9], "or_non": [9, 24], "factory_nul": 9, "0": [1, 5, 6, 7, 9, 10, 11, 14, 16, 18, 19, 20, 22, 24], "1": [5, 6, 9, 11, 13, 14, 16, 19, 20, 22, 24], "get": [9, 18], "alwai": [9, 10, 14, 16], "return": [9, 10, 11, 20, 24, 25], "sever": [0, 3, 9], "method": [9, 19, 20], "determin": 9, "from": [9, 10, 11, 13, 18, 19, 25], "multipl": [1, 2, 4, 5, 6, 7, 9, 14, 24], "make": [9, 14, 19], "e": 9, "so": [1, 4, 5, 6, 7, 9, 12, 13, 16, 24], "boolean": [1, 9, 16], "_": 9, "rang": [4, 5, 6, 7, 8, 9], "10": [0, 1, 2, 4, 5, 6, 7, 9, 16, 18, 20, 24], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 21, 24], "choos": [9, 24], "either": [9, 10], "each": [0, 1, 2, 3, 9, 10, 11, 16, 20, 24, 25], "result": [9, 24], "chosen": [9, 24], "one": [1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 14, 19, 24], "specif": [0, 4, 5, 6, 9, 14, 17, 24], "randchoic": [9, 10, 11, 16, 19, 24], "allow": [9, 18, 24], "deni": 9, "same": [3, 9, 11, 14, 16, 18], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 18], "predefin": 9, "thi": [3, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 24, 25], "chang": [3, 4, 9, 16, 24], "post_process": [9, 16, 18, 19, 24], "format": [0, 1, 2, 4, 5, 6, 7, 8, 9, 18, 24], "50000": [9, 24], "decimal_len": [9, 14, 18, 24], "2": [0, 5, 6, 9, 11, 13, 14, 16, 18, 19, 24], "lambda": [9, 16, 18, 19, 24], "x": [9, 24], "f": [9, 10, 24], "12": [0, 9, 19, 24], "345": [9, 24], "67": [9, 24], "3": [0, 3, 8, 9, 13, 14, 15, 16, 24], "153": [9, 24], "21": [9, 24], "90": [9, 24], "etc": [9, 15, 24], "provid": 9, "also": [0, 2, 4, 6, 9, 10, 12, 14, 15, 16, 18, 19, 20, 24], "context": [9, 24], "iter": [0, 9, 14, 19, 21, 24], "includ": [3, 5, 6, 9, 16], "normal": [3, 9, 14, 24], "would": [9, 10, 11, 13, 14, 16, 19], "think": 9, "could": 9, "just": [1, 4, 5, 6, 7, 9, 15, 20], "directli": [9, 12, 24], "need": [9, 14], "itertool": 9, "uuid": [2, 9, 12, 15], "defin": [2, 3, 9, 24], "class": [9, 11, 16, 22, 24, 25], "mailaddressfactori": 9, "def": [9, 11, 19], "self": 9, "com": 9, "http": 9, "doc": 9, "org": 9, "librari": 9, "html": 9, "count": 9, "id": [9, 14, 16, 18, 25], "uuid4": [2, 9, 12, 15], "name": [2, 9, 10, 12, 15, 16, 18, 25], "mail": 9, "set": [9, 14], "endswith": 9, "by_cal": [9, 24], "by_iter": [9, 19, 24], "A": [9, 16, 24], "finit": 9, "onc": [9, 20], "termin": [9, 20], "cannot": [9, 16, 18, 24], "ani": [0, 9, 10, 11, 16, 22, 24, 25], "more": [0, 9, 24], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 24, 25], "element": [3, 10, 16, 19, 21, 24], "randomli": [10, 14, 15, 16, 17, 21, 24, 25], "like": [1, 4, 5, 6, 7, 10, 11, 14, 16, 19, 24], "built": [10, 11, 16], "two": [3, 10, 11, 16], "wai": [10, 11, 16, 20], "code": [2, 10, 11, 12, 14, 16, 20], "look": [10, 11, 14, 16, 19], "dictitem": [10, 11, 13, 24], "sex": 10, "m": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 25], "ag": [2, 10, 12, 15, 16, 18], "kei": [10, 16, 20, 24], "exist": [3, 10, 13], "random": [10, 14, 17, 20, 24, 25], "100": [0, 5, 6, 7, 10, 14], "9": 10, "As": [10, 16, 19, 21], "pass": [10, 15, 16, 24], "valu": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 16, 18, 19, 20, 21, 24, 25], "keyword": [10, 24], "By": [4, 10, 11, 15, 16], "possibl": [10, 16, 18], "whether": 10, "dictionari": [10, 25], "abov": [3, 10, 13, 16, 19], "see": [0, 2, 9, 10, 12, 16, 19], "here": [10, 16, 17], "how": [10, 16, 21], "build": [10, 16, 21], "dictitemexampl": [10, 11, 22], "smith": 10, "22": 10, "Not": 10, "limit": [5, 10], "given": [10, 14, 16, 19], "output": [0, 1, 2, 4, 5, 6, 7, 10, 18, 21], "similar": 10, "its": [10, 20, 24], "Or": 10, "wrap": 10, "mani": 14, "case": [1, 2, 5, 14, 16, 18, 19], "becaus": 14, "tailor": 14, "applic": 14, "record": [2, 14, 16], "singl": [3, 14], "mai": [1, 2, 13, 14, 16, 20, 24], "appropri": 14, "rather": [4, 14], "999_999": [14, 18], "price": [14, 18], "1000": [5, 14, 18], "200": [14, 19], "record_list": 14, "th": 14, "longer": 14, "number": [5, 6, 14, 24, 25], "repeat": [1, 2, 3, 4, 5, 6, 7, 14], "last": 14, "el_factori": 14, "4": [6, 14, 16], "therefor": 14, "typic": 14, "where": 14, "ha": 14, "mean": [14, 24], "onli": [4, 13, 14, 24], "el": 14, "5": [1, 8, 14, 20, 24], "sure": 14, "map": [14, 24, 25], "piec": 14, "attribut": 14, "type": [0, 3, 11, 13, 14, 18, 21, 24, 25], "necessari": [1, 14], "separ": [2, 3, 14], "schema": 14, "sinc": [3, 14, 18], "omit": [2, 12, 14], "equal": [14, 24], "accept": [14, 24], "guarante": [13, 14], "try": 15, "step": [15, 19], "prepar": 15, "8": [8, 11, 15, 24], "newer": 15, "pip": 15, "command": [1, 3, 4, 5, 6, 7, 8, 12, 14, 15, 18, 21], "factori": [2, 15, 19, 21, 22, 25], "20": [0, 2, 12, 15, 16], "some": [9, 16, 17], "timelin": [17, 21], "data": [2, 13, 17, 21], "depend": [17, 21], "previou": [16, 17, 18, 21], "json": [1, 2, 3, 4, 5, 6, 17, 21], "modul": [18, 21], "18": 18, "64": 18, "value_json": 18, "dump": 18, "we": 18, "wosar5ajmwhngj72": 18, "51": [0, 18], "convert": [3, 16, 18], "default": [1, 4, 5, 6, 11, 16, 18, 24, 25], "583085": 18, "754": 18, "were": 18, "begin": 18, "v": [18, 20, 24], "non": 19, "pseudo": 19, "seri": 19, "iter_datetim": 19, "start": [19, 21], "nxt": 19, "while": [2, 19], "yield": 19, "iter_randomwalk": 19, "step_f": 19, "2022": [0, 19], "hour": 19, "locat": 19, "hourli": 19, "01": [0, 4, 5, 6, 19], "01t12": [4, 19], "00": [4, 19], "13": 19, "14": 19, "15": [5, 6, 19], "seen": 19, "definit": [0, 2, 16, 19, 21, 24], "increas": 19, "exactli": 19, "differ": [3, 19], "randomwalk": 19, "thu": 19, "wa": [12, 19, 24], "d": [4, 19], "isoformat": 19, "128": 20, "generated1": 20, "generated2": 20, "note": [16, 20], "low": 20, "probabl": [1, 4, 5, 6, 7, 11, 16, 20, 24], "thei": [16, 20, 24], "ident": 20, "usual": 20, "sugar": 20, "coat": 20, "syntax": 20, "although": [9, 20], "itself": 20, "cnt": 20, "generated_valu": 20, "dispos": 20, "must": [2, 20, 24], "regener": 20, "infinity_it": [20, 24], "foo": [20, 24], "bar": [20, 24], "k": [16, 20, 24], "zip": [20, 24], "warn": 20, "run": [2, 20, 21], "below": [2, 3, 20], "continu": 20, "indefinit": 20, "caus": 20, "infinit": 20, "loop": 20, "handl": 20, "packag": 21, "help": 21, "quick": 21, "instal": 21, "minim": 21, "construct": [21, 24], "nullabl": [16, 21], "union": [21, 24, 25], "choic": 21, "constanc": 21, "process": [1, 21, 24], "custom": [16, 21, 25], "detail": [3, 21], "individu": 21, "tip": 21, "usag": 21, "subpackag": 21, "submodul": 21, "index": 21, "except": 22, "prop_exist": [22, 24], "base": [16, 22, 23, 24, 25], "obj": 22, "sequenc": [22, 24], "factoryconstructionerror": [23, 24], "messag": 23, "properti": [23, 24], "item": [16, 24], "arg": 24, "kwd": 24, "abc": 24, "t": 24, "infin": [5, 6, 24], "serv": 24, "NOT": 24, "size": 24, "paramet": [24, 25], "abstract": 24, "accord": [0, 24], "assembl": 24, "prob": 24, "rnd": [24, 25], "whose": [16, 24], "option": [14, 18, 21, 24, 25], "callabl": 24, "r": [1, 2, 3, 4, 5, 6, 7, 16, 24], "modifi": 24, "fromexamplecontext": 24, "path": 24, "custom_func": [16, 24, 25], "_customfunc": 24, "example_is_custom": [], "examples_stack": 24, "child": 24, "current_exampl": 24, "recurs": 24, "classmethod": [], "root": [], "func": 24, "It": [1, 2, 16, 24], "match": [24, 25], "execut": [0, 3, 12, 14, 18, 24], "first": 24, "new": 24, "recommend": 24, "receiv": 24, "kwarg": [24, 25], "futur": [16, 24], "updat": 24, "should": 24, "take": 24, "preced": 24, "over": 24, "rais": 24, "support": 24, "prop_tru": [1, 24], "inconsist": 24, "weight": [11, 24], "chose": [], "No": [2, 24], "minimum": [4, 5, 6, 7, 24], "maximum": [4, 5, 6, 7, 13, 24], "tzinfo": 24, "liter": 24, "fix": 24, "awar": 24, "correct": 24, "otherwis": 24, "supportsfloat": 24, "p_inf": 24, "n_inf": 24, "nan": [5, 6, 24], "part": [5, 6, 24], "posit": [5, 6, 13, 24], "neg": [5, 6, 24], "items_dict": 24, "hashabl": 24, "ignor": [16, 24], "_base": 24, "_list": 24, "items_list": 24, "charset": [8, 24], "charact": [8, 24], "timezon": [], "inform": [], "unit": 24, "atom": 24, "simplest": [1, 2, 4, 5, 6, 7, 8], "factory_definition_fil": [], "filenam": [2, 24], "instanc": [2, 25], "variabl": [2, 12], "print": 3, "repr": 3, "befor": 3, "standard": [3, 4, 6], "after": [3, 6, 13], "being": 3, "For": [0, 3, 16, 25], "factory_def": [0, 2, 3, 12], "py": [0, 2, 3, 12], "out": 3, "txt": 3, "veri": 3, "practic": 3, "thing": 3, "done": [3, 11, 14, 18], "redirect": 3, "featur": [3, 16], "shell": 3, "combin": 3, "describ": [0, 3, 12], "them": [2, 3, 12], "l": [1, 2, 3, 4, 5, 6, 7], "repeatedli": [3, 16], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 16], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 4, 5, 6, 7, 9, 12], "far": 12, "load": 12, "runtim": 12, "written": [6, 12], "bound": 12, "save": 12, "under": 12, "your": 12, "from_pyfil": [12, 24], "extern": 21, "file": [0, 2, 21, 24], "pathlik": 24, "io": 24, "notimpl": 24, "behav": 24, "until": 24, "enumer": [9, 11], "randenum": [9, 24], "particular": [9, 16], "enum": [9, 24], "myenum": 11, "custom_chain_length": 24, "signal_terminate_custom": 24, "terminate_custom_chain": 24, "enum_cl": 24, "bias": 11, "elif": 11, "commonli": 9, "increment": [9, 16, 19, 24], "wish": 13, "initi": 13, "ad": 13, "databas": [2, 13, 16], "initial_valu": [13, 24], "101": 13, "31": 13, "102": 13, "103": 13, "fit": 13, "sign": 13, "32": 13, "bit": 13, "add": [19, 25], "auto": 19, "field": [19, 25], "special": 21, "sequenti": 24, "reach": 24, "reset": 24, "satisfi": [1, 4, 5, 6, 7, 16, 24], "sqlalchemi": [9, 10, 22], "enabl": [], "experiment": 16, "remov": 16, "significantli": 16, "variou": 16, "appli": 16, "mapped_column": 16, "orm": [16, 25], "declarative_bas": [16, 25], "user": [16, 25], "__tablename__": [16, 25], "primary_kei": [16, 25], "autoincr": [16, 25], "least": 16, "work": 16, "biginteg": 16, "numer": [6, 16], "text": 16, "timestamp": 16, "interv": 16, "doe": [6, 16], "all": [3, 16], "rdb": 16, "pleas": 16, "relationship": 16, "foreign": 16, "constraint": 16, "even": 16, "uniqu": [2, 16], "primari": 16, "duplic": 16, "known": 16, "greater": 16, "intuit": 16, "birthdai": 16, "problem": [6, 16], "check": 16, "shown": 2, "accomplish": [], "deriv": 25, "column": 25, "model": [10, 16, 25], "as_dict": [10, 16, 25], "factory_from_column": 25, "60": 16, "overridden": 16, "second": 16, "respect": 16, "for_exampl": [], "inspect": 16, "col": 16, "attr": 16, "override_column": 25, "obtain": [1, 2, 25], "independ": 16, "reiter": 16, "automat": 16, "manual": 16, "group_id": 16, "respond": 16, "regular": 16, "manag": 16, "order": 16, "actual": 16, "coe": [], "advanc": 16, "basic": 0, "further": 0, "avail": [0, 2, 3], "page": 0, "42": 0, "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 5], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 12], "common": [0, 1, 2, 4, 5, 6, 7, 8], "mode": [3, 12, 21], "50": 1, "lower": 1, "program": [1, 6], "anoth": 1, "languag": [1, 6], "desir": 1, "point": [4, 6], "p": [5, 6], "inf": [5, 6], "prob_p_inf": [5, 6], "n": [5, 6], "prob_n_inf": [5, 6], "prob_nan": [5, 6], "behavior": [4, 5, 6], "left": [4, 5, 6], "between": [4, 5, 6], "1e": [5, 6], "have": 6, "abil": 6, "place": [5, 6], "digit": 6, "repres": 6, "read": 6, "equival": 2, "test": 2, "util": 2, "o": 2, "out_001": 2, "out_002": 2, "decimal_length": 5, "often": 5, "245": 5, "iso": 4, "fmt": 4, "8601": 4, "form": 4, "strftime": 4, "strptime": 4, "2021": 4, "01t00": 4, "y": 4, "h": 4, "simultan": 4, "elaps": 4, "certain": 4}, "objects": {"": [[22, 0, 0, "-", "randog"]], "randog": [[22, 1, 1, "", "DictItemExample"], [22, 1, 1, "", "Example"], [23, 0, 0, "-", "exceptions"], [24, 0, 0, "-", "factory"], [25, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[22, 2, 1, "", "example"], [22, 2, 1, "", "prop_exists"]], "randog.exceptions": [[23, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[23, 4, 1, "", "message"]], "randog.factory": [[24, 1, 1, "", "DictItem"], [24, 1, 1, "", "Factory"], [24, 1, 1, "", "FromExampleContext"], [24, 6, 1, "", "by_callable"], [24, 6, 1, "", "by_iterator"], [24, 6, 1, "", "const"], [24, 6, 1, "", "from_example"], [24, 6, 1, "", "from_pyfile"], [24, 6, 1, "", "increment"], [24, 6, 1, "", "randbool"], [24, 6, 1, "", "randchoice"], [24, 6, 1, "", "randdate"], [24, 6, 1, "", "randdatetime"], [24, 6, 1, "", "randdecimal"], [24, 6, 1, "", "randdict"], [24, 6, 1, "", "randenum"], [24, 6, 1, "", "randfloat"], [24, 6, 1, "", "randint"], [24, 6, 1, "", "randlist"], [24, 6, 1, "", "randstr"], [24, 6, 1, "", "randtime"], [24, 6, 1, "", "randtimedelta"], [24, 6, 1, "", "union"]], "randog.factory.DictItem": [[24, 2, 1, "", "factory"], [24, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[24, 5, 1, "", "infinity_iter"], [24, 5, 1, "", "iter"], [24, 5, 1, "", "next"], [24, 5, 1, "", "or_none"], [24, 5, 1, "", "post_process"]], "randog.factory.FromExampleContext": [[24, 4, 1, "", "current_example"], [24, 4, 1, "", "custom_chain_length"], [24, 4, 1, "", "custom_funcs"], [24, 4, 1, "", "examples"], [24, 5, 1, "", "from_example"], [24, 4, 1, "", "path"], [24, 5, 1, "", "recursive"], [24, 4, 1, "", "rnd"], [24, 4, 1, "", "signal_terminate_custom"], [24, 5, 1, "", "terminate_custom_chain"]], "randog.sqlalchemy": [[25, 6, 1, "", "custom"], [25, 6, 1, "", "factory"], [25, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 9, "factori": [9, 10, 11, 12, 13, 14, 16, 18, 20, 24], "gener": [9, 14, 16, 21], "random": [9, 19, 21], "valu": 9, "element": [9, 14], "type": [9, 16, 19], "nullabl": 9, "union": 9, "randomli": [9, 18], "choic": 9, "constanc": 9, "process": 9, "output": [3, 9], "custom": 9, "detail": [0, 9], "how": 9, "build": 9, "individu": [9, 16], "dict": [10, 16], "randdict": 10, "from_exampl": [10, 11, 14, 16], "list": 14, "each": 14, "length": 14, "tupl": 14, "quick": 15, "start": 15, "instal": 15, "minim": 15, "us": [15, 20], "tip": 17, "usag": 17, "creat": 18, "json": 18, "decim": [5, 18], "e": 18, "t": 18, "c": 18, "string": 18, "timelin": 19, "data": 19, "depend": 19, "previou": 19, "chang": 19, "smpl_datetim": 19, "str": [8, 19], "As": 20, "iter": [3, 20], "obj": 21, "content": [21, 22], "indic": 21, "tabl": 21, "randog": [16, 22, 23, 24, 25], "packag": [22, 23, 24, 25], "subpackag": 22, "submodul": 22, "modul": 22, "except": 23, "run": 0, "command": 0, "format": 3, "file": [3, 12], "extern": 12, "definit": 12, "enum": 11, "randenum": 11, "special": 9, "increment": 13, "integ": 13, "from": 16, "sqlalchemi": [16, 25], "support": 16, "column": 16, "limit": 16, "model": [], "instanc": 16, "some": [], "field": 16, "specifi": 16, "mode": [0, 1, 2, 4, 5, 6, 7, 8], "argument": [0, 1, 2, 4, 5, 6, 7, 8], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8], "int": 7, "float": 6, "datetim": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"]], "byfile Mode": [[2, "byfile-mode"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "datetime Mode": [[4, "datetime-mode"]], "decimal Mode": [[5, "decimal-mode"]], "float Mode": [[6, "float-mode"]], "int Mode": [[7, "int-mode"]], "str Mode": [[8, "str-mode"]], "Construct Factories (generator of random values)": [[9, "construct-factories-generator-of-random-values"]], "Elemental types": [[9, "elemental-types"]], "Nullable": [[9, "nullable"]], "Union type": [[9, "union-type"]], "Randomly choice": [[9, "randomly-choice"]], "Constance": [[9, "constance"]], "Processing output": [[9, "processing-output"]], "Custom Factory": [[9, "custom-factory"]], "Details on how to build individual factories": [[9, "details-on-how-to-build-individual-factories"]], "Special Factory": [[9, "special-factory"]], "Dict factory": [[10, "dict-factory"]], "Factory by randdict": [[10, "factory-by-randdict"]], "Factory by from_example": [[10, "factory-by-from-example"], [11, "factory-by-from-example"], [14, "factory-by-from-example"], [16, "factory-by-from-example"]], "Enum factory": [[11, "enum-factory"]], "Factory by randenum": [[11, "factory-by-randenum"]], "External File Definition of Factory": [[12, "external-file-definition-of-factory"]], "Incremental integer factory": [[13, "incremental-integer-factory"]], "List factory": [[14, "list-factory"]], "Each elements": [[14, "each-elements"]], "Length": [[14, "length"]], "Generate tuple": [[14, "generate-tuple"]], "Quick start": [[15, "quick-start"]], "Installation": [[15, "installation"]], "Minimal use": [[15, "minimal-use"]], "Factory from sqlalchemy": [[16, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[16, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[16, "supported-column-type"]], "Limitations": [[16, "limitations"]], "Specify factories for individual fields": [[16, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[16, "generate-a-dict-instance"]], "Tips (Usage)": [[17, "tips-usage"]], "Create JSON randomly": [[18, "create-json-randomly"]], "Decimal e.t.c.": [[18, "decimal-e-t-c"]], "Factory of JSON string": [[18, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[19, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[19, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[20, "use-factories"]], "As iterator": [[20, "as-iterator"]], "random-obj-generator": [[21, "random-obj-generator"]], "Contents:": [[21, null]], "Indices and tables": [[21, "indices-and-tables"]], "randog package": [[22, "randog-package"]], "Subpackages and submodules": [[22, "subpackages-and-submodules"]], "Module contents": [[22, "module-randog"]], "randog.exceptions package": [[23, "module-randog.exceptions"]], "randog.factory package": [[24, "module-randog.factory"]], "randog.sqlalchemy package": [[25, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[22, "randog.DictItemExample"]], "example (class in randog)": [[22, "randog.Example"]], "example (randog.dictitemexample attribute)": [[22, "randog.DictItemExample.example"]], "module": [[22, "module-randog"], [23, "module-randog.exceptions"], [24, "module-randog.factory"], [25, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[22, "randog.DictItemExample.prop_exists"]], "randog": [[22, "module-randog"]], "factoryconstructionerror": [[23, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[23, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[23, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[24, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[24, "randog.factory.Factory"]], "fromexamplecontext (class in randog.factory)": [[24, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[24, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[24, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[24, "randog.factory.const"]], "current_example (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.custom_funcs"]], "examples (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[24, "randog.factory.DictItem.factory"]], "from_example() (in module randog.factory)": [[24, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[24, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[24, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[24, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[24, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[24, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[24, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[24, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[24, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[24, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[24, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[24, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[24, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[24, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[24, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[24, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[24, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[24, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[24, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[24, "randog.factory.randlist"]], "randog.factory": [[24, "module-randog.factory"]], "randstr() (in module randog.factory)": [[24, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[24, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[24, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[24, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.rnd"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[24, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[24, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[24, "randog.factory.union"]], "custom() (in module randog.sqlalchemy)": [[25, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[25, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[25, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[25, "module-randog.sqlalchemy"]]}})