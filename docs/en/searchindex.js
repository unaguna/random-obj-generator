Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.dice", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.as_command.time", "doc.as_command.timedelta", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.iterrange_factory", "doc.list_factory", "doc.logging", "doc.quickstart", "doc.sqlalchemy", "doc.str_factory", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "doc.write_generated", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.dice.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.as_command.timedelta.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.iterrange_factory.rst", "doc.list_factory.rst", "doc.logging.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.str_factory.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "doc.write_generated.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "dice Mode", "float Mode", "int Mode", "str Mode", "time Mode", "timedelta Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "Iteration of range", "List factory", "Logging", "Quick start", "Factory from sqlalchemy", "Str factory", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "Output Generated Values", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 22, 25, 26, 28], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33], "an": [2, 3, 4, 5, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 30, 32, 33], "object": [2, 3, 4, 5, 11, 12, 13, 14, 16, 21, 22, 25, 30, 32, 33], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 25, 26, 27, 28, 32], "rule": [3, 13, 32], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 22, 24, 27, 30, 32], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 28, 30, 32, 33], "when": [2, 3, 6, 8, 9, 13, 16, 17, 18, 19, 20, 22, 23, 28, 32], "creat": [2, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33], "If": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26, 28, 30, 32, 33], "you": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 32, 33], "do": [13, 17, 18, 32], "care": [13, 27], "about": [13, 32], "condit": [0, 13, 23, 32], "other": [2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 32, 33], "than": [2, 3, 5, 6, 8, 11, 12, 13, 16, 19, 22, 30, 32], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32], "simpli": [2, 13, 22, 30, 32], "suppli": 13, "exampl": [0, 3, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33], "from_exampl": [2, 13, 16, 21, 23, 26, 32, 33], "want": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 18, 19, 21, 22, 26, 28, 33], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 25, 26, 28, 29, 30, 32, 33], "constructor": 13, "correspond": [13, 14, 32], "import": [2, 3, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33], "factory_a": 13, "generated_a": 13, "next": [2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33], "assert": [13, 14, 15, 16, 17, 19, 21, 22, 23, 27, 32], "isinst": [13, 14, 16, 19, 21, 22, 23, 27, 32], "str": [0, 3, 13, 14, 16, 19, 21, 22, 25, 27, 30, 31, 32, 33], "factory_b": 13, "randstr": [2, 3, 13, 14, 16, 19, 23, 25, 27, 28, 32], "length": [3, 6, 8, 10, 12, 13, 14, 22, 25, 27, 28, 32], "16": [3, 8, 9, 10, 13, 14, 25, 26], "generated_b": 13, "len": [0, 6, 8, 9, 13, 19, 22, 23, 27, 32], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28], "argument": [13, 14, 15, 16, 22, 23, 28, 29, 30, 32], "nonetyp": [13, 32], "There": [3, 13, 27], "dedic": 13, "function": [2, 13, 14, 15, 16, 21, 25, 28, 30, 32, 33], "const": [13, 32], "instead": [2, 13, 14, 19, 22, 33], "none": [13, 22, 30, 32, 33], "bool": [0, 13, 19, 30, 32, 33], "randbool": [13, 19, 32], "true": [0, 1, 2, 3, 13, 14, 18, 22, 26, 30, 32, 33], "fals": [1, 13, 22, 30, 32, 33], "int": [0, 2, 3, 8, 13, 14, 16, 18, 19, 21, 22, 26, 30, 32], "randint": [2, 13, 14, 19, 22, 23, 25, 32], "integ": [1, 7, 8, 9, 10, 13, 22, 26, 33], "float": [0, 9, 13, 22, 30, 32], "randfloat": [8, 13, 32], "string": [2, 3, 10, 13, 22, 23, 26, 30, 32, 33], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 21, 26, 27, 30, 32], "randlist": [13, 19, 32], "tupl": [13, 32], "dict": [2, 13, 16, 21, 26, 32, 33], "randdict": [2, 13, 16, 19, 22, 25, 28, 32], "decim": [0, 8, 9, 12, 13, 32], "randdecim": [6, 13, 19, 25, 32], "datetim": [0, 2, 3, 4, 11, 13, 18, 22, 26, 32], "randdatetim": [5, 13, 32], "date": [0, 5, 11, 13, 18, 22, 32], "randdat": [4, 13, 28, 32], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 19, 22, 26, 27, 30, 32], "randtim": [11, 13, 32], "timedelta": [0, 2, 4, 5, 11, 13, 18, 26, 32], "randtimedelta": [12, 13, 32], "candid": [6, 8, 13], "or_non": [13, 32], "factory_nul": 13, "0": [1, 2, 3, 6, 8, 12, 13, 14, 15, 18, 19, 22, 25, 26, 27, 30, 32], "1": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 18, 19, 22, 26, 27, 28, 30, 32], "get": [2, 3, 13, 25], "alwai": [13, 14, 19, 22], "return": [2, 3, 13, 14, 15, 16, 18, 27, 30, 32, 33], "sever": [0, 3, 13], "method": [2, 13, 16, 26, 27, 28], "determin": [2, 9, 13], "from": [2, 3, 6, 8, 9, 13, 14, 15, 16, 18, 23, 25, 26, 28, 30, 32, 33], "multipl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 19, 32], "make": [1, 2, 6, 8, 9, 13, 16, 19, 26], "e": [10, 13, 23, 28], "so": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16, 17, 18, 22, 32], "boolean": [1, 13, 22], "_": 13, "rang": [4, 5, 6, 8, 9, 10, 11, 12, 13], "10": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 22, 23, 25, 27, 32], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 23, 28, 29, 32], "choos": [13, 16, 32], "either": [13, 14], "each": [0, 1, 2, 3, 13, 14, 15, 16, 20, 22, 27, 28, 30, 32, 33], "result": [2, 3, 7, 8, 13, 32], "chosen": [13, 32], "one": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 19, 21, 26, 32], "specif": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 19, 24, 32], "randchoic": [13, 14, 15, 22, 26, 32], "allow": [2, 12, 13, 25, 32], "deni": 13, "same": [2, 3, 6, 8, 9, 12, 13, 15, 18, 19, 22, 25], "python": [2, 3, 4, 5, 8, 11, 12, 13, 16, 20, 21, 25], "predefin": 13, "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 30, 32, 33], "chang": [3, 4, 5, 11, 12, 13, 22, 32], "post_process": [13, 22, 25, 26, 32], "format": [0, 2, 7, 13, 25, 28, 32], "50000": [13, 32], "decimal_len": [13, 19, 25, 32], "2": [0, 3, 6, 8, 9, 12, 13, 15, 17, 18, 19, 22, 25, 26, 28, 32], "lambda": [2, 13, 22, 25, 26, 28, 32], "x": [3, 6, 8, 9, 12, 13, 16, 32], "f": [2, 12, 13, 14, 32], "12": [0, 6, 11, 13, 18, 26, 32], "345": [6, 13, 32], "67": [6, 13, 32], "3": [0, 3, 6, 8, 10, 13, 17, 18, 19, 21, 22, 23, 28, 32], "153": [13, 32], "21": [13, 32], "90": [6, 8, 9, 13, 32], "etc": [2, 3, 13, 21, 32], "provid": [3, 13, 20], "also": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32], "context": [1, 13, 32], "iter": [0, 13, 19, 26, 28, 29, 30, 32], "includ": [3, 6, 8, 9, 13, 22], "normal": [3, 13, 19, 32], "would": [13, 14, 15, 17, 19, 22, 26], "think": 13, "could": 13, "just": [1, 4, 5, 6, 8, 9, 11, 12, 13, 21, 27], "directli": [13, 16, 32], "need": [3, 13, 19, 23], "itertool": [2, 13, 28], "uuid": [2, 13, 16, 21], "defin": [2, 3, 12, 13, 16, 30, 32], "class": [13, 15, 22, 30, 32, 33], "mailaddressfactori": 13, "def": [2, 13, 15, 16, 26], "self": 13, "com": 13, "http": 13, "doc": [13, 20], "org": 13, "librari": [3, 13, 20], "html": 13, "count": [2, 13, 28, 32], "id": [2, 13, 16, 19, 22, 25, 33], "uuid4": [2, 13, 16, 21], "name": [2, 3, 13, 14, 16, 21, 22, 25, 28, 32, 33], "mail": 13, "set": [2, 3, 13, 16, 18, 19, 20], "endswith": 13, "by_cal": [13, 32], "by_iter": [2, 13, 26, 28, 32], "A": [4, 5, 7, 11, 13, 22, 23, 32], "finit": 13, "onc": [3, 13, 27], "termin": [3, 13, 27, 32], "cannot": [2, 10, 12, 13, 16, 22, 23, 25, 30, 32], "ani": [0, 2, 13, 14, 15, 16, 22, 30, 32, 33], "more": [0, 2, 6, 8, 9, 12, 13, 20, 28, 32], "gener": [0, 2, 3, 10, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 30, 32, 33], "element": [3, 12, 14, 22, 26, 29, 32], "randomli": [3, 14, 19, 21, 22, 24, 28, 29, 30, 32, 33], "like": [1, 4, 5, 6, 8, 9, 11, 12, 14, 15, 19, 22, 26, 32], "built": [14, 15, 22], "two": [3, 7, 14, 15, 22], "wai": [2, 14, 15, 18, 20, 22, 27, 28], "code": [2, 13, 14, 15, 16, 19, 22, 27, 32], "look": [14, 15, 19, 22, 26], "dictitem": [14, 15, 32], "sex": 14, "m": [3, 4, 5, 11, 12, 14, 28, 33], "ag": [2, 14, 16, 21, 22, 25], "kei": [2, 14, 16, 22, 27, 28, 30, 32], "exist": [3, 14, 17], "random": [2, 3, 14, 19, 23, 24, 27, 30, 32, 33], "100": [0, 2, 6, 8, 9, 14, 19], "9": [0, 10, 14], "As": [3, 14, 16, 22, 26, 29], "pass": [3, 14, 21, 22, 23, 32], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33], "keyword": [14, 32], "By": [3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 21, 22], "possibl": [3, 12, 14, 22, 23, 25], "whether": [13, 14, 32], "dictionari": [2, 3, 14, 28, 33], "abov": [3, 6, 8, 9, 14, 17, 22, 26], "see": [0, 2, 3, 4, 5, 11, 12, 13, 14, 16, 20, 22, 26, 28], "here": [3, 4, 5, 11, 12, 14, 20, 21, 22, 24, 32], "how": [14, 20, 22, 29], "build": [14, 22, 29], "dictitemexampl": [14, 15, 30], "smith": 14, "22": [11, 14], "Not": 14, "limit": [3, 6, 8, 9, 14, 18], "given": [14, 19, 22, 26], "output": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 20, 25, 29, 30], "similar": [10, 14, 28], "its": [14, 27, 32], "Or": 14, "wrap": 14, "mani": [12, 19], "case": [1, 2, 6, 10, 12, 19, 22, 25, 26, 30, 32], "becaus": [12, 19, 20], "tailor": 19, "applic": 19, "record": [2, 19, 22], "singl": [3, 7, 19], "mai": [1, 2, 3, 12, 17, 19, 20, 22, 27, 28, 30, 32], "appropri": [12, 16, 19, 20], "rather": [5, 11, 19], "999_999": [19, 25], "price": [19, 25], "1000": [6, 8, 9, 19, 25], "200": [19, 26], "record_list": 19, "th": [12, 19], "longer": 19, "number": [2, 3, 6, 8, 9, 12, 16, 19, 28, 30, 32, 33], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 19], "last": 19, "el_factori": 19, "4": [3, 8, 9, 10, 18, 19, 22, 23, 28], "therefor": [3, 19, 20], "typic": [12, 19], "where": [2, 10, 19, 30, 32], "ha": [8, 12, 19], "mean": [3, 4, 5, 11, 12, 16, 19, 32], "onli": [3, 5, 6, 8, 9, 13, 16, 17, 19, 32], "el": 19, "5": [1, 2, 6, 8, 10, 12, 18, 19, 27, 28, 32], "sure": 19, "map": [19, 30, 32, 33], "piec": 19, "attribut": [19, 29], "type": [0, 1, 3, 15, 17, 19, 25, 29, 32, 33], "necessari": [1, 12, 19], "separ": [2, 3, 8, 9, 16, 19, 30], "schema": [3, 19], "sinc": [4, 5, 8, 11, 16, 19, 25], "omit": [2, 3, 4, 5, 11, 16, 19], "equal": [12, 19, 32], "accept": [3, 19, 32], "guarante": [10, 17, 19], "try": 21, "step": [21, 26, 32], "prepar": 21, "8": [1, 8, 9, 10, 15, 16, 18, 21, 23, 28, 32], "newer": 21, "pip": [10, 21, 23], "command": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 25, 28, 29], "factori": [2, 3, 18, 20, 21, 26, 28, 29, 30, 33], "20": [0, 1, 2, 10, 12, 16, 21, 22], "some": [1, 2, 3, 13, 16, 22, 24, 28], "timelin": [24, 29], "data": [2, 17, 24, 29, 32], "depend": [3, 24, 29, 32], "previou": [22, 24, 25, 29], "json": [1, 2, 3, 4, 5, 6, 8, 11, 12, 24, 29], "modul": [10, 23, 25, 29], "18": 25, "64": 25, "value_json": 25, "dump": 25, "we": [20, 25], "wosar5ajmwhngj72": 25, "51": [0, 25], "convert": [3, 22, 25], "default": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 15, 22, 25, 30, 32, 33], "583085": 25, "754": 25, "were": 25, "begin": [4, 5, 11, 25], "v": [25, 27, 32], "non": [13, 16, 26, 28], "pseudo": 26, "seri": 26, "iter_datetim": 26, "start": [26, 29], "nxt": 26, "while": [2, 26], "yield": [2, 26], "iter_randomwalk": 26, "step_f": 26, "2022": [0, 4, 5, 26], "hour": [2, 5, 11, 12, 18, 26], "locat": 26, "hourli": 26, "01": [0, 4, 5, 6, 8, 11, 12, 26], "01t12": [5, 26], "00": [5, 6, 11, 12, 26], "13": 26, "14": 26, "15": [6, 8, 9, 26], "seen": 26, "definit": [0, 2, 3, 22, 26, 29, 30, 32], "increas": [20, 26], "exactli": [2, 26], "differ": [3, 9, 13, 18, 26, 32], "randomwalk": 26, "thu": 26, "wa": [2, 16, 26, 32], "d": [2, 3, 4, 5, 12, 23, 26, 28], "isoformat": 26, "128": 27, "generated1": 27, "generated2": 27, "note": [3, 6, 8, 9, 16, 22, 27], "low": 27, "probabl": [1, 2, 4, 5, 11, 12, 15, 22, 27, 30, 32], "thei": [22, 27, 32], "ident": [6, 8, 9, 27], "usual": [23, 27], "sugar": 27, "coat": 27, "syntax": 27, "although": [3, 8, 9, 13, 23, 27], "itself": 27, "cnt": 27, "generated_valu": 27, "dispos": 27, "must": [2, 3, 4, 5, 10, 11, 23, 27, 32], "regener": [2, 27, 30, 32], "infinity_it": [27, 32], "foo": [2, 27, 32], "bar": [27, 32], "k": [22, 27, 32], "zip": [27, 32], "warn": [0, 27, 31], "run": [20, 21, 27, 28, 29], "below": [2, 3, 16, 27], "continu": 27, "indefinit": [18, 27], "caus": [4, 5, 11, 20, 27], "infinit": 27, "loop": 27, "handl": [16, 27], "packag": [3, 10, 23, 29], "help": 29, "quick": 29, "instal": [3, 10, 23, 29], "minim": 29, "construct": [29, 32], "nullabl": [22, 29], "union": [29, 32, 33], "choic": 29, "constanc": 29, "process": [1, 2, 16, 29, 32], "custom": [22, 29, 33], "detail": [2, 29], "individu": 29, "tip": 29, "usag": [4, 5, 11, 29], "subpackag": 29, "submodul": 29, "index": 29, "except": [3, 16, 30, 32], "prop_exist": [30, 32], "base": [6, 8, 9, 22, 30, 31, 32, 33], "obj": 30, "sequenc": [30, 32], "factoryconstructionerror": [31, 32], "messag": [3, 31], "properti": [1, 31, 32], "item": [13, 22, 32], "arg": 32, "kwd": 32, "abc": 32, "t": [3, 12, 32], "infin": 32, "serv": 32, "NOT": 32, "size": [30, 32], "paramet": [30, 32, 33], "abstract": [], "accord": [0, 32], "assembl": 32, "prob": 32, "rnd": [32, 33], "whose": [22, 32], "option": [16, 19, 25, 28, 29, 30, 32, 33], "callabl": [30, 32], "r": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 22, 23, 32], "modifi": [0, 32], "fromexamplecontext": 32, "path": [2, 32], "custom_func": [22, 32, 33], "_customfunc": 32, "example_is_custom": [], "examples_stack": 32, "child": [20, 32], "current_exampl": 32, "recurs": 32, "classmethod": [], "root": 20, "func": 32, "It": [1, 2, 3, 10, 12, 22, 30, 32], "match": [32, 33], "execut": [0, 3, 7, 16, 19, 20, 21, 25, 30, 32], "first": [3, 13, 32], "new": 32, "recommend": [2, 20, 32], "receiv": 32, "kwarg": [32, 33], "futur": [2, 3, 20, 22, 32], "updat": 32, "should": [3, 16, 32], "take": [1, 16, 32], "preced": [16, 32], "over": 32, "rais": [16, 30, 31, 32], "support": 32, "prop_tru": [1, 32], "inconsist": 32, "weight": [6, 8, 9, 15, 32], "chose": [], "No": 32, "minimum": [6, 8, 9, 12, 32], "maximum": [6, 8, 9, 12, 17, 18, 32], "tzinfo": 32, "liter": 32, "fix": [8, 32], "awar": 32, "correct": 32, "otherwis": 32, "supportsfloat": 32, "p_inf": 32, "n_inf": 32, "nan": 32, "part": [6, 8, 12, 32], "posit": [6, 8, 9, 17, 32], "neg": [6, 8, 9, 18, 32], "items_dict": 32, "hashabl": 32, "ignor": [3, 22, 32], "_base": 32, "_list": 32, "items_list": 32, "charset": [3, 10, 23, 32], "charact": [3, 10, 32], "timezon": [], "inform": [3, 20], "unit": [8, 12, 32], "atom": 32, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 28], "factory_definition_fil": [], "filenam": [2, 32], "instanc": [2, 33], "variabl": [0, 16], "print": [3, 28], "repr": 3, "befor": 3, "standard": [2, 3, 4, 5, 8, 11, 20], "after": [3, 4, 5, 11, 17, 32], "being": 3, "For": [0, 2, 3, 6, 8, 9, 12, 16, 20, 21, 22, 33], "factory_def": [0, 2, 3, 16], "py": [0, 2, 3, 16], "out": 3, "txt": 3, "veri": 20, "practic": 28, "thing": [], "done": [15, 16, 19, 25], "redirect": [], "featur": [3, 20, 22], "shell": [2, 3], "combin": [4, 5, 11, 13], "describ": [0, 3, 16], "them": [2, 13, 16, 28, 32], "l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16], "repeatedli": [3, 22], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 22], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 16], "far": 16, "load": 16, "runtim": 16, "written": [1, 6, 8, 9, 10, 16], "bound": 16, "save": 16, "under": 16, "your": [16, 23, 28], "from_pyfil": [16, 32], "extern": [3, 29], "file": [0, 2, 20, 29, 32], "pathlik": 32, "io": 32, "notimpl": 32, "behav": 32, "until": 32, "enumer": [13, 15], "randenum": [13, 32], "particular": [3, 6, 8, 9, 13, 22], "enum": [13, 32], "myenum": 15, "custom_chain_length": 32, "signal_terminate_custom": 32, "terminate_custom_chain": 32, "enum_cl": 32, "bias": 15, "elif": 15, "commonli": 13, "increment": [13, 16, 18, 22, 26, 32], "wish": [3, 17], "initi": [2, 17, 18], "ad": [3, 17, 20], "databas": [2, 17, 22], "initial_valu": [17, 32], "101": 17, "31": [4, 9, 17], "102": 17, "103": 17, "fit": 17, "sign": 17, "32": [8, 9, 17], "bit": 17, "add": [26, 33], "auto": 26, "field": [2, 26, 33], "special": 29, "sequenti": [3, 32], "reach": 32, "reset": 32, "satisfi": [1, 4, 5, 6, 8, 9, 11, 12, 22, 32], "sqlalchemi": [13, 14, 30], "enabl": [], "experiment": [3, 22], "remov": [3, 22], "significantli": [3, 22], "variou": 22, "appli": 22, "mapped_column": 22, "orm": [22, 33], "declarative_bas": [22, 33], "user": [22, 33], "__tablename__": [22, 33], "primary_kei": [22, 33], "autoincr": [22, 33], "least": 22, "work": [2, 22], "biginteg": 22, "numer": [6, 8, 10, 22], "text": 22, "timestamp": [2, 22], "interv": 22, "doe": [12, 22, 32], "all": [2, 3, 6, 8, 9, 13, 22, 23, 32], "rdb": 22, "pleas": [3, 10, 20, 21, 22, 23], "relationship": 22, "foreign": 22, "constraint": 22, "even": [2, 3, 22], "uniqu": 22, "primari": 22, "duplic": 22, "known": 22, "greater": [6, 8, 9, 22], "intuit": 22, "birthdai": 22, "problem": [3, 8, 22], "check": [3, 22], "shown": [2, 28], "accomplish": [], "deriv": 33, "column": [16, 28, 30, 33], "model": [14, 22, 33], "as_dict": [14, 22, 33], "factory_from_column": 33, "60": 22, "overridden": [3, 22], "second": [3, 12, 22], "respect": 22, "for_exampl": [], "inspect": 22, "col": 22, "attr": 22, "override_column": 33, "obtain": [1, 2, 32, 33], "independ": 22, "reiter": 22, "automat": 22, "manual": [12, 22], "group_id": 22, "respond": 22, "regular": [10, 22, 32], "manag": [12, 22], "order": [3, 22, 28], "actual": 22, "coe": [], "advanc": 22, "basic": 0, "further": 0, "avail": [0, 3], "page": [0, 2], "42": [0, 3, 9], "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 16], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16], "mode": [3, 16, 28, 29], "50": [1, 9], "lower": 1, "program": [1, 8, 28, 29], "anoth": 1, "languag": [1, 6, 8, 9, 10], "desir": [1, 8], "point": [5, 8, 11, 16], "p": [6, 8], "inf": [6, 8], "prob_p_inf": [6, 8], "n": [3, 6, 8], "prob_n_inf": [6, 8], "prob_nan": [6, 8], "behavior": [4, 5, 6, 8, 11, 12], "left": [4, 5, 6, 8, 11, 12], "between": [4, 5, 6, 8, 11, 12, 32], "1e": [6, 8], "have": [6, 8, 9], "abil": [], "place": 6, "digit": [12, 32], "repres": [8, 12], "read": [2, 8, 20], "equival": 2, "test": 2, "util": 2, "o": [2, 3, 16], "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [], "fmt": [1, 4, 5, 6, 8, 9, 10, 11, 12], "8601": [], "form": [4, 5, 11], "strftime": [4, 5, 11, 28], "strptime": [4, 5, 11], "2021": [4, 5], "01t00": 5, "y": [3, 4, 5, 28], "h": [3, 5, 11, 12], "simultan": [4, 5, 11], "elaps": [5, 11], "certain": [5, 11], "both": [4, 11], "dai": [4, 5, 12], "7": [4, 5, 8, 12, 18], "1d": [4, 5, 12], "7d": [4, 5, 12], "adjust": 12, "0d": 12, "xx": 12, "": [3, 12, 20, 28], "durat": 12, "proprietari": 12, "1h30m": [5, 11, 12], "1d2h3m4s5ms6u": 12, "express": [10, 12, 28, 32], "concaten": 12, "direct": 12, "xd": 12, "2d": [4, 12], "xh": 12, "2h": [5, 11, 12], "xm": 12, "minut": [11, 12], "2m": 12, "millisecond": 12, "xu": 12, "microsecond": 12, "2u": 12, "month": 12, "year": [2, 12], "larger": 12, "distinguish": 12, "30": [11, 12], "zero": 12, "pad": 12, "23": 12, "total": [7, 12, 32], "round": 12, "down": 12, "59": 12, "tm": 12, "6": [7, 12, 18], "000000": [5, 11, 12], "000001": 12, "999999": 12, "140": 12, "0h": 12, "meaningless": 12, "notat": [6, 7, 8, 9, 12, 32], "without": [3, 12, 18], "factory_path": 2, "row_num": 2, "csv_column": [2, 16, 28, 30, 32], "To": [2, 3, 4, 5, 6, 8, 9, 10, 11, 23], "row": [2, 28, 30], "line": [2, 3, 16], "someth": 2, "factorydef": 32, "full_respons": 32, "dataclass": 32, "top": 2, "old": 2, "third": 2, "17642547": 2, "0a4c": 2, "4897": 2, "a8da": 2, "2d495558b8fa": 2, "d40s8jq": 2, "discard": [2, 20, 30, 32], "pk": 2, "miss": 2, "made": 2, "timestamp_it": 2, "2002": 2, "els": [], "action": [], "fewer": [2, 30, 32], "probabilist": [], "howev": [3, 6, 8, 9, 13, 30, 32], "decid": [13, 32], "affect": [2, 13, 30, 32], "lazy_choic": [13, 32], "adopt": [13, 32], "or_nul": 13, "prob_regen": 2, "prob_discard": 2, "origin": [2, 30, 32], "complet": [2, 18, 30, 32], "less": [2, 6, 8, 30, 32], "gap": 2, "skip": [2, 13], "higher": [2, 3], "regex": [10, 23, 32], "char": 10, "0123456789abcdef": [3, 10], "cryptograph": 10, "secur": 10, "requir": 10, "token": 10, "authent": 10, "consid": 10, "secret": 10, "altern": 10, "alphabet": 10, "za": 10, "z0": 10, "rstr": [10, 23], "beforehand": [10, 23], "g": [10, 23], "review": [10, 23], "licens": [10, 23], "term": [4, 5, 10, 11, 23], "creation": 23, "ascii_uppercas": 23, "19": 23, "consist": 23, "constant": 23, "own": 23, "az": 23, "z": 23, "re": 23, "fullmatch": 23, "_next": 13, "raise_on_factory_stop": [30, 32], "stop": [2, 30, 32], "factorystopexcept": [30, 32], "due": [2, 30, 32], "stopiter": [2, 30, 32], "error": [2, 3, 4, 5, 11], "occur": [2, 3], "environ": [0, 16], "One": 2, "idea": 2, "initial_id": [2, 16], "init_id": 2, "addit": [2, 18, 28], "env": [2, 3], "bash": [2, 3], "powershel": [2, 3], "var": [2, 3], "purpos": 3, "val": 3, "mention": 3, "effect": [], "encod": [3, 16], "linesep": [3, 16, 30, 32], "newlin": [3, 28], "utf": [3, 16], "le": 3, "utf_16_l": 3, "crlf": [3, 16], "now": [3, 5, 11], "replac": 3, "current": [3, 4, 5, 11], "empti": 3, "serial": 3, "def_fil": 3, "trail": 3, "repeat_count": 3, "factory_count": 3, "descript": [], "assign": 3, "home": 3, "log": [0, 6, 8, 9, 29, 32], "configur": [3, 20], "stderr": 3, "level": 3, "logging_config_path": 3, "yaml": 3, "adher": 3, "logger": [3, 20], "cmd": 20, "up": [3, 20, 32], "through": 3, "mechan": 3, "dure": 3, "overrid": 3, "disable_existing_logg": 3, "explicitli": 3, "displai": 3, "abnorm": 3, "hide": 3, "quiet": 3, "q": 3, "w": [3, 28], "spec": 3, "seem": 3, "incident": 3, "categori": 3, "produc": [3, 28], "randogcmdwarn": 3, "futurewarn": 31, "warned_too_long_custom_chain": 32, "set_warned_too_long_custom_chain": 32, "those": 3, "fact": 3, "pyyaml": 3, "write": [3, 16], "refer": [3, 21], "stream": 20, "howto": 20, "extens": 20, "plan": 20, "gradual": 20, "improv": 20, "handler": 20, "unexpect": 20, "select": 20, "api": 29, "intend": 16, "reus": 16, "create_factori": 16, "__name__": [2, 16], "__randog__": [2, 16], "avoid": [4, 5, 11, 16], "proper": 16, "situat": [16, 28], "discuss": 16, "better": 2, "implement": 2, "todai": 4, "simpl": [4, 5, 11], "plu": [4, 5, 11], "fulli": [4, 5, 11], "interpret": [4, 5, 11], "valid": [4, 5, 11], "invalid": [4, 5, 11, 32], "unknown": [4, 5, 11], "30m": [4, 5, 11], "yesterdai": [4, 5], "tomorrow": [4, 5], "ago": [4, 5, 11], "later": [4, 5, 11], "1h": [5, 11], "11": [11, 18], "33": 11, "12h": 11, "full": 3, "end": 3, "traceback": 3, "unlik": 3, "seed": 0, "control": 3, "though": 3, "version": 3, "document": 3, "reproduc": 3, "upgrad": 3, "debug": 3, "observ": 3, "easili": [13, 28], "post_process_item": [13, 32], "sir1w94": [13, 32], "convers": 13, "default_process": 32, "80": 1, "advantag": 1, "treat": 1, "mini": [1, 6, 8, 9, 10], "00000042": 9, "08": 9, "20e": 8, "98": 8, "2e": 8, "99999": 6, "99": 6, "2f": 8, "suitabl": 8, "zy7q": 10, "exp": [6, 8, 9], "10000": [6, 9], "fine": [6, 8, 9], "varieti": [6, 8, 9], "problemat": [6, 8, 9], "9999": 9, "word": [6, 8, 9], "major": [6, 8, 9], "give": [6, 8, 9], "smaller": [6, 8, 9], "precis": [6, 8, 9], "floor": [6, 8, 9], "log2": [8, 9], "binari": [6, 8, 9], "assum": [6, 8, 9], "47": 9, "event": [6, 8, 9], "portion": [6, 8, 9], "reduc": [6, 8, 9], "half": [6, 8, 9], "63": 9, "much": 9, "distribut": 32, "uniform": 32, "exp_uniform": 32, "500": [6, 8], "24": 8, "25": 8, "125": 8, "smallest": 8, "power": 8, "1022": 8, "tend": 8, "small": 8, "absolut": 8, "still": [], "log10": 6, "55000": 6, "100000": 6, "indent": 3, "space": 3, "tab": 3, "alreadi": 3, "truncat": 3, "destin": [3, 28, 30], "append": 3, "oa": 3, "kept": 3, "generate_to_csv": [28, 30], "line_num": 30, "fp": [28, 30], "textio": 30, "csv": [29, 30], "taken": [16, 30], "randogwarn": 31, "outsid": 28, "b": 28, "c": 28, "abcd": 28, "tips_json": [], "as_command": [], "sy": 28, "f1": 28, "f2": 28, "stdout": 28, "disadvantag": [], "countoutput": [], "created_bi": 28, "yyyymmdd": 28, "sniiz6ek": 28, "20240817": 28, "qe37x0kd": 28, "20241025": 28, "smwgorjo": 28, "20241202": 28, "open": 28, "output_linesep": [16, 32], "lf": 16, "output_encod": [16, 32], "utf8": 16, "_util": 32, "cr": 16, "dt": 18, "2020": 18, "amount": [], "iterrang": [18, 32], "cyclic": 32, "resume_from": [18, 32], "shift": 32, "emit": 32, "exce": 32, "restart": 32, "contradict": 32, "decreas": 18, "cycl": 18, "dice": [0, 32], "face": [7, 32], "2d6": [0, 7], "dice_rol": 7, "roll": 7, "sum": 7, "side": 7, "parse_dice_not": 32, "valueerror": 32}, "objects": {"": [[30, 0, 0, "-", "randog"]], "randog": [[30, 1, 1, "", "DictItemExample"], [30, 1, 1, "", "Example"], [31, 0, 0, "-", "exceptions"], [32, 0, 0, "-", "factory"], [30, 6, 1, "", "generate_to_csv"], [33, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[30, 2, 1, "", "example"], [30, 2, 1, "", "prop_exists"]], "randog.exceptions": [[31, 3, 1, "", "FactoryConstructionError"], [31, 3, 1, "", "RandogWarning"]], "randog.exceptions.FactoryConstructionError": [[31, 4, 1, "", "message"]], "randog.factory": [[32, 1, 1, "", "DictItem"], [32, 1, 1, "", "Factory"], [32, 1, 1, "", "FactoryDef"], [32, 3, 1, "", "FactoryStopException"], [32, 1, 1, "", "FromExampleContext"], [32, 6, 1, "", "by_callable"], [32, 6, 1, "", "by_iterator"], [32, 6, 1, "", "const"], [32, 6, 1, "", "dice"], [32, 6, 1, "", "from_example"], [32, 6, 1, "", "from_pyfile"], [32, 6, 1, "", "increment"], [32, 6, 1, "", "iterrange"], [32, 6, 1, "", "parse_dice_notation"], [32, 6, 1, "", "randbool"], [32, 6, 1, "", "randchoice"], [32, 6, 1, "", "randdate"], [32, 6, 1, "", "randdatetime"], [32, 6, 1, "", "randdecimal"], [32, 6, 1, "", "randdict"], [32, 6, 1, "", "randenum"], [32, 6, 1, "", "randfloat"], [32, 6, 1, "", "randint"], [32, 6, 1, "", "randlist"], [32, 6, 1, "", "randstr"], [32, 6, 1, "", "randtime"], [32, 6, 1, "", "randtimedelta"], [32, 6, 1, "", "union"]], "randog.factory.DictItem": [[32, 2, 1, "", "factory"], [32, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[32, 5, 1, "", "infinity_iter"], [32, 5, 1, "", "iter"], [32, 5, 1, "", "next"], [32, 5, 1, "", "or_none"], [32, 5, 1, "", "post_process"], [32, 5, 1, "", "post_process_items"]], "randog.factory.FactoryDef": [[32, 2, 1, "", "csv_columns"], [32, 2, 1, "", "factory"], [32, 2, 1, "", "output_encoding"], [32, 2, 1, "", "output_linesep"]], "randog.factory.FromExampleContext": [[32, 4, 1, "", "current_example"], [32, 4, 1, "", "custom_chain_length"], [32, 4, 1, "", "custom_funcs"], [32, 4, 1, "", "examples"], [32, 5, 1, "", "from_example"], [32, 4, 1, "", "path"], [32, 5, 1, "", "recursive"], [32, 4, 1, "", "rnd"], [32, 5, 1, "", "set_warned_too_long_custom_chain"], [32, 4, 1, "", "signal_terminate_custom"], [32, 5, 1, "", "terminate_custom_chain"], [32, 4, 1, "", "warned_too_long_custom_chain"]], "randog.sqlalchemy": [[33, 6, 1, "", "custom"], [33, 6, 1, "", "factory"], [33, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 13, "factori": [13, 14, 15, 16, 17, 19, 22, 23, 25, 27, 32], "gener": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 19, 22, 28, 29], "random": [13, 26, 29], "valu": [13, 18, 28], "element": [13, 19], "type": [13, 18, 22, 26], "nullabl": 13, "union": 13, "randomli": [13, 25], "choic": 13, "constanc": 13, "process": 13, "output": [2, 3, 13, 28], "custom": 13, "detail": [0, 13], "how": 13, "build": 13, "individu": [13, 22], "dict": [14, 22], "randdict": 14, "from_exampl": [14, 15, 19, 22], "list": 19, "each": 19, "length": [19, 23], "tupl": 19, "quick": 21, "start": 21, "instal": 21, "minim": 21, "us": [21, 27], "tip": 24, "usag": 24, "creat": 25, "json": [25, 28], "decim": [6, 25], "e": 25, "t": 25, "c": 25, "string": 25, "timelin": 26, "data": 26, "depend": 26, "previou": 26, "chang": [2, 26], "smpl_datetim": 26, "str": [10, 23, 26], "As": [27, 28], "iter": [3, 18, 27], "obj": 29, "content": [29, 30], "indic": 29, "tabl": 29, "randog": [22, 30, 31, 32, 33], "packag": [30, 31, 32, 33], "subpackag": 30, "submodul": 30, "modul": 30, "except": 31, "run": 0, "command": [0, 21], "format": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12], "file": [3, 16], "extern": 16, "definit": 16, "enum": 15, "randenum": 15, "special": 13, "increment": 17, "integ": 17, "from": 22, "sqlalchemi": [22, 33], "support": 22, "column": 22, "limit": 22, "model": [], "instanc": 22, "some": [], "field": 22, "specifi": [22, 23], "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "int": 9, "float": 8, "datetim": 5, "date": 4, "time": 11, "timedelta": 12, "simpl": [12, 23], "code": 12, "csv": [2, 28], "charact": 23, "set": 23, "regular": 23, "express": [4, 5, 11, 23], "behavior": 2, "pattern": 2, "environ": [2, 3], "variabl": [2, 3], "modifi": 3, "log": [3, 20], "warn": 3, "api": 20, "import": 16, "minimum": [4, 5, 11], "maximum": [4, 5, 11], "seed": 3, "lowercas": 1, "repeatedli": [1, 4, 5, 6, 7, 8, 9, 11, 12], "infin": [6, 8], "nan": [6, 8], "numer": 1, "0": 9, "pad": 9, "etc": [4, 5, 6, 8, 9, 10, 11, 12], "signific": 8, "digit": [6, 8, 9], "thousand": 6, "separ": 6, "align": 10, "iso": [4, 5, 11, 12], "8601": [4, 5, 11, 12], "probabl": [6, 8, 9], "distribut": [6, 8, 9], "uniform": [6, 8, 9], "itertool": [], "countoutput": [], "attribut": 16, "rang": 18, "step": 18, "cyclic": 18, "program": 21, "dice": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"], [11, "arguments-and-options"], [12, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"]], "Format: Lowercase or Numeric": [[1, "format-lowercase-or-numeric"]], "Repeatedly Generate": [[1, "repeatedly-generate"], [4, "repeatedly-generate"], [5, "repeatedly-generate"], [6, "repeatedly-generate"], [7, "repeatedly-generate"], [8, "repeatedly-generate"], [9, "repeatedly-generate"], [11, "repeatedly-generate"], [12, "repeatedly-generate"]], "byfile Mode": [[2, "byfile-mode"]], "output as CSV": [[2, "output-as-csv"]], "Change behavior patterns by environment variables": [[2, "change-behavior-patterns-by-environment-variables"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "Seed": [[3, "seed"]], "Modify environment variable": [[3, "modify-environment-variable"]], "Logging": [[3, "logging"], [20, "logging"]], "Warning": [[3, "warning"]], "date Mode": [[4, "date-mode"]], "Expression of MINIMUM and MAXIMUM": [[4, "expression-of-minimum-and-maximum"], [5, "expression-of-minimum-and-maximum"], [11, "expression-of-minimum-and-maximum"]], "Format: ISO-8601, etc.": [[4, "format-iso-8601-etc"], [5, "format-iso-8601-etc"], [11, "format-iso-8601-etc"], [12, "format-iso-8601-etc"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "Infinity and NaN": [[6, "infinity-and-nan"], [8, "infinity-and-nan"]], "Format: Thousands Separator, etc.": [[6, "format-thousands-separator-etc"]], "Probability Distribution; uniform distribution of digits": [[6, "probability-distribution-uniform-distribution-of-digits"], [8, "probability-distribution-uniform-distribution-of-digits"], [9, "probability-distribution-uniform-distribution-of-digits"]], "dice Mode": [[7, "dice-mode"]], "float Mode": [[8, "float-mode"]], "Format: Significant Digits, etc.": [[8, "format-significant-digits-etc"]], "int Mode": [[9, "int-mode"]], "Format: 0-padding, etc.": [[9, "format-0-padding-etc"]], "str Mode": [[10, "str-mode"]], "Format: align, etc.": [[10, "format-align-etc"]], "time Mode": [[11, "time-mode"]], "timedelta Mode": [[12, "timedelta-mode"]], "Simple Format": [[12, "simple-format"]], "Format codes": [[12, "format-codes"]], "Construct Factories (generator of random values)": [[13, "construct-factories-generator-of-random-values"]], "Elemental types": [[13, "elemental-types"]], "Nullable": [[13, "nullable"]], "Union type": [[13, "union-type"]], "Randomly choice": [[13, "randomly-choice"]], "Constance": [[13, "constance"]], "Processing output": [[13, "processing-output"]], "Custom Factory": [[13, "custom-factory"]], "Details on how to build individual factories": [[13, "details-on-how-to-build-individual-factories"]], "Special Factory": [[13, "special-factory"]], "Dict factory": [[14, "dict-factory"]], "Factory by randdict": [[14, "factory-by-randdict"]], "Factory by from_example": [[14, "factory-by-from-example"], [15, "factory-by-from-example"], [19, "factory-by-from-example"], [22, "factory-by-from-example"]], "Enum factory": [[15, "enum-factory"]], "Factory by randenum": [[15, "factory-by-randenum"]], "External File Definition of Factory": [[16, "external-file-definition-of-factory"]], "Attributes": [[16, "attributes"]], "Importable definition files": [[16, "importable-definition-files"]], "Incremental integer factory": [[17, "incremental-integer-factory"]], "Iteration of range": [[18, "iteration-of-range"]], "Step": [[18, "step"]], "Cyclic": [[18, "cyclic"]], "Types of values": [[18, "types-of-values"]], "List factory": [[19, "list-factory"]], "Each elements": [[19, "each-elements"]], "Length": [[19, "length"]], "Generate tuple": [[19, "generate-tuple"]], "API": [[20, "api"]], "Quick start": [[21, "quick-start"]], "Installation": [[21, "installation"]], "Minimal use (as command)": [[21, "minimal-use-as-command"]], "Minimal use (in programs)": [[21, "minimal-use-in-programs"]], "Factory from sqlalchemy": [[22, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[22, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[22, "supported-column-type"]], "Limitations": [[22, "limitations"]], "Specify factories for individual fields": [[22, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[22, "generate-a-dict-instance"]], "Str factory": [[23, "str-factory"]], "Simple factory": [[23, "simple-factory"]], "Specify the length or/and character set": [[23, "specify-the-length-or-and-character-set"]], "Specify a regular expression": [[23, "specify-a-regular-expression"]], "Tips (Usage)": [[24, "tips-usage"]], "Create JSON randomly": [[25, "create-json-randomly"]], "Decimal e.t.c.": [[25, "decimal-e-t-c"]], "Factory of JSON string": [[25, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[26, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[26, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[27, "use-factories"]], "As iterator": [[27, "as-iterator"]], "Output Generated Values": [[28, "output-generated-values"]], "As JSON": [[28, "as-json"]], "As CSV": [[28, "as-csv"]], "random-obj-generator": [[29, "random-obj-generator"]], "Contents:": [[29, null]], "Indices and tables": [[29, "indices-and-tables"]], "randog package": [[30, "randog-package"]], "Subpackages and submodules": [[30, "subpackages-and-submodules"]], "Module contents": [[30, "module-randog"]], "randog.exceptions package": [[31, "module-randog.exceptions"]], "randog.factory package": [[32, "module-randog.factory"]], "randog.sqlalchemy package": [[33, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[30, "randog.DictItemExample"]], "example (class in randog)": [[30, "randog.Example"]], "example (randog.dictitemexample attribute)": [[30, "randog.DictItemExample.example"]], "generate_to_csv() (in module randog)": [[30, "randog.generate_to_csv"]], "module": [[30, "module-randog"], [31, "module-randog.exceptions"], [32, "module-randog.factory"], [33, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[30, "randog.DictItemExample.prop_exists"]], "randog": [[30, "module-randog"]], "factoryconstructionerror": [[31, "randog.exceptions.FactoryConstructionError"]], "randogwarning": [[31, "randog.exceptions.RandogWarning"]], "message (randog.exceptions.factoryconstructionerror property)": [[31, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[31, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[32, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[32, "randog.factory.Factory"]], "factorydef (class in randog.factory)": [[32, "randog.factory.FactoryDef"]], "factorystopexception": [[32, "randog.factory.FactoryStopException"]], "fromexamplecontext (class in randog.factory)": [[32, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[32, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[32, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[32, "randog.factory.const"]], "csv_columns (randog.factory.factorydef attribute)": [[32, "randog.factory.FactoryDef.csv_columns"]], "current_example (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.custom_funcs"]], "dice() (in module randog.factory)": [[32, "randog.factory.dice"]], "examples (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[32, "randog.factory.DictItem.factory"]], "factory (randog.factory.factorydef attribute)": [[32, "randog.factory.FactoryDef.factory"]], "from_example() (in module randog.factory)": [[32, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[32, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[32, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[32, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[32, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[32, "randog.factory.Factory.iter"]], "iterrange() (in module randog.factory)": [[32, "randog.factory.iterrange"]], "next() (randog.factory.factory method)": [[32, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[32, "randog.factory.Factory.or_none"]], "output_encoding (randog.factory.factorydef attribute)": [[32, "randog.factory.FactoryDef.output_encoding"]], "output_linesep (randog.factory.factorydef attribute)": [[32, "randog.factory.FactoryDef.output_linesep"]], "parse_dice_notation() (in module randog.factory)": [[32, "randog.factory.parse_dice_notation"]], "path (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[32, "randog.factory.Factory.post_process"]], "post_process_items() (randog.factory.factory method)": [[32, "randog.factory.Factory.post_process_items"]], "prop_exists (randog.factory.dictitem attribute)": [[32, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[32, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[32, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[32, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[32, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[32, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[32, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[32, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[32, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[32, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[32, "randog.factory.randlist"]], "randog.factory": [[32, "module-randog.factory"]], "randstr() (in module randog.factory)": [[32, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[32, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[32, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[32, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.rnd"]], "set_warned_too_long_custom_chain() (randog.factory.fromexamplecontext method)": [[32, "randog.factory.FromExampleContext.set_warned_too_long_custom_chain"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[32, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[32, "randog.factory.union"]], "warned_too_long_custom_chain (randog.factory.fromexamplecontext property)": [[32, "randog.factory.FromExampleContext.warned_too_long_custom_chain"]], "custom() (in module randog.sqlalchemy)": [[33, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[33, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[33, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[33, "module-randog.sqlalchemy"]]}})