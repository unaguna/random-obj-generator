Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.as_command.time", "doc.as_command.timedelta", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.list_factory", "doc.quickstart", "doc.sqlalchemy", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.as_command.timedelta.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.list_factory.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "float Mode", "int Mode", "str Mode", "time Mode", "timedelta Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "List factory", "Quick start", "Factory from sqlalchemy", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 21, 22], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 27, 28], "an": [2, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 28], "object": [2, 3, 4, 5, 10, 11, 12, 13, 18, 19, 21, 25, 27, 28], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 27], "rule": [3, 12, 27], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 23, 27], "specifi": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 21, 27, 28], "when": [2, 3, 6, 7, 12, 15, 16, 17, 19, 27], "creat": [2, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28], "If": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 27, 28], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28], "do": [12, 16, 27], "care": [12, 23], "about": 12, "condit": [0, 12, 27], "other": [2, 3, 7, 12, 13, 14, 17, 19, 27, 28], "than": [2, 5, 10, 11, 12, 17, 19, 27], "can": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27], "simpli": [12, 19], "suppli": 12, "exampl": [0, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28], "from_exampl": [2, 12, 15, 18, 22, 27, 28], "want": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 22, 28], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 27, 28], "constructor": 12, "correspond": [12, 13, 27], "import": [2, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 28], "factory_a": 12, "generated_a": 12, "next": [2, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 27, 28], "assert": [12, 13, 14, 15, 16, 17, 18, 19, 23, 27], "isinst": [12, 13, 15, 17, 18, 19, 23, 27], "str": [0, 3, 12, 13, 15, 17, 18, 19, 21, 23, 26, 27, 28], "factory_b": 12, "randstr": [2, 12, 13, 17, 21, 23, 27], "length": [6, 9, 11, 12, 13, 19, 21, 23, 27], "16": [12, 13, 21, 22], "generated_b": 12, "len": [0, 6, 12, 17, 19, 23, 27], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23], "argument": [12, 13, 14, 19, 24, 27], "nonetyp": [12, 27], "There": [3, 12, 23], "dedic": 12, "function": [2, 12, 13, 14, 18, 21, 27, 28], "const": [12, 27], "instead": [2, 12, 13, 17, 19, 28], "none": [2, 12, 19, 27, 28], "bool": [0, 12, 17, 27, 28], "randbool": [12, 17, 27], "true": [0, 1, 2, 12, 13, 19, 22, 27, 28], "fals": [1, 12, 19, 27, 28], "int": [0, 7, 12, 13, 17, 18, 19, 22, 27], "randint": [2, 12, 13, 17, 19, 21, 27], "integ": [7, 8, 9, 12, 19, 22, 28], "float": [0, 8, 12, 19, 25, 27], "randfloat": [7, 12, 27], "string": [2, 3, 9, 12, 19, 22, 27, 28], "list": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 18, 22, 23, 27], "randlist": [12, 17, 27], "tupl": [12, 27], "dict": [2, 12, 18, 22, 27, 28], "randdict": [2, 12, 17, 19, 21, 27], "decim": [0, 7, 8, 11, 12, 27], "randdecim": [6, 12, 17, 21, 27], "datetim": [0, 2, 4, 10, 12, 19, 22, 27], "randdatetim": [5, 12, 27], "date": [0, 5, 10, 12, 19, 27], "randdat": [4, 12, 27], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 17, 19, 22, 23, 27], "randtim": [10, 12, 27], "timedelta": [0, 2, 5, 10, 12, 22, 27], "randtimedelta": [11, 12, 27], "candid": [6, 7, 12], "or_non": [2, 12, 27], "factory_nul": 12, "0": [1, 2, 6, 7, 8, 11, 12, 13, 14, 17, 19, 21, 22, 23, 25, 27], "1": [2, 6, 7, 11, 12, 14, 16, 17, 19, 22, 23, 25, 27], "get": [12, 21], "alwai": [12, 13, 17, 19], "return": [2, 12, 13, 14, 23, 27, 28], "sever": [0, 3, 12], "method": [12, 22, 23], "determin": [2, 12], "from": [2, 12, 13, 14, 16, 21, 22, 28], "multipl": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 17, 27], "make": [12, 17, 22], "e": 12, "so": [1, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 19, 27], "boolean": [1, 12, 19], "_": 12, "rang": [4, 5, 6, 7, 8, 9, 10, 11, 12], "10": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 19, 21, 23, 27], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 24, 27], "choos": [12, 27], "either": [12, 13], "each": [0, 1, 2, 3, 12, 13, 14, 19, 23, 27, 28], "result": [2, 12, 27], "chosen": [12, 27], "one": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 22, 27], "specif": [0, 4, 5, 6, 7, 10, 11, 12, 17, 20, 27], "randchoic": [12, 13, 14, 19, 22, 27], "allow": [2, 11, 12, 21, 27], "deni": 12, "same": [3, 11, 12, 14, 17, 19, 21], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 21], "predefin": 12, "thi": [2, 3, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 27, 28], "chang": [2, 3, 4, 5, 10, 11, 12, 19, 27], "post_process": [12, 19, 21, 22, 27], "format": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 21, 27], "50000": [12, 27], "decimal_len": [12, 17, 21, 27], "2": [0, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 27], "lambda": [2, 12, 19, 21, 22, 27], "x": [11, 12, 27], "f": [2, 11, 12, 13, 27], "12": [0, 10, 12, 22, 27], "345": [12, 27], "67": [12, 27], "3": [0, 3, 9, 12, 16, 17, 18, 19, 27], "153": [12, 27], "21": [12, 27], "90": [12, 27], "etc": [12, 18, 27], "provid": 12, "also": [0, 2, 5, 7, 10, 11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 27], "context": [12, 27], "iter": [0, 12, 17, 22, 24, 27], "includ": [3, 6, 7, 12, 19], "normal": [3, 12, 17, 27], "would": [12, 13, 14, 16, 17, 19, 22], "think": 12, "could": 12, "just": [1, 4, 5, 6, 7, 8, 10, 11, 12, 18, 23], "directli": [12, 15, 27], "need": [12, 17], "itertool": 12, "uuid": [2, 12, 15, 18], "defin": [2, 3, 11, 12, 27], "class": [12, 14, 19, 25, 27, 28], "mailaddressfactori": 12, "def": [2, 12, 14, 22], "self": 12, "com": 12, "http": 12, "doc": 12, "org": 12, "librari": 12, "html": 12, "count": 12, "id": [12, 17, 19, 21, 28], "uuid4": [2, 12, 15, 18], "name": [2, 12, 13, 15, 18, 19, 21, 28], "mail": 12, "set": [2, 12, 15, 17], "endswith": 12, "by_cal": [12, 27], "by_iter": [2, 12, 22, 27], "A": [12, 19, 27], "finit": 12, "onc": [12, 23], "termin": [12, 23], "cannot": [11, 12, 19, 21, 27], "ani": [0, 12, 13, 14, 19, 25, 27, 28], "more": [0, 2, 11, 12, 27], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 21, 22, 23, 27, 28], "element": [3, 11, 13, 19, 22, 24, 27], "randomli": [2, 13, 17, 18, 19, 20, 24, 27, 28], "like": [1, 4, 5, 6, 7, 8, 10, 11, 13, 14, 17, 19, 22, 27], "built": [2, 13, 14, 19], "two": [3, 13, 14, 19], "wai": [2, 13, 14, 19, 23], "code": [2, 13, 14, 15, 17, 19, 23], "look": [13, 14, 17, 19, 22], "dictitem": [13, 14, 16, 27], "sex": 13, "m": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 28], "ag": [2, 13, 15, 18, 19, 21], "kei": [2, 13, 19, 23, 27], "exist": [3, 13, 16], "random": [2, 13, 17, 20, 23, 27, 28], "100": [0, 2, 6, 7, 8, 13, 17], "9": 13, "As": [13, 19, 22, 24], "pass": [13, 18, 19, 27], "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28], "keyword": [13, 27], "By": [4, 5, 10, 11, 13, 14, 18, 19], "possibl": [11, 13, 19, 21], "whether": [2, 12, 13, 27], "dictionari": [2, 13, 28], "abov": [3, 13, 16, 19, 22], "see": [0, 11, 12, 13, 15, 19, 22], "here": [11, 13, 19, 20], "how": [13, 19, 24], "build": [13, 19, 24], "dictitemexampl": [13, 14, 25], "smith": 13, "22": 13, "Not": 13, "limit": [6, 13], "given": [13, 17, 19, 22], "output": [0, 1, 4, 5, 6, 7, 8, 10, 11, 13, 21, 24], "similar": 13, "its": [13, 23, 27], "Or": 13, "wrap": 13, "mani": [11, 17], "case": [1, 2, 6, 11, 17, 19, 21, 22], "becaus": [2, 11, 17], "tailor": 17, "applic": 17, "record": [2, 17, 19], "singl": [3, 17], "mai": [1, 2, 11, 16, 17, 19, 23, 27], "appropri": [11, 17], "rather": [5, 10, 17], "999_999": [17, 21], "price": [17, 21], "1000": [6, 17, 21], "200": [17, 22], "record_list": 17, "th": [11, 17], "longer": 17, "number": [2, 6, 7, 11, 17, 27, 28], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 17], "last": 17, "el_factori": 17, "4": [7, 17, 19], "therefor": 17, "typic": [11, 17], "where": 17, "ha": [11, 17], "mean": [2, 11, 17, 27], "onli": [2, 5, 12, 16, 17, 27], "el": 17, "5": [1, 9, 11, 17, 23, 27], "sure": 17, "map": [17, 27, 28], "piec": 17, "attribut": 17, "type": [0, 3, 14, 16, 17, 21, 24, 27, 28], "necessari": [1, 11, 17], "separ": [2, 3, 17], "schema": 17, "sinc": [3, 17, 21], "omit": [2, 15, 17], "equal": [11, 17, 27], "accept": [17, 27], "guarante": [16, 17], "try": 18, "step": [18, 22], "prepar": 18, "8": [9, 14, 18, 27], "newer": 18, "pip": 18, "command": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 21, 24], "factori": [2, 18, 22, 24, 25, 28], "20": [0, 2, 11, 15, 18, 19], "some": [2, 12, 19, 20], "timelin": [20, 24], "data": [2, 16, 20, 24, 27], "depend": [20, 24], "previou": [19, 20, 21, 24], "json": [1, 2, 3, 4, 5, 6, 7, 10, 11, 20, 24], "modul": [21, 24], "18": 21, "64": 21, "value_json": 21, "dump": 21, "we": 21, "wosar5ajmwhngj72": 21, "51": [0, 21], "convert": [2, 3, 19, 21], "default": [1, 4, 5, 6, 7, 10, 11, 14, 19, 21, 27, 28], "583085": 21, "754": 21, "were": 21, "begin": 21, "v": [21, 23, 27], "non": [12, 22], "pseudo": 22, "seri": 22, "iter_datetim": 22, "start": [22, 24], "nxt": 22, "while": [2, 22], "yield": [2, 22], "iter_randomwalk": 22, "step_f": 22, "2022": [0, 22], "hour": [2, 11, 22], "locat": 22, "hourli": 22, "01": [0, 4, 5, 6, 7, 11, 22], "01t12": [5, 22], "00": [5, 10, 11, 22], "13": 22, "14": 22, "15": [6, 7, 22], "seen": 22, "definit": [0, 2, 19, 22, 24, 27], "increas": 22, "exactli": 22, "differ": [3, 12, 22], "randomwalk": 22, "thu": 22, "wa": [2, 15, 22, 27], "d": [2, 4, 5, 11, 22], "isoformat": 22, "128": 23, "generated1": 23, "generated2": 23, "note": [19, 23], "low": 23, "probabl": [1, 2, 4, 5, 6, 7, 8, 10, 11, 14, 19, 23, 27], "thei": [19, 23, 27], "ident": 23, "usual": 23, "sugar": 23, "coat": 23, "syntax": 23, "although": [12, 23], "itself": 23, "cnt": 23, "generated_valu": 23, "dispos": 23, "must": [2, 23, 27], "regener": 23, "infinity_it": [23, 27], "foo": [23, 27], "bar": [23, 27], "k": [19, 23, 27], "zip": [23, 27], "warn": 23, "run": [23, 24], "below": [2, 3, 23], "continu": 23, "indefinit": 23, "caus": [2, 23], "infinit": 23, "loop": 23, "handl": 23, "packag": 24, "help": 24, "quick": 24, "instal": 24, "minim": 24, "construct": [24, 27], "nullabl": [19, 24], "union": [24, 27, 28], "choic": 24, "constanc": 24, "process": [1, 2, 24, 27], "custom": [19, 24, 28], "detail": [3, 24], "individu": 24, "tip": 24, "usag": 24, "subpackag": 24, "submodul": 24, "index": 24, "except": 25, "prop_exist": [25, 27], "base": [19, 25, 26, 27, 28], "obj": 25, "sequenc": [25, 27], "factoryconstructionerror": [26, 27], "messag": 26, "properti": [26, 27], "item": [19, 27], "arg": 27, "kwd": 27, "abc": 27, "t": [11, 27], "infin": [6, 7, 27], "serv": 27, "NOT": 27, "size": 27, "paramet": [27, 28], "abstract": 27, "accord": [0, 27], "assembl": 27, "prob": 27, "rnd": [27, 28], "whose": [19, 27], "option": [15, 17, 21, 24, 27, 28], "callabl": 27, "r": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 19, 27], "modifi": 27, "fromexamplecontext": 27, "path": [2, 27], "custom_func": [19, 27, 28], "_customfunc": 27, "example_is_custom": [], "examples_stack": 27, "child": 27, "current_exampl": 27, "recurs": 27, "classmethod": [], "root": [], "func": 27, "It": [1, 2, 11, 19, 27], "match": [27, 28], "execut": [0, 3, 15, 17, 21, 27], "first": [2, 12, 27], "new": 27, "recommend": [2, 27], "receiv": 27, "kwarg": [27, 28], "futur": [2, 19, 27], "updat": 27, "should": 27, "take": 27, "preced": 27, "over": 27, "rais": 27, "support": 27, "prop_tru": [1, 27], "inconsist": 27, "weight": [14, 27], "chose": [], "No": 27, "minimum": [4, 5, 6, 7, 8, 10, 11, 27], "maximum": [4, 5, 6, 7, 8, 10, 11, 16, 27], "tzinfo": 27, "liter": 27, "fix": 27, "awar": 27, "correct": 27, "otherwis": 27, "supportsfloat": 27, "p_inf": 27, "n_inf": 27, "nan": [6, 7, 27], "part": [6, 7, 11, 27], "posit": [6, 7, 16, 27], "neg": [6, 7, 27], "items_dict": 27, "hashabl": 27, "ignor": [2, 19, 27], "_base": 27, "_list": 27, "items_list": 27, "charset": [9, 27], "charact": [9, 27], "timezon": [], "inform": [], "unit": [11, 27], "atom": 27, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "factory_definition_fil": [], "filenam": [2, 27], "instanc": [2, 28], "variabl": [2, 15], "print": 3, "repr": 3, "befor": 3, "standard": [3, 4, 5, 7, 10], "after": [3, 7, 16], "being": 3, "For": [0, 3, 11, 19, 28], "factory_def": [0, 2, 3, 15], "py": [0, 2, 3, 15], "out": 3, "txt": 3, "veri": 3, "practic": 3, "thing": 3, "done": [3, 14, 17, 21], "redirect": 3, "featur": [3, 19], "shell": 3, "combin": 3, "describ": [0, 3, 15], "them": [2, 3, 12, 15, 27], "l": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "repeatedli": [3, 19], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 15], "far": 15, "load": 15, "runtim": 15, "written": [7, 15], "bound": 15, "save": 15, "under": 15, "your": 15, "from_pyfil": [15, 27], "extern": 24, "file": [0, 2, 24, 27], "pathlik": 27, "io": 27, "notimpl": 27, "behav": 27, "until": 27, "enumer": [12, 14], "randenum": [12, 27], "particular": [12, 19], "enum": [12, 27], "myenum": 14, "custom_chain_length": 27, "signal_terminate_custom": 27, "terminate_custom_chain": 27, "enum_cl": 27, "bias": 14, "elif": 14, "commonli": 12, "increment": [12, 19, 22, 27], "wish": 16, "initi": 16, "ad": 16, "databas": [2, 16, 19], "initial_valu": [16, 27], "101": 16, "31": [4, 16], "102": 16, "103": 16, "fit": 16, "sign": 16, "32": 16, "bit": 16, "add": [22, 28], "auto": 22, "field": [2, 22, 28], "special": 24, "sequenti": 27, "reach": 27, "reset": 27, "satisfi": [1, 4, 5, 6, 7, 8, 10, 11, 19, 27], "sqlalchemi": [12, 13, 25], "enabl": [], "experiment": 19, "remov": 19, "significantli": 19, "variou": 19, "appli": 19, "mapped_column": 19, "orm": [19, 28], "declarative_bas": [19, 28], "user": [19, 28], "__tablename__": [19, 28], "primary_kei": [19, 28], "autoincr": [19, 28], "least": 19, "work": 19, "biginteg": 19, "numer": [7, 19], "text": 19, "timestamp": [2, 19], "interv": 19, "doe": [2, 7, 11, 19], "all": [3, 12, 19, 27], "rdb": 19, "pleas": 19, "relationship": 19, "foreign": 19, "constraint": 19, "even": [2, 19], "uniqu": 19, "primari": 19, "duplic": 19, "known": 19, "greater": 19, "intuit": 19, "birthdai": 19, "problem": [7, 19], "check": 19, "shown": 2, "accomplish": [], "deriv": 28, "column": 28, "model": [13, 19, 28], "as_dict": [13, 19, 28], "factory_from_column": 28, "60": 19, "overridden": 19, "second": [11, 19], "respect": 19, "for_exampl": [], "inspect": 19, "col": 19, "attr": 19, "override_column": 28, "obtain": [1, 2, 27, 28], "independ": 19, "reiter": 19, "automat": 19, "manual": [11, 19], "group_id": 19, "respond": 19, "regular": 19, "manag": [11, 19], "order": 19, "actual": 19, "coe": [], "advanc": 19, "basic": 0, "further": 0, "avail": [0, 3], "page": [0, 2], "42": 0, "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 15], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "mode": [3, 15, 24], "50": 1, "lower": 1, "program": [1, 7], "anoth": 1, "languag": [1, 7], "desir": 1, "point": [5, 7, 10], "p": [6, 7], "inf": [6, 7], "prob_p_inf": [6, 7], "n": [6, 7], "prob_n_inf": [6, 7], "prob_nan": [6, 7], "behavior": [2, 4, 5, 6, 7, 10, 11], "left": [4, 5, 6, 7, 10, 11], "between": [4, 5, 6, 7, 10, 11], "1e": [6, 7], "have": 7, "abil": 7, "place": [6, 7], "digit": [7, 11], "repres": [7, 11], "read": 7, "equival": 2, "test": 2, "util": 2, "o": 2, "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [4, 5, 10, 11], "fmt": [4, 5, 10, 11], "8601": [4, 5, 10, 11], "form": [4, 5, 10], "strftime": [4, 5, 10], "strptime": [4, 5, 10], "2021": [4, 5], "01t00": 5, "y": [4, 5], "h": [5, 10, 11], "simultan": [4, 5, 10], "elaps": [5, 10], "certain": [5, 10], "both": [4, 10], "dai": 11, "7": 11, "1d": 11, "7d": 11, "adjust": 11, "0d": 11, "xx": 11, "": 11, "durat": 11, "proprietari": 11, "1h30m": 11, "1d2h3m4s5ms6u": 11, "express": 11, "concaten": 11, "direct": 11, "xd": 11, "2d": 11, "xh": 11, "2h": 11, "xm": 11, "minut": 11, "2m": 11, "millisecond": 11, "xu": 11, "microsecond": 11, "2u": 11, "month": 11, "year": [2, 11], "larger": 11, "distinguish": 11, "30": 11, "zero": 11, "pad": 11, "23": 11, "total": 11, "round": 11, "down": 11, "59": 11, "tm": 11, "6": 11, "000000": 11, "000001": 11, "999999": 11, "140": 11, "0h": 11, "meaningless": 11, "notat": 11, "without": [2, 11], "factory_path": 2, "row_num": 2, "csv_column": [2, 15, 27], "To": 2, "row": 2, "line": 2, "someth": 2, "factorydef": 27, "full_respons": 27, "dataclass": 27, "top": 2, "old": 2, "third": 2, "17642547": 2, "0a4c": 2, "4897": 2, "a8da": 2, "2d495558b8fa": 2, "d40s8jq": 2, "discard": 2, "pk": 2, "miss": 2, "made": 2, "timestamp_it": 2, "2002": 2, "els": [], "action": 2, "fewer": 2, "probabilist": 2, "howev": 12, "decid": [12, 27], "affect": 12, "lazy_choic": [2, 12, 27], "adopt": [12, 27], "or_nul": 12}, "objects": {"": [[25, 0, 0, "-", "randog"]], "randog": [[25, 1, 1, "", "DictItemExample"], [25, 1, 1, "", "Example"], [26, 0, 0, "-", "exceptions"], [27, 0, 0, "-", "factory"], [28, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[25, 2, 1, "", "example"], [25, 2, 1, "", "prop_exists"]], "randog.exceptions": [[26, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[26, 4, 1, "", "message"]], "randog.factory": [[27, 1, 1, "", "DictItem"], [27, 1, 1, "", "Factory"], [27, 1, 1, "", "FactoryDef"], [27, 1, 1, "", "FromExampleContext"], [27, 6, 1, "", "by_callable"], [27, 6, 1, "", "by_iterator"], [27, 6, 1, "", "const"], [27, 6, 1, "", "from_example"], [27, 6, 1, "", "from_pyfile"], [27, 6, 1, "", "increment"], [27, 6, 1, "", "randbool"], [27, 6, 1, "", "randchoice"], [27, 6, 1, "", "randdate"], [27, 6, 1, "", "randdatetime"], [27, 6, 1, "", "randdecimal"], [27, 6, 1, "", "randdict"], [27, 6, 1, "", "randenum"], [27, 6, 1, "", "randfloat"], [27, 6, 1, "", "randint"], [27, 6, 1, "", "randlist"], [27, 6, 1, "", "randstr"], [27, 6, 1, "", "randtime"], [27, 6, 1, "", "randtimedelta"], [27, 6, 1, "", "union"]], "randog.factory.DictItem": [[27, 2, 1, "", "factory"], [27, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[27, 5, 1, "", "infinity_iter"], [27, 5, 1, "", "iter"], [27, 5, 1, "", "next"], [27, 5, 1, "", "or_none"], [27, 5, 1, "", "post_process"]], "randog.factory.FactoryDef": [[27, 2, 1, "", "csv_columns"], [27, 2, 1, "", "factory"]], "randog.factory.FromExampleContext": [[27, 4, 1, "", "current_example"], [27, 4, 1, "", "custom_chain_length"], [27, 4, 1, "", "custom_funcs"], [27, 4, 1, "", "examples"], [27, 5, 1, "", "from_example"], [27, 4, 1, "", "path"], [27, 5, 1, "", "recursive"], [27, 4, 1, "", "rnd"], [27, 4, 1, "", "signal_terminate_custom"], [27, 5, 1, "", "terminate_custom_chain"]], "randog.sqlalchemy": [[28, 6, 1, "", "custom"], [28, 6, 1, "", "factory"], [28, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 12, "factori": [12, 13, 14, 15, 16, 17, 19, 21, 23, 27], "gener": [12, 17, 19, 24], "random": [12, 22, 24], "valu": 12, "element": [12, 17], "type": [12, 19, 22], "nullabl": 12, "union": 12, "randomli": [12, 21], "choic": 12, "constanc": 12, "process": 12, "output": [2, 3, 12], "custom": 12, "detail": [0, 12], "how": 12, "build": 12, "individu": [12, 19], "dict": [13, 19], "randdict": 13, "from_exampl": [13, 14, 17, 19], "list": 17, "each": 17, "length": 17, "tupl": 17, "quick": 18, "start": 18, "instal": 18, "minim": 18, "us": [18, 23], "tip": 20, "usag": 20, "creat": 21, "json": 21, "decim": [6, 21], "e": 21, "t": 21, "c": 21, "string": 21, "timelin": 22, "data": 22, "depend": 22, "previou": 22, "chang": 22, "smpl_datetim": 22, "str": [9, 22], "As": 23, "iter": [3, 23], "obj": 24, "content": [24, 25], "indic": 24, "tabl": 24, "randog": [19, 25, 26, 27, 28], "packag": [25, 26, 27, 28], "subpackag": 25, "submodul": 25, "modul": 25, "except": 26, "run": 0, "command": 0, "format": [3, 11], "file": [3, 15], "extern": 15, "definit": 15, "enum": 14, "randenum": 14, "special": 12, "increment": 16, "integ": 16, "from": 19, "sqlalchemi": [19, 28], "support": 19, "column": 19, "limit": 19, "model": [], "instanc": 19, "some": [], "field": 19, "specifi": 19, "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "int": 8, "float": 7, "datetim": 5, "date": 4, "time": 10, "timedelta": 11, "simpl": 11, "code": 11, "csv": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"], [11, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"]], "byfile Mode": [[2, "byfile-mode"]], "output as CSV": [[2, "output-as-csv"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "date Mode": [[4, "date-mode"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "float Mode": [[7, "float-mode"]], "int Mode": [[8, "int-mode"]], "str Mode": [[9, "str-mode"]], "time Mode": [[10, "time-mode"]], "timedelta Mode": [[11, "timedelta-mode"]], "Simple Format": [[11, "simple-format"]], "Format codes": [[11, "format-codes"]], "Construct Factories (generator of random values)": [[12, "construct-factories-generator-of-random-values"]], "Elemental types": [[12, "elemental-types"]], "Nullable": [[12, "nullable"]], "Union type": [[12, "union-type"]], "Randomly choice": [[12, "randomly-choice"]], "Constance": [[12, "constance"]], "Processing output": [[12, "processing-output"]], "Custom Factory": [[12, "custom-factory"]], "Details on how to build individual factories": [[12, "details-on-how-to-build-individual-factories"]], "Special Factory": [[12, "special-factory"]], "Dict factory": [[13, "dict-factory"]], "Factory by randdict": [[13, "factory-by-randdict"]], "Factory by from_example": [[13, "factory-by-from-example"], [14, "factory-by-from-example"], [17, "factory-by-from-example"], [19, "factory-by-from-example"]], "Enum factory": [[14, "enum-factory"]], "Factory by randenum": [[14, "factory-by-randenum"]], "External File Definition of Factory": [[15, "external-file-definition-of-factory"]], "Incremental integer factory": [[16, "incremental-integer-factory"]], "List factory": [[17, "list-factory"]], "Each elements": [[17, "each-elements"]], "Length": [[17, "length"]], "Generate tuple": [[17, "generate-tuple"]], "Quick start": [[18, "quick-start"]], "Installation": [[18, "installation"]], "Minimal use": [[18, "minimal-use"]], "Factory from sqlalchemy": [[19, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[19, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[19, "supported-column-type"]], "Limitations": [[19, "limitations"]], "Specify factories for individual fields": [[19, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[19, "generate-a-dict-instance"]], "Tips (Usage)": [[20, "tips-usage"]], "Create JSON randomly": [[21, "create-json-randomly"]], "Decimal e.t.c.": [[21, "decimal-e-t-c"]], "Factory of JSON string": [[21, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[22, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[22, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[23, "use-factories"]], "As iterator": [[23, "as-iterator"]], "random-obj-generator": [[24, "random-obj-generator"]], "Contents:": [[24, null]], "Indices and tables": [[24, "indices-and-tables"]], "randog package": [[25, "randog-package"]], "Subpackages and submodules": [[25, "subpackages-and-submodules"]], "Module contents": [[25, "module-randog"]], "randog.exceptions package": [[26, "module-randog.exceptions"]], "randog.factory package": [[27, "module-randog.factory"]], "randog.sqlalchemy package": [[28, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[25, "randog.DictItemExample"]], "example (class in randog)": [[25, "randog.Example"]], "example (randog.dictitemexample attribute)": [[25, "randog.DictItemExample.example"]], "module": [[25, "module-randog"], [26, "module-randog.exceptions"], [27, "module-randog.factory"], [28, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[25, "randog.DictItemExample.prop_exists"]], "randog": [[25, "module-randog"]], "factoryconstructionerror": [[26, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[26, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[26, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[27, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[27, "randog.factory.Factory"]], "factorydef (class in randog.factory)": [[27, "randog.factory.FactoryDef"]], "fromexamplecontext (class in randog.factory)": [[27, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[27, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[27, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[27, "randog.factory.const"]], "csv_columns (randog.factory.factorydef attribute)": [[27, "randog.factory.FactoryDef.csv_columns"]], "current_example (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.custom_funcs"]], "examples (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[27, "randog.factory.DictItem.factory"]], "factory (randog.factory.factorydef attribute)": [[27, "randog.factory.FactoryDef.factory"]], "from_example() (in module randog.factory)": [[27, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[27, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[27, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[27, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[27, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[27, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[27, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[27, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[27, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[27, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[27, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[27, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[27, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[27, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[27, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[27, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[27, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[27, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[27, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[27, "randog.factory.randlist"]], "randog.factory": [[27, "module-randog.factory"]], "randstr() (in module randog.factory)": [[27, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[27, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[27, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[27, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.rnd"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[27, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[27, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[27, "randog.factory.union"]], "custom() (in module randog.sqlalchemy)": [[28, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[28, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[28, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[28, "module-randog.sqlalchemy"]]}})