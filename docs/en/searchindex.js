Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.as_command.time", "doc.as_command.timedelta", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.iterrange_factory", "doc.list_factory", "doc.logging", "doc.quickstart", "doc.sqlalchemy", "doc.str_factory", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "doc.write_generated", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.as_command.timedelta.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.iterrange_factory.rst", "doc.list_factory.rst", "doc.logging.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.str_factory.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "doc.write_generated.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "float Mode", "int Mode", "str Mode", "time Mode", "timedelta Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "Iteration of range", "List factory", "Logging", "Quick start", "Factory from sqlalchemy", "Str factory", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "Output Generated Values", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 21, 24, 25, 27], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32], "an": [2, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 29, 31, 32], "object": [2, 3, 4, 5, 10, 11, 12, 13, 15, 20, 21, 24, 29, 31, 32], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 21, 22, 24, 25, 26, 27, 31], "rule": [3, 12, 31], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 21, 23, 26, 29, 31], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 24, 27, 29, 31, 32], "when": [2, 3, 6, 7, 8, 12, 15, 16, 17, 18, 19, 21, 22, 27, 31], "creat": [2, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32], "If": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 25, 27, 29, 31, 32], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32], "do": [12, 16, 17, 31], "care": [12, 26], "about": [12, 31], "condit": [0, 12, 22, 31], "other": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 19, 21, 31, 32], "than": [2, 3, 5, 6, 7, 10, 11, 12, 15, 18, 21, 29, 31], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31], "simpli": [2, 12, 21, 29, 31], "suppli": 12, "exampl": [0, 3, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32], "from_exampl": [2, 12, 15, 20, 22, 25, 31, 32], "want": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 20, 21, 25, 27, 32], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 24, 25, 27, 28, 29, 31, 32], "constructor": 12, "correspond": [12, 13, 31], "import": [2, 3, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32], "factory_a": 12, "generated_a": 12, "next": [2, 3, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 31, 32], "assert": [12, 13, 14, 15, 16, 18, 20, 21, 22, 26, 31], "isinst": [12, 13, 15, 18, 20, 21, 22, 26, 31], "str": [0, 3, 12, 13, 15, 18, 20, 21, 24, 26, 29, 30, 31, 32], "factory_b": 12, "randstr": [2, 3, 12, 13, 15, 18, 22, 24, 26, 27, 31], "length": [3, 6, 7, 9, 11, 12, 13, 21, 24, 26, 27, 31], "16": [3, 7, 8, 9, 12, 13, 24, 25], "generated_b": 12, "len": [0, 6, 7, 8, 12, 18, 21, 22, 26, 31], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27], "argument": [12, 13, 14, 15, 21, 22, 27, 28, 29, 31], "nonetyp": [12, 31], "There": [3, 12, 26], "dedic": 12, "function": [2, 12, 13, 14, 15, 20, 24, 27, 29, 31, 32], "const": [12, 31], "instead": [2, 12, 13, 18, 21, 32], "none": [12, 21, 29, 31, 32], "bool": [0, 12, 18, 29, 31, 32], "randbool": [12, 18, 31], "true": [0, 1, 2, 3, 12, 13, 17, 21, 25, 29, 31, 32], "fals": [1, 12, 21, 29, 31, 32], "int": [0, 2, 3, 7, 12, 13, 15, 17, 18, 20, 21, 25, 29, 31], "randint": [2, 12, 13, 18, 21, 22, 24, 31], "integ": [1, 7, 8, 9, 12, 21, 25, 32], "float": [0, 8, 12, 21, 29, 31], "randfloat": [7, 12, 31], "string": [2, 3, 9, 12, 21, 22, 25, 29, 31, 32], "list": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 20, 25, 26, 29, 31], "randlist": [12, 18, 31], "tupl": [12, 31], "dict": [2, 12, 15, 20, 25, 31, 32], "randdict": [2, 12, 15, 18, 21, 24, 27, 31], "decim": [0, 7, 8, 11, 12, 31], "randdecim": [6, 12, 18, 24, 31], "datetim": [0, 2, 3, 4, 10, 12, 17, 21, 25, 31], "randdatetim": [5, 12, 31], "date": [0, 5, 10, 12, 17, 21, 31], "randdat": [4, 12, 27, 31], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 18, 21, 25, 26, 29, 31], "randtim": [10, 12, 31], "timedelta": [0, 2, 4, 5, 10, 12, 17, 25, 31], "randtimedelta": [11, 12, 31], "candid": [6, 7, 12], "or_non": [12, 31], "factory_nul": 12, "0": [1, 2, 3, 6, 7, 11, 12, 13, 14, 17, 18, 21, 24, 25, 26, 29, 31], "1": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 21, 25, 26, 27, 29, 31], "get": [2, 3, 12, 24], "alwai": [12, 13, 18, 21], "return": [2, 3, 12, 13, 14, 15, 17, 26, 29, 31, 32], "sever": [0, 3, 12], "method": [2, 12, 15, 25, 26, 27], "determin": [2, 8, 12], "from": [2, 3, 6, 7, 8, 12, 13, 14, 15, 17, 22, 24, 25, 27, 29, 31, 32], "multipl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 18, 31], "make": [1, 2, 6, 7, 8, 12, 15, 18, 25], "e": [9, 12, 22, 27], "so": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 21, 31], "boolean": [1, 12, 21], "_": 12, "rang": [4, 5, 6, 7, 8, 9, 10, 11, 12], "10": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 21, 22, 24, 26, 31], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 22, 27, 28, 31], "choos": [12, 15, 31], "either": [12, 13], "each": [0, 1, 2, 3, 12, 13, 14, 15, 19, 21, 26, 27, 29, 31, 32], "result": [2, 3, 7, 12, 31], "chosen": [12, 31], "one": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 18, 25, 31], "specif": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 23, 31], "randchoic": [12, 13, 14, 21, 25, 31], "allow": [2, 11, 12, 24, 31], "deni": 12, "same": [2, 3, 6, 7, 8, 11, 12, 14, 17, 18, 21, 24], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 19, 20, 24], "predefin": 12, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24, 25, 26, 29, 31, 32], "chang": [3, 4, 5, 10, 11, 12, 21, 31], "post_process": [12, 21, 24, 25, 31], "format": [0, 2, 12, 24, 27, 31], "50000": [12, 31], "decimal_len": [12, 18, 24, 31], "2": [0, 3, 6, 7, 8, 11, 12, 14, 16, 17, 18, 21, 24, 25, 27, 31], "lambda": [2, 12, 21, 24, 25, 27, 31], "x": [3, 6, 7, 8, 11, 12, 15, 31], "f": [2, 11, 12, 13, 31], "12": [0, 6, 10, 12, 17, 25, 31], "345": [6, 12, 31], "67": [6, 12, 31], "3": [0, 3, 6, 7, 9, 12, 16, 17, 18, 20, 21, 22, 27, 31], "153": [12, 31], "21": [12, 31], "90": [6, 7, 8, 12, 31], "etc": [2, 3, 12, 20, 31], "provid": [3, 12, 19], "also": [0, 2, 3, 4, 5, 7, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31], "context": [1, 12, 31], "iter": [0, 12, 18, 25, 27, 28, 29, 31], "includ": [3, 6, 7, 8, 12, 21], "normal": [3, 12, 18, 31], "would": [12, 13, 14, 16, 18, 21, 25], "think": 12, "could": 12, "just": [1, 4, 5, 6, 7, 8, 10, 11, 12, 20, 26], "directli": [12, 15, 31], "need": [3, 12, 18, 22], "itertool": [2, 12, 27], "uuid": [2, 12, 15, 20], "defin": [2, 3, 11, 12, 15, 29, 31], "class": [12, 14, 21, 29, 31, 32], "mailaddressfactori": 12, "def": [2, 12, 14, 15, 25], "self": 12, "com": 12, "http": 12, "doc": [12, 19], "org": 12, "librari": [3, 12, 19], "html": 12, "count": [2, 12, 27, 31], "id": [2, 12, 15, 18, 21, 24, 32], "uuid4": [2, 12, 15, 20], "name": [2, 3, 12, 13, 15, 20, 21, 24, 27, 31, 32], "mail": 12, "set": [2, 3, 12, 15, 17, 18, 19], "endswith": 12, "by_cal": [12, 31], "by_iter": [2, 12, 25, 27, 31], "A": [4, 5, 10, 12, 21, 22, 31], "finit": 12, "onc": [3, 12, 26], "termin": [3, 12, 26, 31], "cannot": [2, 9, 11, 12, 15, 21, 22, 24, 29, 31], "ani": [0, 2, 12, 13, 14, 15, 21, 29, 31, 32], "more": [0, 2, 6, 7, 8, 11, 12, 19, 27, 31], "gener": [0, 2, 3, 9, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 29, 31, 32], "element": [3, 11, 13, 21, 25, 28, 31], "randomli": [3, 13, 18, 20, 21, 23, 27, 28, 29, 31, 32], "like": [1, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 21, 25, 31], "built": [13, 14, 21], "two": [3, 13, 14, 21], "wai": [2, 13, 14, 17, 19, 21, 26, 27], "code": [2, 12, 13, 14, 15, 18, 21, 26], "look": [13, 14, 18, 21, 25], "dictitem": [13, 14, 31], "sex": 13, "m": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 27, 32], "ag": [2, 13, 15, 20, 21, 24], "kei": [2, 13, 15, 21, 26, 27, 29, 31], "exist": [3, 13, 16], "random": [2, 3, 13, 18, 22, 23, 26, 29, 31, 32], "100": [0, 2, 6, 7, 8, 13, 18], "9": [9, 13], "As": [3, 13, 15, 21, 25, 28], "pass": [3, 13, 20, 21, 22, 31], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 31, 32], "keyword": [13, 31], "By": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 20, 21], "possibl": [3, 11, 13, 21, 22, 24], "whether": [12, 13, 31], "dictionari": [2, 3, 13, 27, 32], "abov": [3, 6, 7, 8, 13, 16, 21, 25], "see": [0, 2, 3, 4, 5, 10, 11, 12, 13, 15, 19, 21, 25, 27], "here": [3, 4, 5, 10, 11, 13, 19, 21, 23, 31], "how": [13, 19, 21, 28], "build": [13, 21, 28], "dictitemexampl": [13, 14, 29], "smith": 13, "22": [10, 13], "Not": 13, "limit": [3, 6, 7, 8, 13, 17], "given": [13, 18, 21, 25], "output": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 19, 24, 28, 29], "similar": [9, 13, 27], "its": [13, 26, 31], "Or": 13, "wrap": 13, "mani": [11, 18], "case": [1, 2, 6, 9, 11, 18, 21, 24, 25, 29, 31], "becaus": [11, 18, 19], "tailor": 18, "applic": 18, "record": [2, 18, 21], "singl": [3, 18], "mai": [1, 2, 3, 11, 16, 18, 19, 21, 26, 27, 29, 31], "appropri": [11, 15, 18, 19], "rather": [5, 10, 18], "999_999": [18, 24], "price": [18, 24], "1000": [6, 7, 8, 18, 24], "200": [18, 25], "record_list": 18, "th": [11, 18], "longer": 18, "number": [2, 3, 6, 7, 8, 11, 15, 18, 27, 29, 31, 32], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 18], "last": 18, "el_factori": 18, "4": [3, 7, 8, 9, 17, 18, 21, 22, 27], "therefor": [3, 18, 19], "typic": [11, 18], "where": [2, 9, 18, 29, 31], "ha": [7, 11, 18], "mean": [3, 4, 5, 10, 11, 15, 18, 31], "onli": [3, 5, 6, 7, 8, 12, 15, 16, 18, 31], "el": 18, "5": [1, 2, 6, 7, 9, 11, 17, 18, 26, 27, 31], "sure": 18, "map": [18, 29, 31, 32], "piec": 18, "attribut": [18, 28], "type": [0, 1, 3, 14, 16, 18, 24, 28, 31, 32], "necessari": [1, 11, 18], "separ": [2, 3, 7, 8, 15, 18, 29], "schema": [3, 18], "sinc": [4, 5, 7, 10, 15, 18, 24], "omit": [2, 3, 4, 5, 10, 15, 18], "equal": [11, 18, 31], "accept": [3, 18, 31], "guarante": [9, 16, 18], "try": 20, "step": [20, 25, 31], "prepar": 20, "8": [1, 7, 8, 9, 14, 15, 17, 20, 22, 27, 31], "newer": 20, "pip": [9, 20, 22], "command": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 18, 19, 20, 24, 27, 28], "factori": [2, 3, 17, 19, 20, 25, 27, 28, 29, 32], "20": [0, 1, 2, 9, 11, 15, 20, 21], "some": [1, 2, 3, 12, 15, 21, 23, 27], "timelin": [23, 28], "data": [2, 16, 23, 28, 31], "depend": [3, 23, 28, 31], "previou": [21, 23, 24, 28], "json": [1, 2, 3, 4, 5, 6, 7, 10, 11, 23, 28], "modul": [9, 22, 24, 28], "18": 24, "64": 24, "value_json": 24, "dump": 24, "we": [19, 24], "wosar5ajmwhngj72": 24, "51": [0, 24], "convert": [3, 21, 24], "default": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 21, 24, 29, 31, 32], "583085": 24, "754": 24, "were": 24, "begin": [4, 5, 10, 24], "v": [24, 26, 31], "non": [12, 15, 25, 27], "pseudo": 25, "seri": 25, "iter_datetim": 25, "start": [25, 28], "nxt": 25, "while": [2, 25], "yield": [2, 25], "iter_randomwalk": 25, "step_f": 25, "2022": [0, 4, 5, 25], "hour": [2, 5, 10, 11, 17, 25], "locat": 25, "hourli": 25, "01": [0, 4, 5, 6, 7, 10, 11, 25], "01t12": [5, 25], "00": [5, 6, 10, 11, 25], "13": 25, "14": 25, "15": [6, 7, 8, 25], "seen": 25, "definit": [0, 2, 3, 21, 25, 28, 29, 31], "increas": [19, 25], "exactli": [2, 25], "differ": [3, 8, 12, 17, 25, 31], "randomwalk": 25, "thu": 25, "wa": [2, 15, 25, 31], "d": [2, 3, 4, 5, 11, 22, 25, 27], "isoformat": 25, "128": 26, "generated1": 26, "generated2": 26, "note": [3, 6, 7, 8, 15, 21, 26], "low": 26, "probabl": [1, 2, 4, 5, 10, 11, 14, 21, 26, 29, 31], "thei": [21, 26, 31], "ident": [6, 7, 8, 26], "usual": [22, 26], "sugar": 26, "coat": 26, "syntax": 26, "although": [3, 7, 8, 12, 22, 26], "itself": 26, "cnt": 26, "generated_valu": 26, "dispos": 26, "must": [2, 3, 4, 5, 9, 10, 22, 26, 31], "regener": [2, 26, 29, 31], "infinity_it": [26, 31], "foo": [2, 26, 31], "bar": [26, 31], "k": [21, 26, 31], "zip": [26, 31], "warn": [0, 26, 30], "run": [19, 26, 27, 28], "below": [2, 3, 15, 26], "continu": 26, "indefinit": [17, 26], "caus": [4, 5, 10, 19, 26], "infinit": 26, "loop": 26, "handl": [15, 26], "packag": [3, 9, 22, 28], "help": 28, "quick": 28, "instal": [3, 9, 22, 28], "minim": 28, "construct": [28, 31], "nullabl": [21, 28], "union": [28, 31, 32], "choic": 28, "constanc": 28, "process": [1, 2, 15, 28, 31], "custom": [21, 28, 32], "detail": [2, 28], "individu": 28, "tip": 28, "usag": [4, 5, 10, 28], "subpackag": 28, "submodul": 28, "index": 28, "except": [3, 15, 29, 31], "prop_exist": [29, 31], "base": [6, 7, 8, 21, 29, 30, 31, 32], "obj": 29, "sequenc": [29, 31], "factoryconstructionerror": [30, 31], "messag": [3, 30], "properti": [1, 30, 31], "item": [12, 21, 31], "arg": 31, "kwd": 31, "abc": 31, "t": [3, 11, 31], "infin": 31, "serv": 31, "NOT": 31, "size": [29, 31], "paramet": [29, 31, 32], "abstract": [], "accord": [0, 31], "assembl": 31, "prob": 31, "rnd": [31, 32], "whose": [21, 31], "option": [15, 18, 24, 27, 28, 29, 31, 32], "callabl": [29, 31], "r": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 21, 22, 31], "modifi": [0, 31], "fromexamplecontext": 31, "path": [2, 31], "custom_func": [21, 31, 32], "_customfunc": 31, "example_is_custom": [], "examples_stack": 31, "child": [19, 31], "current_exampl": 31, "recurs": 31, "classmethod": [], "root": 19, "func": 31, "It": [1, 2, 3, 9, 11, 21, 29, 31], "match": [31, 32], "execut": [0, 3, 15, 18, 19, 24, 29, 31], "first": [3, 12, 31], "new": 31, "recommend": [2, 19, 31], "receiv": 31, "kwarg": [31, 32], "futur": [2, 3, 19, 21, 31], "updat": 31, "should": [3, 15, 31], "take": [1, 15, 31], "preced": [15, 31], "over": 31, "rais": [15, 29, 30, 31], "support": 31, "prop_tru": [1, 31], "inconsist": 31, "weight": [6, 7, 8, 14, 31], "chose": [], "No": 31, "minimum": [6, 7, 8, 11, 31], "maximum": [6, 7, 8, 11, 16, 17, 31], "tzinfo": 31, "liter": 31, "fix": [7, 31], "awar": 31, "correct": 31, "otherwis": 31, "supportsfloat": 31, "p_inf": 31, "n_inf": 31, "nan": 31, "part": [6, 7, 11, 31], "posit": [6, 7, 8, 16, 31], "neg": [6, 7, 8, 17, 31], "items_dict": 31, "hashabl": 31, "ignor": [3, 21, 31], "_base": 31, "_list": 31, "items_list": 31, "charset": [3, 9, 22, 31], "charact": [3, 9, 31], "timezon": [], "inform": [3, 19], "unit": [7, 11, 31], "atom": 31, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 27], "factory_definition_fil": [], "filenam": [2, 31], "instanc": [2, 32], "variabl": [0, 15], "print": [3, 27], "repr": 3, "befor": 3, "standard": [2, 3, 4, 5, 7, 10, 19], "after": [3, 4, 5, 10, 16, 31], "being": 3, "For": [0, 2, 3, 6, 7, 8, 11, 15, 19, 21, 32], "factory_def": [0, 2, 3, 15], "py": [0, 2, 3, 15], "out": 3, "txt": 3, "veri": 19, "practic": 27, "thing": [], "done": [14, 15, 18, 24], "redirect": [], "featur": [3, 19, 21], "shell": [2, 3], "combin": [4, 5, 10, 12], "describ": [0, 3, 15], "them": [2, 12, 15, 27, 31], "l": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 15], "repeatedli": [3, 21], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 21], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 15], "far": 15, "load": 15, "runtim": 15, "written": [1, 6, 7, 8, 9, 15], "bound": 15, "save": 15, "under": 15, "your": [15, 22, 27], "from_pyfil": [15, 31], "extern": [3, 28], "file": [0, 2, 19, 28, 31], "pathlik": 31, "io": 31, "notimpl": 31, "behav": 31, "until": 31, "enumer": [12, 14], "randenum": [12, 31], "particular": [3, 6, 7, 8, 12, 21], "enum": [12, 31], "myenum": 14, "custom_chain_length": 31, "signal_terminate_custom": 31, "terminate_custom_chain": 31, "enum_cl": 31, "bias": 14, "elif": 14, "commonli": 12, "increment": [12, 15, 17, 21, 25, 31], "wish": [3, 16], "initi": [2, 16, 17], "ad": [3, 16, 19], "databas": [2, 16, 21], "initial_valu": [16, 31], "101": 16, "31": [4, 8, 16], "102": 16, "103": 16, "fit": 16, "sign": 16, "32": [7, 8, 16], "bit": 16, "add": [25, 32], "auto": 25, "field": [2, 25, 32], "special": 28, "sequenti": [3, 31], "reach": 31, "reset": 31, "satisfi": [1, 4, 5, 6, 7, 8, 10, 11, 21, 31], "sqlalchemi": [12, 13, 29], "enabl": [], "experiment": [3, 21], "remov": [3, 21], "significantli": [3, 21], "variou": 21, "appli": 21, "mapped_column": 21, "orm": [21, 32], "declarative_bas": [21, 32], "user": [21, 32], "__tablename__": [21, 32], "primary_kei": [21, 32], "autoincr": [21, 32], "least": 21, "work": [2, 21], "biginteg": 21, "numer": [6, 7, 9, 21], "text": 21, "timestamp": [2, 21], "interv": 21, "doe": [11, 21, 31], "all": [2, 3, 6, 7, 8, 12, 21, 22, 31], "rdb": 21, "pleas": [3, 9, 19, 21, 22], "relationship": 21, "foreign": 21, "constraint": 21, "even": [2, 3, 21], "uniqu": 21, "primari": 21, "duplic": 21, "known": 21, "greater": [6, 7, 8, 21], "intuit": 21, "birthdai": 21, "problem": [3, 7, 21], "check": [3, 21], "shown": [2, 27], "accomplish": [], "deriv": 32, "column": [15, 27, 29, 32], "model": [13, 21, 32], "as_dict": [13, 21, 32], "factory_from_column": 32, "60": 21, "overridden": [3, 21], "second": [3, 11, 21], "respect": 21, "for_exampl": [], "inspect": 21, "col": 21, "attr": 21, "override_column": 32, "obtain": [1, 2, 31, 32], "independ": 21, "reiter": 21, "automat": 21, "manual": [11, 21], "group_id": 21, "respond": 21, "regular": [9, 21, 31], "manag": [11, 21], "order": [3, 21, 27], "actual": 21, "coe": [], "advanc": 21, "basic": 0, "further": 0, "avail": [0, 3], "page": [0, 2], "42": [0, 3, 8], "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 15], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 15], "mode": [3, 15, 27, 28], "50": [1, 8], "lower": 1, "program": [1, 7, 27], "anoth": 1, "languag": [1, 6, 7, 8, 9], "desir": [1, 7], "point": [5, 7, 10, 15], "p": [6, 7], "inf": [6, 7], "prob_p_inf": [6, 7], "n": [3, 6, 7], "prob_n_inf": [6, 7], "prob_nan": [6, 7], "behavior": [4, 5, 6, 7, 10, 11], "left": [4, 5, 6, 7, 10, 11], "between": [4, 5, 6, 7, 10, 11, 31], "1e": [6, 7], "have": [6, 7, 8], "abil": [], "place": 6, "digit": [11, 31], "repres": [7, 11], "read": [2, 7, 19], "equival": 2, "test": 2, "util": 2, "o": [2, 3, 15], "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [], "fmt": [1, 4, 5, 6, 7, 8, 9, 10, 11], "8601": [], "form": [4, 5, 10], "strftime": [4, 5, 10, 27], "strptime": [4, 5, 10], "2021": [4, 5], "01t00": 5, "y": [3, 4, 5, 27], "h": [3, 5, 10, 11], "simultan": [4, 5, 10], "elaps": [5, 10], "certain": [5, 10], "both": [4, 10], "dai": [4, 5, 11], "7": [4, 5, 7, 11, 17], "1d": [4, 5, 11], "7d": [4, 5, 11], "adjust": 11, "0d": 11, "xx": 11, "": [3, 11, 19, 27], "durat": 11, "proprietari": 11, "1h30m": [5, 10, 11], "1d2h3m4s5ms6u": 11, "express": [9, 11, 27, 31], "concaten": 11, "direct": 11, "xd": 11, "2d": [4, 11], "xh": 11, "2h": [5, 10, 11], "xm": 11, "minut": [10, 11], "2m": 11, "millisecond": 11, "xu": 11, "microsecond": 11, "2u": 11, "month": 11, "year": [2, 11], "larger": 11, "distinguish": 11, "30": [10, 11], "zero": 11, "pad": 11, "23": 11, "total": 11, "round": 11, "down": 11, "59": 11, "tm": 11, "6": [11, 17], "000000": [5, 10, 11], "000001": 11, "999999": 11, "140": 11, "0h": 11, "meaningless": 11, "notat": [6, 7, 8, 11], "without": [3, 11, 17], "factory_path": 2, "row_num": 2, "csv_column": [2, 15, 27, 29, 31], "To": [2, 3, 4, 5, 6, 7, 8, 9, 10, 22], "row": [2, 27, 29], "line": [2, 3, 15], "someth": 2, "factorydef": 31, "full_respons": 31, "dataclass": 31, "top": 2, "old": 2, "third": 2, "17642547": 2, "0a4c": 2, "4897": 2, "a8da": 2, "2d495558b8fa": 2, "d40s8jq": 2, "discard": [2, 19, 29, 31], "pk": 2, "miss": 2, "made": 2, "timestamp_it": 2, "2002": 2, "els": [], "action": [], "fewer": [2, 29, 31], "probabilist": [], "howev": [3, 6, 7, 8, 12, 29, 31], "decid": [12, 31], "affect": [2, 12, 29, 31], "lazy_choic": [12, 31], "adopt": [12, 31], "or_nul": 12, "prob_regen": 2, "prob_discard": 2, "origin": [2, 29, 31], "complet": [2, 17, 29, 31], "less": [2, 6, 7, 29, 31], "gap": 2, "skip": [2, 12], "higher": [2, 3], "regex": [9, 22, 31], "char": 9, "0123456789abcdef": [3, 9], "cryptograph": 9, "secur": 9, "requir": 9, "token": 9, "authent": 9, "consid": 9, "secret": 9, "altern": 9, "alphabet": 9, "za": 9, "z0": 9, "rstr": [9, 22], "beforehand": [9, 22], "g": [9, 22], "review": [9, 22], "licens": [9, 22], "term": [4, 5, 9, 10, 22], "creation": 22, "ascii_uppercas": 22, "19": 22, "consist": 22, "constant": 22, "own": 22, "az": 22, "z": 22, "re": 22, "fullmatch": 22, "_next": 12, "raise_on_factory_stop": [29, 31], "stop": [2, 29, 31], "factorystopexcept": [29, 31], "due": [2, 29, 31], "stopiter": [2, 29, 31], "error": [2, 3, 4, 5, 10], "occur": [2, 3], "environ": [0, 15], "One": 2, "idea": 2, "initial_id": [2, 15], "init_id": 2, "addit": [2, 17, 27], "env": [2, 3], "bash": [2, 3], "powershel": [2, 3], "var": [2, 3], "purpos": 3, "val": 3, "mention": 3, "effect": [], "encod": [3, 15], "linesep": [3, 15, 29, 31], "newlin": [3, 27], "utf": [3, 15], "le": 3, "utf_16_l": 3, "crlf": [3, 15], "now": [3, 5, 10], "replac": 3, "current": [3, 4, 5, 10], "empti": 3, "serial": 3, "def_fil": 3, "trail": 3, "repeat_count": 3, "factory_count": 3, "descript": [], "assign": 3, "home": 3, "log": [0, 6, 7, 8, 28, 31], "configur": [3, 19], "stderr": 3, "level": 3, "logging_config_path": 3, "yaml": 3, "adher": 3, "logger": [3, 19], "cmd": 19, "up": [3, 19, 31], "through": 3, "mechan": 3, "dure": 3, "overrid": 3, "disable_existing_logg": 3, "explicitli": 3, "displai": 3, "abnorm": 3, "hide": 3, "quiet": 3, "q": 3, "w": [3, 27], "spec": 3, "seem": 3, "incident": 3, "categori": 3, "produc": [3, 27], "randogcmdwarn": 3, "futurewarn": 30, "warned_too_long_custom_chain": 31, "set_warned_too_long_custom_chain": 31, "those": 3, "fact": 3, "pyyaml": 3, "write": [3, 15], "refer": 3, "stream": 19, "howto": 19, "extens": 19, "plan": 19, "gradual": 19, "improv": 19, "handler": 19, "unexpect": 19, "select": 19, "api": 28, "intend": 15, "reus": 15, "create_factori": 15, "__name__": [2, 15], "__randog__": [2, 15], "avoid": [4, 5, 10, 15], "proper": 15, "situat": [15, 27], "discuss": 15, "better": 2, "implement": 2, "todai": 4, "simpl": [4, 5, 10], "plu": [4, 5, 10], "fulli": [4, 5, 10], "interpret": [4, 5, 10], "valid": [4, 5, 10], "invalid": [4, 5, 10], "unknown": [4, 5, 10], "30m": [4, 5, 10], "yesterdai": [4, 5], "tomorrow": [4, 5], "ago": [4, 5, 10], "later": [4, 5, 10], "1h": [5, 10], "11": [10, 17], "33": 10, "12h": 10, "full": 3, "end": 3, "traceback": 3, "unlik": 3, "seed": 0, "control": 3, "though": 3, "version": 3, "document": 3, "reproduc": 3, "upgrad": 3, "debug": 3, "observ": 3, "easili": [12, 27], "post_process_item": [12, 31], "sir1w94": [12, 31], "convers": 12, "default_process": 31, "80": 1, "advantag": 1, "treat": 1, "mini": [1, 6, 7, 8, 9], "00000042": 8, "08": 8, "20e": 7, "98": 7, "2e": 7, "99999": 6, "99": 6, "2f": 7, "suitabl": 7, "zy7q": 9, "exp": [6, 7, 8], "10000": [6, 8], "fine": [6, 7, 8], "varieti": [6, 7, 8], "problemat": [6, 7, 8], "9999": 8, "word": [6, 7, 8], "major": [6, 7, 8], "give": [6, 7, 8], "smaller": [6, 7, 8], "precis": [6, 7, 8], "floor": [6, 7, 8], "log2": [7, 8], "binari": [6, 7, 8], "assum": [6, 7, 8], "47": 8, "event": [6, 7, 8], "portion": [6, 7, 8], "reduc": [6, 7, 8], "half": [6, 7, 8], "63": 8, "much": 8, "distribut": 31, "uniform": 31, "exp_uniform": 31, "500": [6, 7], "24": 7, "25": 7, "125": 7, "smallest": 7, "power": 7, "1022": 7, "tend": 7, "small": 7, "absolut": 7, "still": [], "log10": 6, "55000": 6, "100000": 6, "indent": 3, "space": 3, "tab": 3, "alreadi": 3, "truncat": 3, "destin": [3, 27, 29], "append": 3, "oa": 3, "kept": 3, "generate_to_csv": [27, 29], "line_num": 29, "fp": [27, 29], "textio": 29, "csv": [28, 29], "taken": [15, 29], "randogwarn": 30, "outsid": 27, "b": 27, "c": 27, "abcd": 27, "tips_json": [], "as_command": [], "sy": 27, "f1": 27, "f2": 27, "stdout": 27, "disadvantag": [], "countoutput": [], "created_bi": 27, "yyyymmdd": 27, "sniiz6ek": 27, "20240817": 27, "qe37x0kd": 27, "20241025": 27, "smwgorjo": 27, "20241202": 27, "open": 27, "output_linesep": [15, 31], "lf": 15, "output_encod": [15, 31], "utf8": 15, "_util": 31, "cr": 15, "dt": 17, "2020": 17, "amount": [], "iterrang": [17, 31], "cyclic": 31, "resume_from": [17, 31], "shift": 31, "emit": 31, "exce": 31, "restart": 31, "contradict": 31, "decreas": 17, "cycl": 17}, "objects": {"": [[29, 0, 0, "-", "randog"]], "randog": [[29, 1, 1, "", "DictItemExample"], [29, 1, 1, "", "Example"], [30, 0, 0, "-", "exceptions"], [31, 0, 0, "-", "factory"], [29, 6, 1, "", "generate_to_csv"], [32, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[29, 2, 1, "", "example"], [29, 2, 1, "", "prop_exists"]], "randog.exceptions": [[30, 3, 1, "", "FactoryConstructionError"], [30, 3, 1, "", "RandogWarning"]], "randog.exceptions.FactoryConstructionError": [[30, 4, 1, "", "message"]], "randog.factory": [[31, 1, 1, "", "DictItem"], [31, 1, 1, "", "Factory"], [31, 1, 1, "", "FactoryDef"], [31, 3, 1, "", "FactoryStopException"], [31, 1, 1, "", "FromExampleContext"], [31, 6, 1, "", "by_callable"], [31, 6, 1, "", "by_iterator"], [31, 6, 1, "", "const"], [31, 6, 1, "", "from_example"], [31, 6, 1, "", "from_pyfile"], [31, 6, 1, "", "increment"], [31, 6, 1, "", "iterrange"], [31, 6, 1, "", "randbool"], [31, 6, 1, "", "randchoice"], [31, 6, 1, "", "randdate"], [31, 6, 1, "", "randdatetime"], [31, 6, 1, "", "randdecimal"], [31, 6, 1, "", "randdict"], [31, 6, 1, "", "randenum"], [31, 6, 1, "", "randfloat"], [31, 6, 1, "", "randint"], [31, 6, 1, "", "randlist"], [31, 6, 1, "", "randstr"], [31, 6, 1, "", "randtime"], [31, 6, 1, "", "randtimedelta"], [31, 6, 1, "", "union"]], "randog.factory.DictItem": [[31, 2, 1, "", "factory"], [31, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[31, 5, 1, "", "infinity_iter"], [31, 5, 1, "", "iter"], [31, 5, 1, "", "next"], [31, 5, 1, "", "or_none"], [31, 5, 1, "", "post_process"], [31, 5, 1, "", "post_process_items"]], "randog.factory.FactoryDef": [[31, 2, 1, "", "csv_columns"], [31, 2, 1, "", "factory"], [31, 2, 1, "", "output_encoding"], [31, 2, 1, "", "output_linesep"]], "randog.factory.FromExampleContext": [[31, 4, 1, "", "current_example"], [31, 4, 1, "", "custom_chain_length"], [31, 4, 1, "", "custom_funcs"], [31, 4, 1, "", "examples"], [31, 5, 1, "", "from_example"], [31, 4, 1, "", "path"], [31, 5, 1, "", "recursive"], [31, 4, 1, "", "rnd"], [31, 5, 1, "", "set_warned_too_long_custom_chain"], [31, 4, 1, "", "signal_terminate_custom"], [31, 5, 1, "", "terminate_custom_chain"], [31, 4, 1, "", "warned_too_long_custom_chain"]], "randog.sqlalchemy": [[32, 6, 1, "", "custom"], [32, 6, 1, "", "factory"], [32, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 12, "factori": [12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31], "gener": [1, 4, 5, 6, 7, 8, 10, 11, 12, 18, 21, 27, 28], "random": [12, 25, 28], "valu": [12, 17, 27], "element": [12, 18], "type": [12, 17, 21, 25], "nullabl": 12, "union": 12, "randomli": [12, 24], "choic": 12, "constanc": 12, "process": 12, "output": [2, 3, 12, 27], "custom": 12, "detail": [0, 12], "how": 12, "build": 12, "individu": [12, 21], "dict": [13, 21], "randdict": 13, "from_exampl": [13, 14, 18, 21], "list": 18, "each": 18, "length": [18, 22], "tupl": 18, "quick": 20, "start": 20, "instal": 20, "minim": 20, "us": [20, 26], "tip": 23, "usag": 23, "creat": 24, "json": [24, 27], "decim": [6, 24], "e": 24, "t": 24, "c": 24, "string": 24, "timelin": 25, "data": 25, "depend": 25, "previou": 25, "chang": [2, 25], "smpl_datetim": 25, "str": [9, 22, 25], "As": [26, 27], "iter": [3, 17, 26], "obj": 28, "content": [28, 29], "indic": 28, "tabl": 28, "randog": [21, 29, 30, 31, 32], "packag": [29, 30, 31, 32], "subpackag": 29, "submodul": 29, "modul": 29, "except": 30, "run": 0, "command": 0, "format": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "file": [3, 15], "extern": 15, "definit": 15, "enum": 14, "randenum": 14, "special": 12, "increment": 16, "integ": 16, "from": 21, "sqlalchemi": [21, 32], "support": 21, "column": 21, "limit": 21, "model": [], "instanc": 21, "some": [], "field": 21, "specifi": [21, 22], "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11], "int": 8, "float": 7, "datetim": 5, "date": 4, "time": 10, "timedelta": 11, "simpl": [11, 22], "code": 11, "csv": [2, 27], "charact": 22, "set": 22, "regular": 22, "express": [4, 5, 10, 22], "behavior": 2, "pattern": 2, "environ": [2, 3], "variabl": [2, 3], "modifi": 3, "log": [3, 19], "warn": 3, "api": 19, "import": 15, "minimum": [4, 5, 10], "maximum": [4, 5, 10], "seed": 3, "lowercas": 1, "repeatedli": [1, 4, 5, 6, 7, 8, 10, 11], "infin": [6, 7], "nan": [6, 7], "numer": 1, "0": 8, "pad": 8, "etc": [4, 5, 6, 7, 8, 9, 10, 11], "signific": 7, "digit": [6, 7, 8], "thousand": 6, "separ": 6, "align": 9, "iso": [4, 5, 10, 11], "8601": [4, 5, 10, 11], "probabl": [6, 7, 8], "distribut": [6, 7, 8], "uniform": [6, 7, 8], "itertool": [], "countoutput": [], "attribut": 15, "rang": 17, "step": 17, "cyclic": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"], [11, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"]], "Format: Lowercase or Numeric": [[1, "format-lowercase-or-numeric"]], "Repeatedly Generate": [[1, "repeatedly-generate"], [4, "repeatedly-generate"], [5, "repeatedly-generate"], [6, "repeatedly-generate"], [7, "repeatedly-generate"], [8, "repeatedly-generate"], [10, "repeatedly-generate"], [11, "repeatedly-generate"]], "byfile Mode": [[2, "byfile-mode"]], "output as CSV": [[2, "output-as-csv"]], "Change behavior patterns by environment variables": [[2, "change-behavior-patterns-by-environment-variables"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "Seed": [[3, "seed"]], "Modify environment variable": [[3, "modify-environment-variable"]], "Logging": [[3, "logging"], [19, "logging"]], "Warning": [[3, "warning"]], "date Mode": [[4, "date-mode"]], "Expression of MINIMUM and MAXIMUM": [[4, "expression-of-minimum-and-maximum"], [5, "expression-of-minimum-and-maximum"], [10, "expression-of-minimum-and-maximum"]], "Format: ISO-8601, etc.": [[4, "format-iso-8601-etc"], [5, "format-iso-8601-etc"], [10, "format-iso-8601-etc"], [11, "format-iso-8601-etc"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "Infinity and NaN": [[6, "infinity-and-nan"], [7, "infinity-and-nan"]], "Format: Thousands Separator, etc.": [[6, "format-thousands-separator-etc"]], "Probability Distribution; uniform distribution of digits": [[6, "probability-distribution-uniform-distribution-of-digits"], [7, "probability-distribution-uniform-distribution-of-digits"], [8, "probability-distribution-uniform-distribution-of-digits"]], "float Mode": [[7, "float-mode"]], "Format: Significant Digits, etc.": [[7, "format-significant-digits-etc"]], "int Mode": [[8, "int-mode"]], "Format: 0-padding, etc.": [[8, "format-0-padding-etc"]], "str Mode": [[9, "str-mode"]], "Format: align, etc.": [[9, "format-align-etc"]], "time Mode": [[10, "time-mode"]], "timedelta Mode": [[11, "timedelta-mode"]], "Simple Format": [[11, "simple-format"]], "Format codes": [[11, "format-codes"]], "Construct Factories (generator of random values)": [[12, "construct-factories-generator-of-random-values"]], "Elemental types": [[12, "elemental-types"]], "Nullable": [[12, "nullable"]], "Union type": [[12, "union-type"]], "Randomly choice": [[12, "randomly-choice"]], "Constance": [[12, "constance"]], "Processing output": [[12, "processing-output"]], "Custom Factory": [[12, "custom-factory"]], "Details on how to build individual factories": [[12, "details-on-how-to-build-individual-factories"]], "Special Factory": [[12, "special-factory"]], "Dict factory": [[13, "dict-factory"]], "Factory by randdict": [[13, "factory-by-randdict"]], "Factory by from_example": [[13, "factory-by-from-example"], [14, "factory-by-from-example"], [18, "factory-by-from-example"], [21, "factory-by-from-example"]], "Enum factory": [[14, "enum-factory"]], "Factory by randenum": [[14, "factory-by-randenum"]], "External File Definition of Factory": [[15, "external-file-definition-of-factory"]], "Attributes": [[15, "attributes"]], "Importable definition files": [[15, "importable-definition-files"]], "Incremental integer factory": [[16, "incremental-integer-factory"]], "Iteration of range": [[17, "iteration-of-range"]], "Step": [[17, "step"]], "Cyclic": [[17, "cyclic"]], "Types of values": [[17, "types-of-values"]], "List factory": [[18, "list-factory"]], "Each elements": [[18, "each-elements"]], "Length": [[18, "length"]], "Generate tuple": [[18, "generate-tuple"]], "API": [[19, "api"]], "Quick start": [[20, "quick-start"]], "Installation": [[20, "installation"]], "Minimal use": [[20, "minimal-use"]], "Factory from sqlalchemy": [[21, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[21, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[21, "supported-column-type"]], "Limitations": [[21, "limitations"]], "Specify factories for individual fields": [[21, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[21, "generate-a-dict-instance"]], "Str factory": [[22, "str-factory"]], "Simple factory": [[22, "simple-factory"]], "Specify the length or/and character set": [[22, "specify-the-length-or-and-character-set"]], "Specify a regular expression": [[22, "specify-a-regular-expression"]], "Tips (Usage)": [[23, "tips-usage"]], "Create JSON randomly": [[24, "create-json-randomly"]], "Decimal e.t.c.": [[24, "decimal-e-t-c"]], "Factory of JSON string": [[24, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[25, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[25, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[26, "use-factories"]], "As iterator": [[26, "as-iterator"]], "Output Generated Values": [[27, "output-generated-values"]], "As JSON": [[27, "as-json"]], "As CSV": [[27, "as-csv"]], "random-obj-generator": [[28, "random-obj-generator"]], "Contents:": [[28, null]], "Indices and tables": [[28, "indices-and-tables"]], "randog package": [[29, "randog-package"]], "Subpackages and submodules": [[29, "subpackages-and-submodules"]], "Module contents": [[29, "module-randog"]], "randog.exceptions package": [[30, "module-randog.exceptions"]], "randog.factory package": [[31, "module-randog.factory"]], "randog.sqlalchemy package": [[32, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[29, "randog.DictItemExample"]], "example (class in randog)": [[29, "randog.Example"]], "example (randog.dictitemexample attribute)": [[29, "randog.DictItemExample.example"]], "generate_to_csv() (in module randog)": [[29, "randog.generate_to_csv"]], "module": [[29, "module-randog"], [30, "module-randog.exceptions"], [31, "module-randog.factory"], [32, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[29, "randog.DictItemExample.prop_exists"]], "randog": [[29, "module-randog"]], "factoryconstructionerror": [[30, "randog.exceptions.FactoryConstructionError"]], "randogwarning": [[30, "randog.exceptions.RandogWarning"]], "message (randog.exceptions.factoryconstructionerror property)": [[30, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[30, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[31, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[31, "randog.factory.Factory"]], "factorydef (class in randog.factory)": [[31, "randog.factory.FactoryDef"]], "factorystopexception": [[31, "randog.factory.FactoryStopException"]], "fromexamplecontext (class in randog.factory)": [[31, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[31, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[31, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[31, "randog.factory.const"]], "csv_columns (randog.factory.factorydef attribute)": [[31, "randog.factory.FactoryDef.csv_columns"]], "current_example (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.custom_funcs"]], "examples (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[31, "randog.factory.DictItem.factory"]], "factory (randog.factory.factorydef attribute)": [[31, "randog.factory.FactoryDef.factory"]], "from_example() (in module randog.factory)": [[31, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[31, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[31, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[31, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[31, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[31, "randog.factory.Factory.iter"]], "iterrange() (in module randog.factory)": [[31, "randog.factory.iterrange"]], "next() (randog.factory.factory method)": [[31, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[31, "randog.factory.Factory.or_none"]], "output_encoding (randog.factory.factorydef attribute)": [[31, "randog.factory.FactoryDef.output_encoding"]], "output_linesep (randog.factory.factorydef attribute)": [[31, "randog.factory.FactoryDef.output_linesep"]], "path (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[31, "randog.factory.Factory.post_process"]], "post_process_items() (randog.factory.factory method)": [[31, "randog.factory.Factory.post_process_items"]], "prop_exists (randog.factory.dictitem attribute)": [[31, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[31, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[31, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[31, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[31, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[31, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[31, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[31, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[31, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[31, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[31, "randog.factory.randlist"]], "randog.factory": [[31, "module-randog.factory"]], "randstr() (in module randog.factory)": [[31, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[31, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[31, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[31, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.rnd"]], "set_warned_too_long_custom_chain() (randog.factory.fromexamplecontext method)": [[31, "randog.factory.FromExampleContext.set_warned_too_long_custom_chain"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[31, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[31, "randog.factory.union"]], "warned_too_long_custom_chain (randog.factory.fromexamplecontext property)": [[31, "randog.factory.FromExampleContext.warned_too_long_custom_chain"]], "custom() (in module randog.sqlalchemy)": [[32, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[32, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[32, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[32, "module-randog.sqlalchemy"]]}})