Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.dice", "doc.as_command.float", "doc.as_command.int", "doc.as_command.ipv4", "doc.as_command.str", "doc.as_command.time", "doc.as_command.timedelta", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.ipv4_factory", "doc.iterrange_factory", "doc.list_factory", "doc.logging", "doc.quickstart", "doc.sqlalchemy", "doc.str_factory", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "doc.write_generated", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.dice.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.ipv4.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.as_command.timedelta.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.ipv4_factory.rst", "doc.iterrange_factory.rst", "doc.list_factory.rst", "doc.logging.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.str_factory.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "doc.write_generated.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "dice Mode", "float Mode", "int Mode", "ipv4 Mode", "str Mode", "time Mode", "timedelta Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "IPv4 address factory", "Iteration of range", "List factory", "Logging", "Quick start", "Factory from sqlalchemy", "Str factory", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "Output Generated Values", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 24, 27, 28, 30], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35], "an": [2, 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 32, 34, 35], "object": [2, 3, 4, 5, 12, 13, 14, 15, 17, 23, 24, 27, 32, 34, 35], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 24, 25, 27, 28, 29, 30, 34], "rule": [3, 14, 34], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21, 24, 26, 29, 32, 34], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 27, 30, 32, 34, 35], "when": [2, 3, 6, 8, 9, 14, 17, 18, 20, 21, 22, 24, 25, 30, 34], "creat": [2, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35], "If": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 28, 30, 32, 34, 35], "you": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 34, 35], "do": [14, 18, 20, 34], "care": [14, 29], "about": [14, 34], "condit": [0, 14, 19, 25, 34], "other": [2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 21, 22, 23, 24, 34, 35], "than": [2, 3, 5, 6, 8, 12, 13, 14, 17, 21, 24, 32, 34], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34], "simpli": [2, 14, 24, 32, 34], "suppli": 14, "exampl": [0, 3, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35], "from_exampl": [2, 14, 17, 19, 23, 25, 28, 34, 35], "want": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 20, 21, 23, 24, 28, 30, 35], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 28, 30, 31, 32, 34, 35], "constructor": 14, "correspond": [14, 15, 34], "import": [2, 3, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35], "factory_a": 14, "generated_a": 14, "next": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 34, 35], "assert": [14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 29, 34], "isinst": [14, 15, 17, 19, 21, 23, 24, 25, 29, 34], "str": [0, 3, 14, 15, 17, 21, 23, 24, 27, 29, 32, 33, 34, 35], "factory_b": 14, "randstr": [2, 3, 14, 15, 17, 21, 25, 27, 29, 30, 34], "length": [3, 6, 8, 11, 13, 14, 15, 24, 27, 29, 30, 34], "16": [3, 8, 9, 11, 14, 15, 27, 28], "generated_b": 14, "len": [0, 6, 8, 9, 14, 21, 24, 25, 29, 34], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30], "argument": [14, 15, 16, 17, 19, 24, 25, 30, 31, 32, 34], "nonetyp": [14, 34], "There": [3, 14, 29], "dedic": 14, "function": [2, 14, 15, 16, 17, 23, 27, 30, 32, 34, 35], "const": [14, 34], "instead": [2, 14, 15, 21, 24, 35], "none": [14, 24, 32, 34, 35], "bool": [0, 14, 21, 32, 34, 35], "randbool": [14, 21, 34], "true": [0, 1, 2, 3, 14, 15, 20, 24, 28, 32, 34, 35], "fals": [1, 14, 24, 32, 34, 35], "int": [0, 2, 3, 8, 14, 15, 17, 20, 21, 23, 24, 28, 32, 34], "randint": [2, 14, 15, 21, 24, 25, 27, 34], "integ": [1, 7, 8, 9, 11, 14, 24, 28, 35], "float": [0, 9, 14, 24, 32, 34], "randfloat": [8, 14, 34], "string": [2, 3, 11, 14, 24, 25, 28, 32, 34, 35], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 23, 28, 29, 32, 34], "randlist": [14, 21, 34], "tupl": [14, 34], "dict": [2, 14, 17, 23, 28, 34, 35], "randdict": [2, 14, 17, 21, 24, 27, 30, 34], "decim": [0, 8, 9, 13, 14, 34], "randdecim": [6, 14, 21, 27, 34], "datetim": [0, 2, 3, 4, 12, 14, 20, 24, 28, 34], "randdatetim": [5, 14, 34], "date": [0, 5, 12, 14, 20, 24, 34], "randdat": [4, 14, 30, 34], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 21, 24, 28, 29, 32, 34], "randtim": [12, 14, 34], "timedelta": [0, 2, 4, 5, 12, 14, 20, 28, 34], "randtimedelta": [13, 14, 34], "candid": [6, 8, 14, 34], "or_non": [14, 34], "factory_nul": 14, "0": [0, 1, 2, 3, 6, 8, 10, 13, 14, 15, 16, 19, 20, 21, 24, 27, 28, 29, 32, 34], "1": [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 18, 20, 21, 24, 28, 29, 30, 32, 34], "get": [2, 3, 14, 27], "alwai": [14, 15, 21, 24], "return": [2, 3, 14, 15, 16, 17, 20, 29, 32, 34, 35], "sever": [0, 3, 14], "method": [2, 14, 17, 28, 29, 30], "determin": [2, 9, 14], "from": [2, 3, 6, 8, 9, 14, 15, 16, 17, 19, 20, 25, 27, 28, 30, 32, 34, 35], "multipl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 21, 34], "make": [1, 2, 6, 8, 9, 14, 17, 21, 28], "e": [11, 14, 25, 30], "so": [1, 3, 4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 20, 24, 34], "boolean": [1, 14, 24], "_": 14, "rang": [4, 5, 6, 8, 9, 11, 12, 13, 14], "10": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 20, 24, 25, 27, 29, 34], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 21, 25, 30, 31, 34], "choos": [14, 17, 34], "either": [14, 15], "each": [0, 1, 2, 3, 10, 14, 15, 16, 17, 22, 24, 29, 30, 32, 34, 35], "result": [2, 3, 7, 8, 14, 34], "chosen": [14, 34], "one": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 16, 18, 21, 23, 28, 34], "specif": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 21, 26, 34], "randchoic": [14, 15, 16, 24, 28, 34], "allow": [2, 13, 14, 27, 34], "deni": 14, "same": [2, 3, 6, 8, 9, 13, 14, 16, 20, 21, 24, 27], "python": [2, 3, 4, 5, 8, 10, 12, 13, 14, 17, 22, 23, 27], "predefin": 14, "thi": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 27, 28, 29, 32, 34, 35], "chang": [3, 4, 5, 12, 13, 14, 24, 34], "post_process": [14, 24, 27, 28, 34], "format": [0, 2, 7, 14, 27, 30, 34], "50000": [14, 34], "decimal_len": [14, 21, 27, 34], "2": [0, 3, 6, 8, 9, 13, 14, 16, 18, 19, 20, 21, 24, 27, 28, 30, 34], "lambda": [2, 14, 24, 27, 28, 30, 34], "x": [3, 6, 8, 9, 10, 13, 14, 17, 34], "f": [2, 13, 14, 15, 34], "12": [0, 6, 12, 14, 20, 28, 34], "345": [6, 14, 34], "67": [6, 14, 34], "3": [0, 3, 6, 8, 10, 11, 14, 18, 20, 21, 23, 24, 25, 30, 34], "153": [14, 34], "21": [14, 34], "90": [6, 8, 9, 14, 34], "etc": [2, 3, 14, 23, 34], "provid": [3, 14, 22], "also": [0, 2, 3, 4, 5, 8, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34], "context": [1, 14, 34], "iter": [0, 14, 21, 28, 30, 31, 32, 34], "includ": [3, 6, 8, 9, 14, 24], "normal": [3, 14, 21, 34], "would": [14, 15, 16, 18, 21, 24, 28], "think": 14, "could": 14, "just": [1, 4, 5, 6, 8, 9, 12, 13, 14, 23, 29], "directli": [14, 17, 34], "need": [3, 14, 19, 21, 25], "itertool": [2, 14, 30], "uuid": [2, 14, 17, 23], "defin": [2, 3, 13, 14, 17, 32, 34], "class": [14, 16, 24, 32, 34, 35], "mailaddressfactori": 14, "def": [2, 14, 16, 17, 28], "self": 14, "com": 14, "http": 14, "doc": [14, 22], "org": 14, "librari": [3, 14, 22], "html": 14, "count": [2, 14, 30, 34], "id": [2, 14, 17, 21, 24, 27, 35], "uuid4": [2, 14, 17, 23], "name": [2, 3, 14, 15, 17, 23, 24, 27, 30, 34, 35], "mail": 14, "set": [2, 3, 14, 17, 20, 21, 22], "endswith": 14, "by_cal": [14, 34], "by_iter": [2, 14, 28, 30, 34], "A": [4, 5, 7, 12, 14, 24, 25, 34], "finit": 14, "onc": [3, 14, 29], "termin": [3, 14, 29, 34], "cannot": [2, 11, 13, 14, 17, 24, 25, 27, 32, 34], "ani": [0, 2, 14, 15, 16, 17, 24, 32, 34, 35], "more": [0, 2, 6, 8, 9, 13, 14, 22, 30, 34], "gener": [0, 2, 3, 10, 11, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 34, 35], "element": [3, 13, 15, 24, 28, 31, 34], "randomli": [3, 15, 21, 23, 24, 26, 30, 31, 32, 34, 35], "like": [1, 4, 5, 6, 8, 9, 12, 13, 15, 16, 21, 24, 28, 34], "built": [15, 16, 24], "two": [3, 7, 15, 16, 24], "wai": [2, 15, 16, 20, 22, 24, 29, 30], "code": [2, 14, 15, 16, 17, 21, 24, 29, 34], "look": [15, 16, 21, 24, 28], "dictitem": [15, 16, 34], "sex": 15, "m": [3, 4, 5, 12, 13, 15, 30, 35], "ag": [2, 15, 17, 23, 24, 27], "kei": [2, 15, 17, 24, 29, 30, 32, 34], "exist": [3, 15, 18], "random": [2, 3, 10, 15, 21, 25, 26, 29, 32, 34, 35], "100": [0, 2, 6, 8, 9, 10, 15, 21], "9": [0, 10, 11, 15], "As": [3, 15, 17, 24, 28, 31], "pass": [3, 15, 19, 23, 24, 25, 34], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 31, 32, 34, 35], "keyword": [15, 34], "By": [3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 23, 24], "possibl": [3, 13, 15, 19, 24, 25, 27], "whether": [14, 15, 34], "dictionari": [2, 3, 15, 30, 35], "abov": [3, 6, 8, 9, 15, 18, 24, 28], "see": [0, 2, 3, 4, 5, 12, 13, 14, 15, 17, 22, 24, 28, 30], "here": [3, 4, 5, 12, 13, 15, 22, 23, 24, 26, 34], "how": [15, 22, 24, 31], "build": [15, 24, 31], "dictitemexampl": [15, 16, 32], "smith": 15, "22": [12, 15], "Not": 15, "limit": [3, 6, 8, 9, 15, 20], "given": [15, 21, 24, 28], "output": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 22, 27, 31, 32], "similar": [11, 15, 30], "its": [15, 29, 34], "Or": 15, "wrap": 15, "mani": [13, 21], "case": [1, 2, 6, 11, 13, 21, 24, 27, 28, 32, 34], "becaus": [13, 21, 22], "tailor": 21, "applic": 21, "record": [2, 21, 24], "singl": [3, 7, 21], "mai": [1, 2, 3, 13, 18, 21, 22, 24, 29, 30, 32, 34], "appropri": [13, 17, 21, 22], "rather": [5, 12, 21], "999_999": [21, 27], "price": [21, 27], "1000": [6, 8, 9, 21, 27], "200": [21, 28], "record_list": 21, "th": [13, 21], "longer": 21, "number": [2, 3, 6, 8, 9, 13, 17, 21, 30, 32, 34, 35], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 21], "last": 21, "el_factori": 21, "4": [3, 8, 9, 11, 20, 21, 24, 25, 30], "therefor": [3, 21, 22], "typic": [13, 21], "where": [2, 11, 21, 32, 34], "ha": [8, 13, 21], "mean": [3, 4, 5, 12, 13, 17, 21, 34], "onli": [3, 5, 6, 8, 9, 10, 14, 17, 18, 21, 34], "el": 21, "5": [1, 2, 6, 8, 11, 13, 20, 21, 29, 30, 34], "sure": 21, "map": [21, 32, 34, 35], "piec": 21, "attribut": [21, 31], "type": [0, 1, 3, 16, 18, 21, 27, 31, 34, 35], "necessari": [1, 13, 21], "separ": [2, 3, 8, 9, 17, 21, 32], "schema": [3, 21], "sinc": [4, 5, 8, 12, 17, 21, 27], "omit": [2, 3, 4, 5, 12, 17, 21], "equal": [13, 21, 34], "accept": [3, 21, 34], "guarante": [11, 18, 21], "try": 23, "step": [23, 28, 34], "prepar": 23, "8": [1, 8, 9, 11, 16, 17, 20, 23, 25, 30, 34], "newer": 23, "pip": [11, 23, 25], "command": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 21, 22, 27, 30, 31], "factori": [2, 3, 20, 22, 23, 28, 30, 31, 32, 35], "20": [0, 1, 2, 11, 13, 17, 23, 24], "some": [1, 2, 3, 14, 17, 24, 26, 30], "timelin": [26, 31], "data": [2, 18, 26, 31, 34], "depend": [3, 26, 31, 34], "previou": [24, 26, 27, 31], "json": [1, 2, 3, 4, 5, 6, 8, 12, 13, 26, 31], "modul": [11, 25, 27, 31], "18": 27, "64": 27, "value_json": 27, "dump": 27, "we": [22, 27], "wosar5ajmwhngj72": 27, "51": [0, 10, 27], "convert": [3, 24, 27], "default": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 16, 24, 27, 32, 34, 35], "583085": 27, "754": 27, "were": 27, "begin": [4, 5, 12, 27], "v": [27, 29, 34], "non": [14, 17, 28, 30], "pseudo": 28, "seri": 28, "iter_datetim": 28, "start": [28, 31], "nxt": 28, "while": [2, 28], "yield": [2, 28], "iter_randomwalk": 28, "step_f": 28, "2022": [0, 4, 5, 28], "hour": [2, 5, 12, 13, 20, 28], "locat": 28, "hourli": 28, "01": [0, 4, 5, 6, 8, 12, 13, 28], "01t12": [5, 28], "00": [5, 6, 12, 13, 28], "13": 28, "14": 28, "15": [6, 8, 9, 28], "seen": 28, "definit": [0, 2, 3, 24, 28, 31, 32, 34], "increas": [22, 28], "exactli": [2, 28], "differ": [3, 9, 14, 20, 28, 34], "randomwalk": 28, "thu": 28, "wa": [2, 17, 28, 34], "d": [2, 3, 4, 5, 13, 25, 28, 30], "isoformat": 28, "128": 29, "generated1": [19, 29], "generated2": [19, 29], "note": [3, 6, 8, 9, 17, 24, 29], "low": 29, "probabl": [1, 2, 4, 5, 12, 13, 16, 24, 29, 32, 34], "thei": [24, 29, 34], "ident": [6, 8, 9, 29], "usual": [25, 29], "sugar": 29, "coat": 29, "syntax": 29, "although": [3, 8, 9, 14, 19, 25, 29], "itself": 29, "cnt": 29, "generated_valu": 29, "dispos": 29, "must": [2, 3, 4, 5, 11, 12, 25, 29, 34], "regener": [2, 29, 32, 34], "infinity_it": [29, 34], "foo": [2, 29, 34], "bar": [29, 34], "k": [24, 29, 34], "zip": [29, 34], "warn": [0, 29, 33], "run": [22, 23, 29, 30, 31], "below": [2, 3, 17, 29], "continu": 29, "indefinit": [20, 29], "caus": [4, 5, 12, 22, 29], "infinit": 29, "loop": 29, "handl": [17, 29], "packag": [3, 11, 25, 31], "help": 31, "quick": 31, "instal": [3, 11, 25, 31], "minim": 31, "construct": [31, 34], "nullabl": [24, 31], "union": [31, 34, 35], "choic": 31, "constanc": 31, "process": [1, 2, 17, 31, 34], "custom": [24, 31, 35], "detail": [2, 31], "individu": 31, "tip": 31, "usag": [4, 5, 12, 31], "subpackag": 31, "submodul": 31, "index": 31, "except": [3, 17, 32, 34], "prop_exist": [32, 34], "base": [6, 8, 9, 24, 32, 33, 34, 35], "obj": 32, "sequenc": [32, 34], "factoryconstructionerror": [33, 34], "messag": [3, 33], "properti": [1, 33, 34], "item": [14, 24, 34], "arg": 34, "kwd": 34, "abc": 34, "t": [3, 13, 34], "infin": 34, "serv": 34, "NOT": 34, "size": [32, 34], "paramet": [32, 34, 35], "abstract": [], "accord": [0, 34], "assembl": 34, "prob": 34, "rnd": [34, 35], "whose": [24, 34], "option": [17, 21, 27, 30, 31, 32, 34, 35], "callabl": [32, 34], "r": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 24, 25, 34], "modifi": [0, 34], "fromexamplecontext": 34, "path": [2, 34], "custom_func": [24, 34, 35], "_customfunc": 34, "example_is_custom": [], "examples_stack": 34, "child": [22, 34], "current_exampl": 34, "recurs": 34, "classmethod": [], "root": 22, "func": 34, "It": [1, 2, 3, 11, 13, 24, 32, 34], "match": [34, 35], "execut": [0, 3, 7, 17, 21, 22, 23, 27, 32, 34], "first": [3, 14, 34], "new": 34, "recommend": [2, 22, 34], "receiv": 34, "kwarg": [34, 35], "futur": [2, 3, 22, 24, 34], "updat": 34, "should": [3, 17, 34], "take": [1, 17, 34], "preced": [17, 34], "over": 34, "rais": [17, 32, 33, 34], "support": 34, "prop_tru": [1, 34], "inconsist": 34, "weight": [6, 8, 9, 16, 34], "chose": [], "No": 34, "minimum": [6, 8, 9, 13, 34], "maximum": [6, 8, 9, 13, 18, 20, 34], "tzinfo": 34, "liter": 34, "fix": [8, 34], "awar": 34, "correct": 34, "otherwis": 34, "supportsfloat": 34, "p_inf": 34, "n_inf": 34, "nan": 34, "part": [6, 8, 13, 34], "posit": [6, 8, 9, 18, 34], "neg": [6, 8, 9, 20, 34], "items_dict": 34, "hashabl": 34, "ignor": [3, 24, 34], "_base": 34, "_list": 34, "items_list": 34, "charset": [3, 11, 25, 34], "charact": [3, 11, 34], "timezon": [], "inform": [3, 22], "unit": [8, 13, 34], "atom": 34, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 30], "factory_definition_fil": [], "filenam": [2, 34], "instanc": [2, 35], "variabl": [0, 17], "print": [3, 30], "repr": 3, "befor": 3, "standard": [2, 3, 4, 5, 8, 12, 22], "after": [3, 4, 5, 12, 18, 34], "being": 3, "For": [0, 2, 3, 6, 8, 9, 13, 17, 22, 23, 24, 35], "factory_def": [0, 2, 3, 17], "py": [0, 2, 3, 17], "out": 3, "txt": 3, "veri": 22, "practic": 30, "thing": [], "done": [16, 17, 21, 27], "redirect": [], "featur": [3, 22, 24], "shell": [2, 3], "combin": [4, 5, 12, 14], "describ": [0, 3, 17], "them": [2, 14, 17, 30, 34], "l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 17], "repeatedli": [3, 24], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 24], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 17], "far": 17, "load": 17, "runtim": 17, "written": [1, 6, 8, 9, 10, 11, 17], "bound": 17, "save": 17, "under": 17, "your": [17, 25, 30], "from_pyfil": [17, 34], "extern": [3, 31], "file": [0, 2, 22, 31, 34], "pathlik": 34, "io": 34, "notimpl": 34, "behav": 34, "until": 34, "enumer": [14, 16], "randenum": [14, 34], "particular": [3, 6, 8, 9, 14, 24], "enum": [14, 34], "myenum": 16, "custom_chain_length": 34, "signal_terminate_custom": 34, "terminate_custom_chain": 34, "enum_cl": 34, "bias": 16, "elif": 16, "commonli": 14, "increment": [14, 17, 20, 24, 28, 34], "wish": [3, 18], "initi": [2, 18, 20], "ad": [3, 18, 22], "databas": [2, 18, 24], "initial_valu": [18, 34], "101": 18, "31": [4, 9, 18], "102": 18, "103": 18, "fit": 18, "sign": 18, "32": [8, 9, 18], "bit": 18, "add": [28, 35], "auto": 28, "field": [2, 28, 35], "special": 31, "sequenti": [3, 34], "reach": 34, "reset": 34, "satisfi": [1, 4, 5, 6, 8, 9, 12, 13, 24, 34], "sqlalchemi": [14, 15, 32], "enabl": [], "experiment": [3, 24], "remov": [3, 24], "significantli": [3, 24], "variou": 24, "appli": 24, "mapped_column": 24, "orm": [24, 35], "declarative_bas": [24, 35], "user": [24, 35], "__tablename__": [24, 35], "primary_kei": [24, 35], "autoincr": [24, 35], "least": 24, "work": [2, 24], "biginteg": 24, "numer": [6, 8, 11, 24], "text": 24, "timestamp": [2, 24], "interv": 24, "doe": [13, 24, 34], "all": [2, 3, 6, 8, 9, 14, 19, 24, 25, 34], "rdb": 24, "pleas": [3, 11, 22, 23, 24, 25], "relationship": 24, "foreign": 24, "constraint": 24, "even": [2, 3, 24], "uniqu": 24, "primari": 24, "duplic": 24, "known": 24, "greater": [6, 8, 9, 24], "intuit": 24, "birthdai": 24, "problem": [3, 8, 24], "check": [3, 24], "shown": [2, 30], "accomplish": [], "deriv": 35, "column": [17, 30, 32, 35], "model": [15, 24, 35], "as_dict": [15, 24, 35], "factory_from_column": 35, "60": 24, "overridden": [3, 24], "second": [3, 13, 24], "respect": 24, "for_exampl": [], "inspect": 24, "col": 24, "attr": 24, "override_column": 35, "obtain": [1, 2, 34, 35], "independ": 24, "reiter": 24, "automat": 24, "manual": [13, 24], "group_id": 24, "respond": 24, "regular": [11, 24, 34], "manag": [13, 24], "order": [3, 24, 30], "actual": 24, "coe": [], "advanc": 24, "basic": 0, "further": 0, "avail": [0, 3, 10], "page": [0, 2], "42": [0, 3, 9], "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 17], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17], "mode": [3, 17, 30, 31], "50": [1, 9], "lower": 1, "program": [1, 8, 30, 31], "anoth": 1, "languag": [1, 6, 8, 9, 11], "desir": [1, 8], "point": [5, 8, 12, 17], "p": [6, 8], "inf": [6, 8], "prob_p_inf": [6, 8], "n": [3, 6, 8], "prob_n_inf": [6, 8], "prob_nan": [6, 8], "behavior": [4, 5, 6, 8, 12, 13], "left": [4, 5, 6, 8, 12, 13], "between": [4, 5, 6, 8, 12, 13, 34], "1e": [6, 8], "have": [6, 8, 9], "abil": [], "place": 6, "digit": [13, 34], "repres": [8, 13], "read": [2, 8, 22], "equival": 2, "test": 2, "util": 2, "o": [2, 3, 17], "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [], "fmt": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13], "8601": [], "form": [4, 5, 12], "strftime": [4, 5, 12, 30], "strptime": [4, 5, 12], "2021": [4, 5], "01t00": 5, "y": [3, 4, 5, 30], "h": [3, 5, 12, 13], "simultan": [4, 5, 12], "elaps": [5, 12], "certain": [5, 12], "both": [4, 12], "dai": [4, 5, 13], "7": [4, 5, 8, 13, 20], "1d": [4, 5, 13], "7d": [4, 5, 13], "adjust": 13, "0d": 13, "xx": 13, "": [3, 13, 19, 22, 30], "durat": 13, "proprietari": 13, "1h30m": [5, 12, 13], "1d2h3m4s5ms6u": 13, "express": [11, 13, 30, 34], "concaten": 13, "direct": 13, "xd": 13, "2d": [4, 13], "xh": 13, "2h": [5, 12, 13], "xm": 13, "minut": [12, 13], "2m": 13, "millisecond": 13, "xu": 13, "microsecond": 13, "2u": 13, "month": 13, "year": [2, 13], "larger": 13, "distinguish": 13, "30": [12, 13], "zero": 13, "pad": 13, "23": 13, "total": [7, 13, 34], "round": 13, "down": 13, "59": 13, "tm": 13, "6": [7, 13, 20], "000000": [5, 12, 13], "000001": 13, "999999": 13, "140": 13, "0h": 13, "meaningless": 13, "notat": [6, 7, 8, 9, 13, 34], "without": [3, 13, 20], "factory_path": 2, "row_num": 2, "csv_column": [2, 17, 30, 32, 34], "To": [2, 3, 4, 5, 6, 8, 9, 11, 12, 25], "row": [2, 30, 32], "line": [2, 3, 17], "someth": 2, "factorydef": 34, "full_respons": 34, "dataclass": 34, "top": 2, "old": 2, "third": 2, "17642547": 2, "0a4c": 2, "4897": 2, "a8da": 2, "2d495558b8fa": 2, "d40s8jq": 2, "discard": [2, 22, 32, 34], "pk": 2, "miss": 2, "made": 2, "timestamp_it": 2, "2002": 2, "els": [], "action": [], "fewer": [2, 32, 34], "probabilist": [], "howev": [3, 6, 8, 9, 14, 32, 34], "decid": [14, 34], "affect": [2, 14, 32, 34], "lazy_choic": [14, 34], "adopt": [14, 34], "or_nul": 14, "prob_regen": 2, "prob_discard": 2, "origin": [2, 32, 34], "complet": [2, 20, 32, 34], "less": [2, 6, 8, 32, 34], "gap": 2, "skip": [2, 14], "higher": [2, 3], "regex": [11, 25, 34], "char": 11, "0123456789abcdef": [3, 11], "cryptograph": 11, "secur": 11, "requir": 11, "token": 11, "authent": 11, "consid": 11, "secret": 11, "altern": 11, "alphabet": 11, "za": 11, "z0": 11, "rstr": [11, 25], "beforehand": [11, 25], "g": [11, 25], "review": [11, 25], "licens": [11, 25], "term": [4, 5, 11, 12, 25], "creation": [19, 25], "ascii_uppercas": 25, "19": 25, "consist": 25, "constant": 25, "own": 25, "az": 25, "z": 25, "re": 25, "fullmatch": 25, "_next": 14, "raise_on_factory_stop": [32, 34], "stop": [2, 32, 34], "factorystopexcept": [32, 34], "due": [2, 32, 34], "stopiter": [2, 32, 34], "error": [2, 3, 4, 5, 12], "occur": [2, 3], "environ": [0, 17], "One": 2, "idea": 2, "initial_id": [2, 17], "init_id": 2, "addit": [2, 20, 30], "env": [2, 3], "bash": [2, 3], "powershel": [2, 3], "var": [2, 3], "purpos": 3, "val": 3, "mention": 3, "effect": [], "encod": [3, 17], "linesep": [3, 17, 32, 34], "newlin": [3, 30], "utf": [3, 17], "le": 3, "utf_16_l": 3, "crlf": [3, 17], "now": [3, 5, 12], "replac": 3, "current": [3, 4, 5, 12], "empti": 3, "serial": 3, "def_fil": 3, "trail": 3, "repeat_count": 3, "factory_count": 3, "descript": [], "assign": 3, "home": 3, "log": [0, 6, 8, 9, 31, 34], "configur": [3, 22], "stderr": 3, "level": 3, "logging_config_path": 3, "yaml": 3, "adher": 3, "logger": [3, 22], "cmd": 22, "up": [3, 22, 34], "through": 3, "mechan": 3, "dure": 3, "overrid": 3, "disable_existing_logg": 3, "explicitli": 3, "displai": 3, "abnorm": 3, "hide": 3, "quiet": 3, "q": 3, "w": [3, 30], "spec": 3, "seem": 3, "incident": 3, "categori": 3, "produc": [3, 30], "randogcmdwarn": 3, "futurewarn": 33, "warned_too_long_custom_chain": 34, "set_warned_too_long_custom_chain": 34, "those": 3, "fact": 3, "pyyaml": 3, "write": [3, 17], "refer": [3, 23], "stream": 22, "howto": 22, "extens": 22, "plan": 22, "gradual": 22, "improv": 22, "handler": 22, "unexpect": 22, "select": [10, 22], "api": 31, "intend": 17, "reus": 17, "create_factori": 17, "__name__": [2, 17], "__randog__": [2, 17], "avoid": [4, 5, 12, 17], "proper": 17, "situat": [17, 30], "discuss": 17, "better": 2, "implement": 2, "todai": 4, "simpl": [4, 5, 12], "plu": [4, 5, 12], "fulli": [4, 5, 12], "interpret": [4, 5, 12], "valid": [4, 5, 12], "invalid": [4, 5, 12, 34], "unknown": [4, 5, 12], "30m": [4, 5, 12], "yesterdai": [4, 5], "tomorrow": [4, 5], "ago": [4, 5, 12], "later": [4, 5, 12], "1h": [5, 12], "11": [12, 20], "33": 12, "12h": 12, "full": 3, "end": 3, "traceback": 3, "unlik": 3, "seed": 0, "control": 3, "though": 3, "version": 3, "document": [3, 10], "reproduc": 3, "upgrad": 3, "debug": 3, "observ": 3, "easili": [14, 30], "post_process_item": [14, 34], "sir1w94": [14, 34], "convers": 14, "default_process": 34, "80": 1, "advantag": 1, "treat": 1, "mini": [1, 6, 8, 9, 11], "00000042": 9, "08": 9, "20e": 8, "98": 8, "2e": 8, "99999": 6, "99": 6, "2f": 8, "suitabl": 8, "zy7q": 11, "exp": [6, 8, 9], "10000": [6, 9], "fine": [6, 8, 9], "varieti": [6, 8, 9], "problemat": [6, 8, 9], "9999": 9, "word": [6, 8, 9], "major": [6, 8, 9], "give": [6, 8, 9], "smaller": [6, 8, 9], "precis": [6, 8, 9], "floor": [6, 8, 9], "log2": [8, 9], "binari": [6, 8, 9], "assum": [6, 8, 9], "47": 9, "event": [6, 8, 9], "portion": [6, 8, 9], "reduc": [6, 8, 9], "half": [6, 8, 9], "63": 9, "much": 9, "distribut": 34, "uniform": 34, "exp_uniform": 34, "500": [6, 8], "24": [8, 10, 19], "25": 8, "125": 8, "smallest": 8, "power": 8, "1022": 8, "tend": 8, "small": 8, "absolut": 8, "still": [], "log10": 6, "55000": 6, "100000": 6, "indent": 3, "space": [3, 10, 34], "tab": 3, "alreadi": 3, "truncat": 3, "destin": [3, 30, 32], "append": 3, "oa": 3, "kept": 3, "generate_to_csv": [30, 32], "line_num": 32, "fp": [30, 32], "textio": 32, "csv": [31, 32], "taken": [17, 32], "randogwarn": 33, "outsid": 30, "b": [10, 30], "c": 30, "abcd": 30, "tips_json": [], "as_command": [], "sy": 30, "f1": 30, "f2": 30, "stdout": 30, "disadvantag": [], "countoutput": [], "created_bi": 30, "yyyymmdd": 30, "sniiz6ek": 30, "20240817": 30, "qe37x0kd": 30, "20241025": 30, "smwgorjo": 30, "20241202": 30, "open": 30, "output_linesep": [17, 34], "lf": 17, "output_encod": [17, 34], "utf8": 17, "_util": 34, "cr": 17, "dt": 20, "2020": 20, "amount": [], "iterrang": [20, 34], "cyclic": 34, "resume_from": [20, 34], "shift": 34, "emit": 34, "exce": 34, "restart": 34, "contradict": 34, "decreas": 20, "cycl": 20, "dice": [0, 34], "face": [7, 34], "2d6": [0, 7], "dice_rol": 7, "roll": 7, "sum": 7, "side": 7, "parse_dice_not": 34, "valueerror": 34, "ipaddress": [14, 19], "ipv4address": [0, 10, 14, 19, 34], "randipv4": [14, 19, 34], "ipv4": [0, 14], "address": [10, 14, 34], "ip_network": 19, "factory1": 19, "192": [0, 19], "168": 19, "factory2": 19, "host": 19, "network": [10, 19, 34], "ipv4network": 34, "ip": 34, "71": 0, "__format__": 10, "203": 10, "113": 10, "254": 10, "198": 10, "11000000000000000000001011000100": 10, "hexadecim": 10, "c00002b7": 10}, "objects": {"": [[32, 0, 0, "-", "randog"]], "randog": [[32, 1, 1, "", "DictItemExample"], [32, 1, 1, "", "Example"], [33, 0, 0, "-", "exceptions"], [34, 0, 0, "-", "factory"], [32, 6, 1, "", "generate_to_csv"], [35, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[32, 2, 1, "", "example"], [32, 2, 1, "", "prop_exists"]], "randog.exceptions": [[33, 3, 1, "", "FactoryConstructionError"], [33, 3, 1, "", "RandogWarning"]], "randog.exceptions.FactoryConstructionError": [[33, 4, 1, "", "message"]], "randog.factory": [[34, 1, 1, "", "DictItem"], [34, 1, 1, "", "Factory"], [34, 1, 1, "", "FactoryDef"], [34, 3, 1, "", "FactoryStopException"], [34, 1, 1, "", "FromExampleContext"], [34, 6, 1, "", "by_callable"], [34, 6, 1, "", "by_iterator"], [34, 6, 1, "", "const"], [34, 6, 1, "", "dice"], [34, 6, 1, "", "from_example"], [34, 6, 1, "", "from_pyfile"], [34, 6, 1, "", "increment"], [34, 6, 1, "", "iterrange"], [34, 6, 1, "", "parse_dice_notation"], [34, 6, 1, "", "randbool"], [34, 6, 1, "", "randchoice"], [34, 6, 1, "", "randdate"], [34, 6, 1, "", "randdatetime"], [34, 6, 1, "", "randdecimal"], [34, 6, 1, "", "randdict"], [34, 6, 1, "", "randenum"], [34, 6, 1, "", "randfloat"], [34, 6, 1, "", "randint"], [34, 6, 1, "", "randipv4"], [34, 6, 1, "", "randlist"], [34, 6, 1, "", "randstr"], [34, 6, 1, "", "randtime"], [34, 6, 1, "", "randtimedelta"], [34, 6, 1, "", "union"]], "randog.factory.DictItem": [[34, 2, 1, "", "factory"], [34, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[34, 5, 1, "", "infinity_iter"], [34, 5, 1, "", "iter"], [34, 5, 1, "", "next"], [34, 5, 1, "", "or_none"], [34, 5, 1, "", "post_process"], [34, 5, 1, "", "post_process_items"]], "randog.factory.FactoryDef": [[34, 2, 1, "", "csv_columns"], [34, 2, 1, "", "factory"], [34, 2, 1, "", "output_encoding"], [34, 2, 1, "", "output_linesep"]], "randog.factory.FromExampleContext": [[34, 4, 1, "", "current_example"], [34, 4, 1, "", "custom_chain_length"], [34, 4, 1, "", "custom_funcs"], [34, 4, 1, "", "examples"], [34, 5, 1, "", "from_example"], [34, 4, 1, "", "path"], [34, 5, 1, "", "recursive"], [34, 4, 1, "", "rnd"], [34, 5, 1, "", "set_warned_too_long_custom_chain"], [34, 4, 1, "", "signal_terminate_custom"], [34, 5, 1, "", "terminate_custom_chain"], [34, 4, 1, "", "warned_too_long_custom_chain"]], "randog.sqlalchemy": [[35, 6, 1, "", "custom"], [35, 6, 1, "", "factory"], [35, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 14, "factori": [14, 15, 16, 17, 18, 19, 21, 24, 25, 27, 29, 34], "gener": [1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 21, 24, 30, 31], "random": [14, 28, 31], "valu": [14, 20, 30], "element": [14, 21], "type": [14, 20, 24, 28], "nullabl": 14, "union": 14, "randomli": [14, 27], "choic": 14, "constanc": 14, "process": 14, "output": [2, 3, 14, 30], "custom": 14, "detail": [0, 14], "how": 14, "build": 14, "individu": [14, 24], "dict": [15, 24], "randdict": 15, "from_exampl": [15, 16, 21, 24], "list": 21, "each": 21, "length": [21, 25], "tupl": 21, "quick": 23, "start": 23, "instal": 23, "minim": 23, "us": [23, 29], "tip": 26, "usag": 26, "creat": 27, "json": [27, 30], "decim": [6, 27], "e": 27, "t": 27, "c": 27, "string": 27, "timelin": 28, "data": 28, "depend": 28, "previou": 28, "chang": [2, 28], "smpl_datetim": 28, "str": [11, 25, 28], "As": [29, 30], "iter": [3, 20, 29], "obj": 31, "content": [31, 32], "indic": 31, "tabl": 31, "randog": [24, 32, 33, 34, 35], "packag": [32, 33, 34, 35], "subpackag": 32, "submodul": 32, "modul": 32, "except": 33, "run": 0, "command": [0, 23], "format": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "file": [3, 17], "extern": 17, "definit": 17, "enum": 16, "randenum": 16, "special": 14, "increment": 18, "integ": 18, "from": 24, "sqlalchemi": [24, 35], "support": 24, "column": 24, "limit": 24, "model": [], "instanc": 24, "some": [], "field": 24, "specifi": [19, 24, 25], "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "int": 9, "float": 8, "datetim": 5, "date": 4, "time": 12, "timedelta": 13, "simpl": [13, 19, 25], "code": 13, "csv": [2, 30], "charact": 25, "set": 25, "regular": 25, "express": [4, 5, 12, 25], "behavior": 2, "pattern": 2, "environ": [2, 3], "variabl": [2, 3], "modifi": 3, "log": [3, 22], "warn": 3, "api": 22, "import": 17, "minimum": [4, 5, 12], "maximum": [4, 5, 12], "seed": 3, "lowercas": 1, "repeatedli": [1, 4, 5, 6, 7, 8, 9, 12, 13], "infin": [6, 8], "nan": [6, 8], "numer": [1, 10], "0": 9, "pad": 9, "etc": [4, 5, 6, 8, 9, 10, 11, 12, 13], "signific": 8, "digit": [6, 8, 9], "thousand": 6, "separ": 6, "align": 11, "iso": [4, 5, 12, 13], "8601": [4, 5, 12, 13], "probabl": [6, 8, 9], "distribut": [6, 8, 9], "uniform": [6, 8, 9], "itertool": [], "countoutput": [], "attribut": 17, "rang": 20, "step": 20, "cyclic": 20, "program": 23, "dice": 7, "ipv4": [10, 19], "address": 19, "network": [], "space": 19, "binari": 10, "system": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"], [11, "arguments-and-options"], [12, "arguments-and-options"], [13, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"]], "Format: Lowercase or Numeric": [[1, "format-lowercase-or-numeric"]], "Repeatedly Generate": [[1, "repeatedly-generate"], [4, "repeatedly-generate"], [5, "repeatedly-generate"], [6, "repeatedly-generate"], [7, "repeatedly-generate"], [8, "repeatedly-generate"], [9, "repeatedly-generate"], [12, "repeatedly-generate"], [13, "repeatedly-generate"]], "byfile Mode": [[2, "byfile-mode"]], "output as CSV": [[2, "output-as-csv"]], "Change behavior patterns by environment variables": [[2, "change-behavior-patterns-by-environment-variables"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "Seed": [[3, "seed"]], "Modify environment variable": [[3, "modify-environment-variable"]], "Logging": [[3, "logging"], [22, "logging"]], "Warning": [[3, "warning"]], "date Mode": [[4, "date-mode"]], "Expression of MINIMUM and MAXIMUM": [[4, "expression-of-minimum-and-maximum"], [5, "expression-of-minimum-and-maximum"], [12, "expression-of-minimum-and-maximum"]], "Format: ISO-8601, etc.": [[4, "format-iso-8601-etc"], [5, "format-iso-8601-etc"], [12, "format-iso-8601-etc"], [13, "format-iso-8601-etc"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "Infinity and NaN": [[6, "infinity-and-nan"], [8, "infinity-and-nan"]], "Format: Thousands Separator, etc.": [[6, "format-thousands-separator-etc"]], "Probability Distribution; uniform distribution of digits": [[6, "probability-distribution-uniform-distribution-of-digits"], [8, "probability-distribution-uniform-distribution-of-digits"], [9, "probability-distribution-uniform-distribution-of-digits"]], "dice Mode": [[7, "dice-mode"]], "float Mode": [[8, "float-mode"]], "Format: Significant Digits, etc.": [[8, "format-significant-digits-etc"]], "int Mode": [[9, "int-mode"]], "Format: 0-padding, etc.": [[9, "format-0-padding-etc"]], "ipv4 Mode": [[10, "ipv4-mode"]], "Format: binary numeral system, etc.": [[10, "format-binary-numeral-system-etc"]], "str Mode": [[11, "str-mode"]], "Format: align, etc.": [[11, "format-align-etc"]], "time Mode": [[12, "time-mode"]], "timedelta Mode": [[13, "timedelta-mode"]], "Simple Format": [[13, "simple-format"]], "Format codes": [[13, "format-codes"]], "Construct Factories (generator of random values)": [[14, "construct-factories-generator-of-random-values"]], "Elemental types": [[14, "elemental-types"]], "Nullable": [[14, "nullable"]], "Union type": [[14, "union-type"]], "Randomly choice": [[14, "randomly-choice"]], "Constance": [[14, "constance"]], "Processing output": [[14, "processing-output"]], "Custom Factory": [[14, "custom-factory"]], "Details on how to build individual factories": [[14, "details-on-how-to-build-individual-factories"]], "Special Factory": [[14, "special-factory"]], "Dict factory": [[15, "dict-factory"]], "Factory by randdict": [[15, "factory-by-randdict"]], "Factory by from_example": [[15, "factory-by-from-example"], [16, "factory-by-from-example"], [21, "factory-by-from-example"], [24, "factory-by-from-example"]], "Enum factory": [[16, "enum-factory"]], "Factory by randenum": [[16, "factory-by-randenum"]], "External File Definition of Factory": [[17, "external-file-definition-of-factory"]], "Attributes": [[17, "attributes"]], "Importable definition files": [[17, "importable-definition-files"]], "Incremental integer factory": [[18, "incremental-integer-factory"]], "IPv4 address factory": [[19, "ipv4-address-factory"]], "Simple factory": [[19, "simple-factory"], [25, "simple-factory"]], "Specify the address space": [[19, "specify-the-address-space"]], "Iteration of range": [[20, "iteration-of-range"]], "Step": [[20, "step"]], "Cyclic": [[20, "cyclic"]], "Types of values": [[20, "types-of-values"]], "List factory": [[21, "list-factory"]], "Each elements": [[21, "each-elements"]], "Length": [[21, "length"]], "Generate tuple": [[21, "generate-tuple"]], "API": [[22, "api"]], "Quick start": [[23, "quick-start"]], "Installation": [[23, "installation"]], "Minimal use (as command)": [[23, "minimal-use-as-command"]], "Minimal use (in programs)": [[23, "minimal-use-in-programs"]], "Factory from sqlalchemy": [[24, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[24, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[24, "supported-column-type"]], "Limitations": [[24, "limitations"]], "Specify factories for individual fields": [[24, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[24, "generate-a-dict-instance"]], "Str factory": [[25, "str-factory"]], "Specify the length or/and character set": [[25, "specify-the-length-or-and-character-set"]], "Specify a regular expression": [[25, "specify-a-regular-expression"]], "Tips (Usage)": [[26, "tips-usage"]], "Create JSON randomly": [[27, "create-json-randomly"]], "Decimal e.t.c.": [[27, "decimal-e-t-c"]], "Factory of JSON string": [[27, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[28, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[28, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[29, "use-factories"]], "As iterator": [[29, "as-iterator"]], "Output Generated Values": [[30, "output-generated-values"]], "As JSON": [[30, "as-json"]], "As CSV": [[30, "as-csv"]], "random-obj-generator": [[31, "random-obj-generator"]], "Contents:": [[31, null]], "Indices and tables": [[31, "indices-and-tables"]], "randog package": [[32, "randog-package"]], "Subpackages and submodules": [[32, "subpackages-and-submodules"]], "Module contents": [[32, "module-randog"]], "randog.exceptions package": [[33, "module-randog.exceptions"]], "randog.factory package": [[34, "module-randog.factory"]], "randog.sqlalchemy package": [[35, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[32, "randog.DictItemExample"]], "example (class in randog)": [[32, "randog.Example"]], "example (randog.dictitemexample attribute)": [[32, "randog.DictItemExample.example"]], "generate_to_csv() (in module randog)": [[32, "randog.generate_to_csv"]], "module": [[32, "module-randog"], [33, "module-randog.exceptions"], [34, "module-randog.factory"], [35, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[32, "randog.DictItemExample.prop_exists"]], "randog": [[32, "module-randog"]], "factoryconstructionerror": [[33, "randog.exceptions.FactoryConstructionError"]], "randogwarning": [[33, "randog.exceptions.RandogWarning"]], "message (randog.exceptions.factoryconstructionerror property)": [[33, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[33, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[34, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[34, "randog.factory.Factory"]], "factorydef (class in randog.factory)": [[34, "randog.factory.FactoryDef"]], "factorystopexception": [[34, "randog.factory.FactoryStopException"]], "fromexamplecontext (class in randog.factory)": [[34, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[34, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[34, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[34, "randog.factory.const"]], "csv_columns (randog.factory.factorydef attribute)": [[34, "randog.factory.FactoryDef.csv_columns"]], "current_example (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.custom_funcs"]], "dice() (in module randog.factory)": [[34, "randog.factory.dice"]], "examples (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[34, "randog.factory.DictItem.factory"]], "factory (randog.factory.factorydef attribute)": [[34, "randog.factory.FactoryDef.factory"]], "from_example() (in module randog.factory)": [[34, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[34, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[34, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[34, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[34, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[34, "randog.factory.Factory.iter"]], "iterrange() (in module randog.factory)": [[34, "randog.factory.iterrange"]], "next() (randog.factory.factory method)": [[34, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[34, "randog.factory.Factory.or_none"]], "output_encoding (randog.factory.factorydef attribute)": [[34, "randog.factory.FactoryDef.output_encoding"]], "output_linesep (randog.factory.factorydef attribute)": [[34, "randog.factory.FactoryDef.output_linesep"]], "parse_dice_notation() (in module randog.factory)": [[34, "randog.factory.parse_dice_notation"]], "path (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[34, "randog.factory.Factory.post_process"]], "post_process_items() (randog.factory.factory method)": [[34, "randog.factory.Factory.post_process_items"]], "prop_exists (randog.factory.dictitem attribute)": [[34, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[34, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[34, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[34, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[34, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[34, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[34, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[34, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[34, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[34, "randog.factory.randint"]], "randipv4() (in module randog.factory)": [[34, "randog.factory.randipv4"]], "randlist() (in module randog.factory)": [[34, "randog.factory.randlist"]], "randog.factory": [[34, "module-randog.factory"]], "randstr() (in module randog.factory)": [[34, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[34, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[34, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[34, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.rnd"]], "set_warned_too_long_custom_chain() (randog.factory.fromexamplecontext method)": [[34, "randog.factory.FromExampleContext.set_warned_too_long_custom_chain"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[34, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[34, "randog.factory.union"]], "warned_too_long_custom_chain (randog.factory.fromexamplecontext property)": [[34, "randog.factory.FromExampleContext.warned_too_long_custom_chain"]], "custom() (in module randog.sqlalchemy)": [[35, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[35, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[35, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[35, "module-randog.sqlalchemy"]]}})