Search.setIndex({"docnames": ["doc.as_command", "doc.as_command.bool", "doc.as_command.byfile", "doc.as_command.common_option", "doc.as_command.date", "doc.as_command.datetime", "doc.as_command.decimal", "doc.as_command.dice", "doc.as_command.float", "doc.as_command.int", "doc.as_command.str", "doc.as_command.time", "doc.as_command.timedelta", "doc.construct_factories", "doc.dict_factory", "doc.enum_factory", "doc.external_def", "doc.increment_factory", "doc.ipv4_factory", "doc.iterrange_factory", "doc.list_factory", "doc.logging", "doc.quickstart", "doc.sqlalchemy", "doc.str_factory", "doc.tips", "doc.tips_json", "doc.tips_timeline", "doc.use_factories", "doc.write_generated", "index", "randog", "randog.exceptions", "randog.factory", "randog.sqlalchemy"], "filenames": ["doc.as_command.rst", "doc.as_command.bool.rst", "doc.as_command.byfile.rst", "doc.as_command.common_option.rst", "doc.as_command.date.rst", "doc.as_command.datetime.rst", "doc.as_command.decimal.rst", "doc.as_command.dice.rst", "doc.as_command.float.rst", "doc.as_command.int.rst", "doc.as_command.str.rst", "doc.as_command.time.rst", "doc.as_command.timedelta.rst", "doc.construct_factories.rst", "doc.dict_factory.rst", "doc.enum_factory.rst", "doc.external_def.rst", "doc.increment_factory.rst", "doc.ipv4_factory.rst", "doc.iterrange_factory.rst", "doc.list_factory.rst", "doc.logging.rst", "doc.quickstart.rst", "doc.sqlalchemy.rst", "doc.str_factory.rst", "doc.tips.rst", "doc.tips_json.rst", "doc.tips_timeline.rst", "doc.use_factories.rst", "doc.write_generated.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst", "randog.sqlalchemy.rst"], "titles": ["Run as Command", "bool Mode", "byfile Mode", "Common Options", "date Mode", "datetime Mode", "decimal Mode", "dice Mode", "float Mode", "int Mode", "str Mode", "time Mode", "timedelta Mode", "Construct Factories (generator of random values)", "Dict factory", "Enum factory", "External File Definition of Factory", "Incremental integer factory", "IPv4 address factory", "Iteration of range", "List factory", "Logging", "Quick start", "Factory from sqlalchemy", "Str factory", "Tips (Usage)", "Create JSON randomly", "Random timeline data \u2013 depends on previous data", "Use Factories", "Output Generated Values", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package", "randog.sqlalchemy package"], "terms": {"In": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 23, 26, 27, 29], "randog": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34], "an": [2, 3, 4, 5, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 31, 33, 34], "object": [2, 3, 4, 5, 11, 12, 13, 14, 16, 22, 23, 26, 31, 33, 34], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 23, 24, 26, 27, 28, 29, 33], "rule": [3, 13, 33], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23, 25, 28, 31, 33], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 26, 29, 31, 33, 34], "when": [2, 3, 6, 8, 9, 13, 16, 17, 19, 20, 21, 23, 24, 29, 33], "creat": [2, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34], "If": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 29, 31, 33, 34], "you": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 33, 34], "do": [13, 17, 19, 33], "care": [13, 28], "about": [13, 33], "condit": [0, 13, 18, 24, 33], "other": [2, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 33, 34], "than": [2, 3, 5, 6, 8, 11, 12, 13, 16, 20, 23, 31, 33], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33], "simpli": [2, 13, 23, 31, 33], "suppli": 13, "exampl": [0, 3, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34], "from_exampl": [2, 13, 16, 18, 22, 24, 27, 33, 34], "want": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 19, 20, 22, 23, 27, 29, 34], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 26, 27, 29, 30, 31, 33, 34], "constructor": 13, "correspond": [13, 14, 33], "import": [2, 3, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34], "factory_a": 13, "generated_a": 13, "next": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 33, 34], "assert": [13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 28, 33], "isinst": [13, 14, 16, 18, 20, 22, 23, 24, 28, 33], "str": [0, 3, 13, 14, 16, 20, 22, 23, 26, 28, 31, 32, 33, 34], "factory_b": 13, "randstr": [2, 3, 13, 14, 16, 20, 24, 26, 28, 29, 33], "length": [3, 6, 8, 10, 12, 13, 14, 23, 26, 28, 29, 33], "16": [3, 8, 9, 10, 13, 14, 26, 27], "generated_b": 13, "len": [0, 6, 8, 9, 13, 20, 23, 24, 28, 33], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29], "argument": [13, 14, 15, 16, 18, 23, 24, 29, 30, 31, 33], "nonetyp": [13, 33], "There": [3, 13, 28], "dedic": 13, "function": [2, 13, 14, 15, 16, 22, 26, 29, 31, 33, 34], "const": [13, 33], "instead": [2, 13, 14, 20, 23, 34], "none": [13, 23, 31, 33, 34], "bool": [0, 13, 20, 31, 33, 34], "randbool": [13, 20, 33], "true": [0, 1, 2, 3, 13, 14, 19, 23, 27, 31, 33, 34], "fals": [1, 13, 23, 31, 33, 34], "int": [0, 2, 3, 8, 13, 14, 16, 19, 20, 22, 23, 27, 31, 33], "randint": [2, 13, 14, 20, 23, 24, 26, 33], "integ": [1, 7, 8, 9, 10, 13, 23, 27, 34], "float": [0, 9, 13, 23, 31, 33], "randfloat": [8, 13, 33], "string": [2, 3, 10, 13, 23, 24, 27, 31, 33, 34], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 22, 27, 28, 31, 33], "randlist": [13, 20, 33], "tupl": [13, 33], "dict": [2, 13, 16, 22, 27, 33, 34], "randdict": [2, 13, 16, 20, 23, 26, 29, 33], "decim": [0, 8, 9, 12, 13, 33], "randdecim": [6, 13, 20, 26, 33], "datetim": [0, 2, 3, 4, 11, 13, 19, 23, 27, 33], "randdatetim": [5, 13, 33], "date": [0, 5, 11, 13, 19, 23, 33], "randdat": [4, 13, 29, 33], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 20, 23, 27, 28, 31, 33], "randtim": [11, 13, 33], "timedelta": [0, 2, 4, 5, 11, 13, 19, 27, 33], "randtimedelta": [12, 13, 33], "candid": [6, 8, 13, 33], "or_non": [13, 33], "factory_nul": 13, "0": [1, 2, 3, 6, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 27, 28, 31, 33], "1": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 19, 20, 23, 27, 28, 29, 31, 33], "get": [2, 3, 13, 26], "alwai": [13, 14, 20, 23], "return": [2, 3, 13, 14, 15, 16, 19, 28, 31, 33, 34], "sever": [0, 3, 13], "method": [2, 13, 16, 27, 28, 29], "determin": [2, 9, 13], "from": [2, 3, 6, 8, 9, 13, 14, 15, 16, 18, 19, 24, 26, 27, 29, 31, 33, 34], "multipl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 33], "make": [1, 2, 6, 8, 9, 13, 16, 20, 27], "e": [10, 13, 24, 29], "so": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16, 17, 19, 23, 33], "boolean": [1, 13, 23], "_": 13, "rang": [4, 5, 6, 8, 9, 10, 11, 12, 13], "10": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 19, 23, 24, 26, 28, 33], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 24, 29, 30, 33], "choos": [13, 16, 33], "either": [13, 14], "each": [0, 1, 2, 3, 13, 14, 15, 16, 21, 23, 28, 29, 31, 33, 34], "result": [2, 3, 7, 8, 13, 33], "chosen": [13, 33], "one": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 20, 22, 27, 33], "specif": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 20, 25, 33], "randchoic": [13, 14, 15, 23, 27, 33], "allow": [2, 12, 13, 26, 33], "deni": 13, "same": [2, 3, 6, 8, 9, 12, 13, 15, 19, 20, 23, 26], "python": [2, 3, 4, 5, 8, 11, 12, 13, 16, 21, 22, 26], "predefin": 13, "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 26, 27, 28, 31, 33, 34], "chang": [3, 4, 5, 11, 12, 13, 23, 33], "post_process": [13, 23, 26, 27, 33], "format": [0, 2, 7, 13, 26, 29, 33], "50000": [13, 33], "decimal_len": [13, 20, 26, 33], "2": [0, 3, 6, 8, 9, 12, 13, 15, 17, 18, 19, 20, 23, 26, 27, 29, 33], "lambda": [2, 13, 23, 26, 27, 29, 33], "x": [3, 6, 8, 9, 12, 13, 16, 33], "f": [2, 12, 13, 14, 33], "12": [0, 6, 11, 13, 19, 27, 33], "345": [6, 13, 33], "67": [6, 13, 33], "3": [0, 3, 6, 8, 10, 13, 17, 19, 20, 22, 23, 24, 29, 33], "153": [13, 33], "21": [13, 33], "90": [6, 8, 9, 13, 33], "etc": [2, 3, 13, 22, 33], "provid": [3, 13, 21], "also": [0, 2, 3, 4, 5, 8, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33], "context": [1, 13, 33], "iter": [0, 13, 20, 27, 29, 30, 31, 33], "includ": [3, 6, 8, 9, 13, 23], "normal": [3, 13, 20, 33], "would": [13, 14, 15, 17, 20, 23, 27], "think": 13, "could": 13, "just": [1, 4, 5, 6, 8, 9, 11, 12, 13, 22, 28], "directli": [13, 16, 33], "need": [3, 13, 18, 20, 24], "itertool": [2, 13, 29], "uuid": [2, 13, 16, 22], "defin": [2, 3, 12, 13, 16, 31, 33], "class": [13, 15, 23, 31, 33, 34], "mailaddressfactori": 13, "def": [2, 13, 15, 16, 27], "self": 13, "com": 13, "http": 13, "doc": [13, 21], "org": 13, "librari": [3, 13, 21], "html": 13, "count": [2, 13, 29, 33], "id": [2, 13, 16, 20, 23, 26, 34], "uuid4": [2, 13, 16, 22], "name": [2, 3, 13, 14, 16, 22, 23, 26, 29, 33, 34], "mail": 13, "set": [2, 3, 13, 16, 19, 20, 21], "endswith": 13, "by_cal": [13, 33], "by_iter": [2, 13, 27, 29, 33], "A": [4, 5, 7, 11, 13, 23, 24, 33], "finit": 13, "onc": [3, 13, 28], "termin": [3, 13, 28, 33], "cannot": [2, 10, 12, 13, 16, 23, 24, 26, 31, 33], "ani": [0, 2, 13, 14, 15, 16, 23, 31, 33, 34], "more": [0, 2, 6, 8, 9, 12, 13, 21, 29, 33], "gener": [0, 2, 3, 10, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 31, 33, 34], "element": [3, 12, 14, 23, 27, 30, 33], "randomli": [3, 14, 20, 22, 23, 25, 29, 30, 31, 33, 34], "like": [1, 4, 5, 6, 8, 9, 11, 12, 14, 15, 20, 23, 27, 33], "built": [14, 15, 23], "two": [3, 7, 14, 15, 23], "wai": [2, 14, 15, 19, 21, 23, 28, 29], "code": [2, 13, 14, 15, 16, 20, 23, 28, 33], "look": [14, 15, 20, 23, 27], "dictitem": [14, 15, 33], "sex": 14, "m": [3, 4, 5, 11, 12, 14, 29, 34], "ag": [2, 14, 16, 22, 23, 26], "kei": [2, 14, 16, 23, 28, 29, 31, 33], "exist": [3, 14, 17], "random": [2, 3, 14, 20, 24, 25, 28, 31, 33, 34], "100": [0, 2, 6, 8, 9, 14, 20], "9": [0, 10, 14], "As": [3, 14, 16, 23, 27, 30], "pass": [3, 14, 18, 22, 23, 24, 33], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 23, 24, 26, 27, 28, 30, 31, 33, 34], "keyword": [14, 33], "By": [3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 22, 23], "possibl": [3, 12, 14, 18, 23, 24, 26], "whether": [13, 14, 33], "dictionari": [2, 3, 14, 29, 34], "abov": [3, 6, 8, 9, 14, 17, 23, 27], "see": [0, 2, 3, 4, 5, 11, 12, 13, 14, 16, 21, 23, 27, 29], "here": [3, 4, 5, 11, 12, 14, 21, 22, 23, 25, 33], "how": [14, 21, 23, 30], "build": [14, 23, 30], "dictitemexampl": [14, 15, 31], "smith": 14, "22": [11, 14], "Not": 14, "limit": [3, 6, 8, 9, 14, 19], "given": [14, 20, 23, 27], "output": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 21, 26, 30, 31], "similar": [10, 14, 29], "its": [14, 28, 33], "Or": 14, "wrap": 14, "mani": [12, 20], "case": [1, 2, 6, 10, 12, 20, 23, 26, 27, 31, 33], "becaus": [12, 20, 21], "tailor": 20, "applic": 20, "record": [2, 20, 23], "singl": [3, 7, 20], "mai": [1, 2, 3, 12, 17, 20, 21, 23, 28, 29, 31, 33], "appropri": [12, 16, 20, 21], "rather": [5, 11, 20], "999_999": [20, 26], "price": [20, 26], "1000": [6, 8, 9, 20, 26], "200": [20, 27], "record_list": 20, "th": [12, 20], "longer": 20, "number": [2, 3, 6, 8, 9, 12, 16, 20, 29, 31, 33, 34], "repeat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 20], "last": 20, "el_factori": 20, "4": [3, 8, 9, 10, 19, 20, 23, 24, 29], "therefor": [3, 20, 21], "typic": [12, 20], "where": [2, 10, 20, 31, 33], "ha": [8, 12, 20], "mean": [3, 4, 5, 11, 12, 16, 20, 33], "onli": [3, 5, 6, 8, 9, 13, 16, 17, 20, 33], "el": 20, "5": [1, 2, 6, 8, 10, 12, 19, 20, 28, 29, 33], "sure": 20, "map": [20, 31, 33, 34], "piec": 20, "attribut": [20, 30], "type": [0, 1, 3, 15, 17, 20, 26, 30, 33, 34], "necessari": [1, 12, 20], "separ": [2, 3, 8, 9, 16, 20, 31], "schema": [3, 20], "sinc": [4, 5, 8, 11, 16, 20, 26], "omit": [2, 3, 4, 5, 11, 16, 20], "equal": [12, 20, 33], "accept": [3, 20, 33], "guarante": [10, 17, 20], "try": 22, "step": [22, 27, 33], "prepar": 22, "8": [1, 8, 9, 10, 15, 16, 19, 22, 24, 29, 33], "newer": 22, "pip": [10, 22, 24], "command": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 21, 26, 29, 30], "factori": [2, 3, 19, 21, 22, 27, 29, 30, 31, 34], "20": [0, 1, 2, 10, 12, 16, 22, 23], "some": [1, 2, 3, 13, 16, 23, 25, 29], "timelin": [25, 30], "data": [2, 17, 25, 30, 33], "depend": [3, 25, 30, 33], "previou": [23, 25, 26, 30], "json": [1, 2, 3, 4, 5, 6, 8, 11, 12, 25, 30], "modul": [10, 24, 26, 30], "18": 26, "64": 26, "value_json": 26, "dump": 26, "we": [21, 26], "wosar5ajmwhngj72": 26, "51": [0, 26], "convert": [3, 23, 26], "default": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 15, 23, 26, 31, 33, 34], "583085": 26, "754": 26, "were": 26, "begin": [4, 5, 11, 26], "v": [26, 28, 33], "non": [13, 16, 27, 29], "pseudo": 27, "seri": 27, "iter_datetim": 27, "start": [27, 30], "nxt": 27, "while": [2, 27], "yield": [2, 27], "iter_randomwalk": 27, "step_f": 27, "2022": [0, 4, 5, 27], "hour": [2, 5, 11, 12, 19, 27], "locat": 27, "hourli": 27, "01": [0, 4, 5, 6, 8, 11, 12, 27], "01t12": [5, 27], "00": [5, 6, 11, 12, 27], "13": 27, "14": 27, "15": [6, 8, 9, 27], "seen": 27, "definit": [0, 2, 3, 23, 27, 30, 31, 33], "increas": [21, 27], "exactli": [2, 27], "differ": [3, 9, 13, 19, 27, 33], "randomwalk": 27, "thu": 27, "wa": [2, 16, 27, 33], "d": [2, 3, 4, 5, 12, 24, 27, 29], "isoformat": 27, "128": 28, "generated1": [18, 28], "generated2": [18, 28], "note": [3, 6, 8, 9, 16, 23, 28], "low": 28, "probabl": [1, 2, 4, 5, 11, 12, 15, 23, 28, 31, 33], "thei": [23, 28, 33], "ident": [6, 8, 9, 28], "usual": [24, 28], "sugar": 28, "coat": 28, "syntax": 28, "although": [3, 8, 9, 13, 18, 24, 28], "itself": 28, "cnt": 28, "generated_valu": 28, "dispos": 28, "must": [2, 3, 4, 5, 10, 11, 24, 28, 33], "regener": [2, 28, 31, 33], "infinity_it": [28, 33], "foo": [2, 28, 33], "bar": [28, 33], "k": [23, 28, 33], "zip": [28, 33], "warn": [0, 28, 32], "run": [21, 22, 28, 29, 30], "below": [2, 3, 16, 28], "continu": 28, "indefinit": [19, 28], "caus": [4, 5, 11, 21, 28], "infinit": 28, "loop": 28, "handl": [16, 28], "packag": [3, 10, 24, 30], "help": 30, "quick": 30, "instal": [3, 10, 24, 30], "minim": 30, "construct": [30, 33], "nullabl": [23, 30], "union": [30, 33, 34], "choic": 30, "constanc": 30, "process": [1, 2, 16, 30, 33], "custom": [23, 30, 34], "detail": [2, 30], "individu": 30, "tip": 30, "usag": [4, 5, 11, 30], "subpackag": 30, "submodul": 30, "index": 30, "except": [3, 16, 31, 33], "prop_exist": [31, 33], "base": [6, 8, 9, 23, 31, 32, 33, 34], "obj": 31, "sequenc": [31, 33], "factoryconstructionerror": [32, 33], "messag": [3, 32], "properti": [1, 32, 33], "item": [13, 23, 33], "arg": 33, "kwd": 33, "abc": 33, "t": [3, 12, 33], "infin": 33, "serv": 33, "NOT": 33, "size": [31, 33], "paramet": [31, 33, 34], "abstract": [], "accord": [0, 33], "assembl": 33, "prob": 33, "rnd": [33, 34], "whose": [23, 33], "option": [16, 20, 26, 29, 30, 31, 33, 34], "callabl": [31, 33], "r": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 23, 24, 33], "modifi": [0, 33], "fromexamplecontext": 33, "path": [2, 33], "custom_func": [23, 33, 34], "_customfunc": 33, "example_is_custom": [], "examples_stack": 33, "child": [21, 33], "current_exampl": 33, "recurs": 33, "classmethod": [], "root": 21, "func": 33, "It": [1, 2, 3, 10, 12, 23, 31, 33], "match": [33, 34], "execut": [0, 3, 7, 16, 20, 21, 22, 26, 31, 33], "first": [3, 13, 33], "new": 33, "recommend": [2, 21, 33], "receiv": 33, "kwarg": [33, 34], "futur": [2, 3, 21, 23, 33], "updat": 33, "should": [3, 16, 33], "take": [1, 16, 33], "preced": [16, 33], "over": 33, "rais": [16, 31, 32, 33], "support": 33, "prop_tru": [1, 33], "inconsist": 33, "weight": [6, 8, 9, 15, 33], "chose": [], "No": 33, "minimum": [6, 8, 9, 12, 33], "maximum": [6, 8, 9, 12, 17, 19, 33], "tzinfo": 33, "liter": 33, "fix": [8, 33], "awar": 33, "correct": 33, "otherwis": 33, "supportsfloat": 33, "p_inf": 33, "n_inf": 33, "nan": 33, "part": [6, 8, 12, 33], "posit": [6, 8, 9, 17, 33], "neg": [6, 8, 9, 19, 33], "items_dict": 33, "hashabl": 33, "ignor": [3, 23, 33], "_base": 33, "_list": 33, "items_list": 33, "charset": [3, 10, 24, 33], "charact": [3, 10, 33], "timezon": [], "inform": [3, 21], "unit": [8, 12, 33], "atom": 33, "simplest": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 29], "factory_definition_fil": [], "filenam": [2, 33], "instanc": [2, 34], "variabl": [0, 16], "print": [3, 29], "repr": 3, "befor": 3, "standard": [2, 3, 4, 5, 8, 11, 21], "after": [3, 4, 5, 11, 17, 33], "being": 3, "For": [0, 2, 3, 6, 8, 9, 12, 16, 21, 22, 23, 34], "factory_def": [0, 2, 3, 16], "py": [0, 2, 3, 16], "out": 3, "txt": 3, "veri": 21, "practic": 29, "thing": [], "done": [15, 16, 20, 26], "redirect": [], "featur": [3, 21, 23], "shell": [2, 3], "combin": [4, 5, 11, 13], "describ": [0, 3, 16], "them": [2, 13, 16, 29, 33], "l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16], "repeatedli": [3, 23], "ONE": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 23], "conform": 3, "On": 3, "hand": 3, "placehold": 3, "out_1": 3, "out_2": 3, "out_3": 3, "out_": [2, 3], "out_0001": 3, "out_0002": 3, "out_0003": 3, "04": 3, "most": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 16], "far": 16, "load": 16, "runtim": 16, "written": [1, 6, 8, 9, 10, 16], "bound": 16, "save": 16, "under": 16, "your": [16, 24, 29], "from_pyfil": [16, 33], "extern": [3, 30], "file": [0, 2, 21, 30, 33], "pathlik": 33, "io": 33, "notimpl": 33, "behav": 33, "until": 33, "enumer": [13, 15], "randenum": [13, 33], "particular": [3, 6, 8, 9, 13, 23], "enum": [13, 33], "myenum": 15, "custom_chain_length": 33, "signal_terminate_custom": 33, "terminate_custom_chain": 33, "enum_cl": 33, "bias": 15, "elif": 15, "commonli": 13, "increment": [13, 16, 19, 23, 27, 33], "wish": [3, 17], "initi": [2, 17, 19], "ad": [3, 17, 21], "databas": [2, 17, 23], "initial_valu": [17, 33], "101": 17, "31": [4, 9, 17], "102": 17, "103": 17, "fit": 17, "sign": 17, "32": [8, 9, 17], "bit": 17, "add": [27, 34], "auto": 27, "field": [2, 27, 34], "special": 30, "sequenti": [3, 33], "reach": 33, "reset": 33, "satisfi": [1, 4, 5, 6, 8, 9, 11, 12, 23, 33], "sqlalchemi": [13, 14, 31], "enabl": [], "experiment": [3, 23], "remov": [3, 23], "significantli": [3, 23], "variou": 23, "appli": 23, "mapped_column": 23, "orm": [23, 34], "declarative_bas": [23, 34], "user": [23, 34], "__tablename__": [23, 34], "primary_kei": [23, 34], "autoincr": [23, 34], "least": 23, "work": [2, 23], "biginteg": 23, "numer": [6, 8, 10, 23], "text": 23, "timestamp": [2, 23], "interv": 23, "doe": [12, 23, 33], "all": [2, 3, 6, 8, 9, 13, 18, 23, 24, 33], "rdb": 23, "pleas": [3, 10, 21, 22, 23, 24], "relationship": 23, "foreign": 23, "constraint": 23, "even": [2, 3, 23], "uniqu": 23, "primari": 23, "duplic": 23, "known": 23, "greater": [6, 8, 9, 23], "intuit": 23, "birthdai": 23, "problem": [3, 8, 23], "check": [3, 23], "shown": [2, 29], "accomplish": [], "deriv": 34, "column": [16, 29, 31, 34], "model": [14, 23, 34], "as_dict": [14, 23, 34], "factory_from_column": 34, "60": 23, "overridden": [3, 23], "second": [3, 12, 23], "respect": 23, "for_exampl": [], "inspect": 23, "col": 23, "attr": 23, "override_column": 34, "obtain": [1, 2, 33, 34], "independ": 23, "reiter": 23, "automat": 23, "manual": [12, 23], "group_id": 23, "respond": 23, "regular": [10, 23, 33], "manag": [12, 23], "order": [3, 23, 29], "actual": 23, "coe": [], "advanc": 23, "basic": 0, "further": 0, "avail": [0, 3], "page": [0, 2], "42": [0, 3, 9], "826684165562185": 0, "xtgh3vh1": 0, "91": [0, 6], "2023": 0, "03": [0, 2], "43": 0, "110244": 0, "17h": 0, "byfil": [0, 3, 16], "common": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16], "mode": [3, 16, 29, 30], "50": [1, 9], "lower": 1, "program": [1, 8, 29, 30], "anoth": 1, "languag": [1, 6, 8, 9, 10], "desir": [1, 8], "point": [5, 8, 11, 16], "p": [6, 8], "inf": [6, 8], "prob_p_inf": [6, 8], "n": [3, 6, 8], "prob_n_inf": [6, 8], "prob_nan": [6, 8], "behavior": [4, 5, 6, 8, 11, 12], "left": [4, 5, 6, 8, 11, 12], "between": [4, 5, 6, 8, 11, 12, 33], "1e": [6, 8], "have": [6, 8, 9], "abil": [], "place": 6, "digit": [12, 33], "repres": [8, 12], "read": [2, 8, 21], "equival": 2, "test": 2, "util": 2, "o": [2, 3, 16], "out_001": 2, "out_002": 2, "decimal_length": 6, "often": 6, "245": 6, "iso": [], "fmt": [1, 4, 5, 6, 8, 9, 10, 11, 12], "8601": [], "form": [4, 5, 11], "strftime": [4, 5, 11, 29], "strptime": [4, 5, 11], "2021": [4, 5], "01t00": 5, "y": [3, 4, 5, 29], "h": [3, 5, 11, 12], "simultan": [4, 5, 11], "elaps": [5, 11], "certain": [5, 11], "both": [4, 11], "dai": [4, 5, 12], "7": [4, 5, 8, 12, 19], "1d": [4, 5, 12], "7d": [4, 5, 12], "adjust": 12, "0d": 12, "xx": 12, "": [3, 12, 18, 21, 29], "durat": 12, "proprietari": 12, "1h30m": [5, 11, 12], "1d2h3m4s5ms6u": 12, "express": [10, 12, 29, 33], "concaten": 12, "direct": 12, "xd": 12, "2d": [4, 12], "xh": 12, "2h": [5, 11, 12], "xm": 12, "minut": [11, 12], "2m": 12, "millisecond": 12, "xu": 12, "microsecond": 12, "2u": 12, "month": 12, "year": [2, 12], "larger": 12, "distinguish": 12, "30": [11, 12], "zero": 12, "pad": 12, "23": 12, "total": [7, 12, 33], "round": 12, "down": 12, "59": 12, "tm": 12, "6": [7, 12, 19], "000000": [5, 11, 12], "000001": 12, "999999": 12, "140": 12, "0h": 12, "meaningless": 12, "notat": [6, 7, 8, 9, 12, 33], "without": [3, 12, 19], "factory_path": 2, "row_num": 2, "csv_column": [2, 16, 29, 31, 33], "To": [2, 3, 4, 5, 6, 8, 9, 10, 11, 24], "row": [2, 29, 31], "line": [2, 3, 16], "someth": 2, "factorydef": 33, "full_respons": 33, "dataclass": 33, "top": 2, "old": 2, "third": 2, "17642547": 2, "0a4c": 2, "4897": 2, "a8da": 2, "2d495558b8fa": 2, "d40s8jq": 2, "discard": [2, 21, 31, 33], "pk": 2, "miss": 2, "made": 2, "timestamp_it": 2, "2002": 2, "els": [], "action": [], "fewer": [2, 31, 33], "probabilist": [], "howev": [3, 6, 8, 9, 13, 31, 33], "decid": [13, 33], "affect": [2, 13, 31, 33], "lazy_choic": [13, 33], "adopt": [13, 33], "or_nul": 13, "prob_regen": 2, "prob_discard": 2, "origin": [2, 31, 33], "complet": [2, 19, 31, 33], "less": [2, 6, 8, 31, 33], "gap": 2, "skip": [2, 13], "higher": [2, 3], "regex": [10, 24, 33], "char": 10, "0123456789abcdef": [3, 10], "cryptograph": 10, "secur": 10, "requir": 10, "token": 10, "authent": 10, "consid": 10, "secret": 10, "altern": 10, "alphabet": 10, "za": 10, "z0": 10, "rstr": [10, 24], "beforehand": [10, 24], "g": [10, 24], "review": [10, 24], "licens": [10, 24], "term": [4, 5, 10, 11, 24], "creation": [18, 24], "ascii_uppercas": 24, "19": 24, "consist": 24, "constant": 24, "own": 24, "az": 24, "z": 24, "re": 24, "fullmatch": 24, "_next": 13, "raise_on_factory_stop": [31, 33], "stop": [2, 31, 33], "factorystopexcept": [31, 33], "due": [2, 31, 33], "stopiter": [2, 31, 33], "error": [2, 3, 4, 5, 11], "occur": [2, 3], "environ": [0, 16], "One": 2, "idea": 2, "initial_id": [2, 16], "init_id": 2, "addit": [2, 19, 29], "env": [2, 3], "bash": [2, 3], "powershel": [2, 3], "var": [2, 3], "purpos": 3, "val": 3, "mention": 3, "effect": [], "encod": [3, 16], "linesep": [3, 16, 31, 33], "newlin": [3, 29], "utf": [3, 16], "le": 3, "utf_16_l": 3, "crlf": [3, 16], "now": [3, 5, 11], "replac": 3, "current": [3, 4, 5, 11], "empti": 3, "serial": 3, "def_fil": 3, "trail": 3, "repeat_count": 3, "factory_count": 3, "descript": [], "assign": 3, "home": 3, "log": [0, 6, 8, 9, 30, 33], "configur": [3, 21], "stderr": 3, "level": 3, "logging_config_path": 3, "yaml": 3, "adher": 3, "logger": [3, 21], "cmd": 21, "up": [3, 21, 33], "through": 3, "mechan": 3, "dure": 3, "overrid": 3, "disable_existing_logg": 3, "explicitli": 3, "displai": 3, "abnorm": 3, "hide": 3, "quiet": 3, "q": 3, "w": [3, 29], "spec": 3, "seem": 3, "incident": 3, "categori": 3, "produc": [3, 29], "randogcmdwarn": 3, "futurewarn": 32, "warned_too_long_custom_chain": 33, "set_warned_too_long_custom_chain": 33, "those": 3, "fact": 3, "pyyaml": 3, "write": [3, 16], "refer": [3, 22], "stream": 21, "howto": 21, "extens": 21, "plan": 21, "gradual": 21, "improv": 21, "handler": 21, "unexpect": 21, "select": 21, "api": 30, "intend": 16, "reus": 16, "create_factori": 16, "__name__": [2, 16], "__randog__": [2, 16], "avoid": [4, 5, 11, 16], "proper": 16, "situat": [16, 29], "discuss": 16, "better": 2, "implement": 2, "todai": 4, "simpl": [4, 5, 11], "plu": [4, 5, 11], "fulli": [4, 5, 11], "interpret": [4, 5, 11], "valid": [4, 5, 11], "invalid": [4, 5, 11, 33], "unknown": [4, 5, 11], "30m": [4, 5, 11], "yesterdai": [4, 5], "tomorrow": [4, 5], "ago": [4, 5, 11], "later": [4, 5, 11], "1h": [5, 11], "11": [11, 19], "33": 11, "12h": 11, "full": 3, "end": 3, "traceback": 3, "unlik": 3, "seed": 0, "control": 3, "though": 3, "version": 3, "document": 3, "reproduc": 3, "upgrad": 3, "debug": 3, "observ": 3, "easili": [13, 29], "post_process_item": [13, 33], "sir1w94": [13, 33], "convers": 13, "default_process": 33, "80": 1, "advantag": 1, "treat": 1, "mini": [1, 6, 8, 9, 10], "00000042": 9, "08": 9, "20e": 8, "98": 8, "2e": 8, "99999": 6, "99": 6, "2f": 8, "suitabl": 8, "zy7q": 10, "exp": [6, 8, 9], "10000": [6, 9], "fine": [6, 8, 9], "varieti": [6, 8, 9], "problemat": [6, 8, 9], "9999": 9, "word": [6, 8, 9], "major": [6, 8, 9], "give": [6, 8, 9], "smaller": [6, 8, 9], "precis": [6, 8, 9], "floor": [6, 8, 9], "log2": [8, 9], "binari": [6, 8, 9], "assum": [6, 8, 9], "47": 9, "event": [6, 8, 9], "portion": [6, 8, 9], "reduc": [6, 8, 9], "half": [6, 8, 9], "63": 9, "much": 9, "distribut": 33, "uniform": 33, "exp_uniform": 33, "500": [6, 8], "24": [8, 18], "25": 8, "125": 8, "smallest": 8, "power": 8, "1022": 8, "tend": 8, "small": 8, "absolut": 8, "still": [], "log10": 6, "55000": 6, "100000": 6, "indent": 3, "space": [3, 33], "tab": 3, "alreadi": 3, "truncat": 3, "destin": [3, 29, 31], "append": 3, "oa": 3, "kept": 3, "generate_to_csv": [29, 31], "line_num": 31, "fp": [29, 31], "textio": 31, "csv": [30, 31], "taken": [16, 31], "randogwarn": 32, "outsid": 29, "b": 29, "c": 29, "abcd": 29, "tips_json": [], "as_command": [], "sy": 29, "f1": 29, "f2": 29, "stdout": 29, "disadvantag": [], "countoutput": [], "created_bi": 29, "yyyymmdd": 29, "sniiz6ek": 29, "20240817": 29, "qe37x0kd": 29, "20241025": 29, "smwgorjo": 29, "20241202": 29, "open": 29, "output_linesep": [16, 33], "lf": 16, "output_encod": [16, 33], "utf8": 16, "_util": 33, "cr": 16, "dt": 19, "2020": 19, "amount": [], "iterrang": [19, 33], "cyclic": 33, "resume_from": [19, 33], "shift": 33, "emit": 33, "exce": 33, "restart": 33, "contradict": 33, "decreas": 19, "cycl": 19, "dice": [0, 33], "face": [7, 33], "2d6": [0, 7], "dice_rol": 7, "roll": 7, "sum": 7, "side": 7, "parse_dice_not": 33, "valueerror": 33, "ipaddress": [13, 18], "ipv4address": [13, 18, 33], "randipv4": [13, 18, 33], "ipv4": 13, "address": [13, 33], "ip_network": 18, "factory1": 18, "192": 18, "168": 18, "factory2": 18, "host": 18, "network": [18, 33], "ipv4network": 33, "ip": 33}, "objects": {"": [[31, 0, 0, "-", "randog"]], "randog": [[31, 1, 1, "", "DictItemExample"], [31, 1, 1, "", "Example"], [32, 0, 0, "-", "exceptions"], [33, 0, 0, "-", "factory"], [31, 6, 1, "", "generate_to_csv"], [34, 0, 0, "-", "sqlalchemy"]], "randog.DictItemExample": [[31, 2, 1, "", "example"], [31, 2, 1, "", "prop_exists"]], "randog.exceptions": [[32, 3, 1, "", "FactoryConstructionError"], [32, 3, 1, "", "RandogWarning"]], "randog.exceptions.FactoryConstructionError": [[32, 4, 1, "", "message"]], "randog.factory": [[33, 1, 1, "", "DictItem"], [33, 1, 1, "", "Factory"], [33, 1, 1, "", "FactoryDef"], [33, 3, 1, "", "FactoryStopException"], [33, 1, 1, "", "FromExampleContext"], [33, 6, 1, "", "by_callable"], [33, 6, 1, "", "by_iterator"], [33, 6, 1, "", "const"], [33, 6, 1, "", "dice"], [33, 6, 1, "", "from_example"], [33, 6, 1, "", "from_pyfile"], [33, 6, 1, "", "increment"], [33, 6, 1, "", "iterrange"], [33, 6, 1, "", "parse_dice_notation"], [33, 6, 1, "", "randbool"], [33, 6, 1, "", "randchoice"], [33, 6, 1, "", "randdate"], [33, 6, 1, "", "randdatetime"], [33, 6, 1, "", "randdecimal"], [33, 6, 1, "", "randdict"], [33, 6, 1, "", "randenum"], [33, 6, 1, "", "randfloat"], [33, 6, 1, "", "randint"], [33, 6, 1, "", "randipv4"], [33, 6, 1, "", "randlist"], [33, 6, 1, "", "randstr"], [33, 6, 1, "", "randtime"], [33, 6, 1, "", "randtimedelta"], [33, 6, 1, "", "union"]], "randog.factory.DictItem": [[33, 2, 1, "", "factory"], [33, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[33, 5, 1, "", "infinity_iter"], [33, 5, 1, "", "iter"], [33, 5, 1, "", "next"], [33, 5, 1, "", "or_none"], [33, 5, 1, "", "post_process"], [33, 5, 1, "", "post_process_items"]], "randog.factory.FactoryDef": [[33, 2, 1, "", "csv_columns"], [33, 2, 1, "", "factory"], [33, 2, 1, "", "output_encoding"], [33, 2, 1, "", "output_linesep"]], "randog.factory.FromExampleContext": [[33, 4, 1, "", "current_example"], [33, 4, 1, "", "custom_chain_length"], [33, 4, 1, "", "custom_funcs"], [33, 4, 1, "", "examples"], [33, 5, 1, "", "from_example"], [33, 4, 1, "", "path"], [33, 5, 1, "", "recursive"], [33, 4, 1, "", "rnd"], [33, 5, 1, "", "set_warned_too_long_custom_chain"], [33, 4, 1, "", "signal_terminate_custom"], [33, 5, 1, "", "terminate_custom_chain"], [33, 4, 1, "", "warned_too_long_custom_chain"]], "randog.sqlalchemy": [[34, 6, 1, "", "custom"], [34, 6, 1, "", "factory"], [34, 6, 1, "", "factory_from_column"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 13, "factori": [13, 14, 15, 16, 17, 18, 20, 23, 24, 26, 28, 33], "gener": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 23, 29, 30], "random": [13, 27, 30], "valu": [13, 19, 29], "element": [13, 20], "type": [13, 19, 23, 27], "nullabl": 13, "union": 13, "randomli": [13, 26], "choic": 13, "constanc": 13, "process": 13, "output": [2, 3, 13, 29], "custom": 13, "detail": [0, 13], "how": 13, "build": 13, "individu": [13, 23], "dict": [14, 23], "randdict": 14, "from_exampl": [14, 15, 20, 23], "list": 20, "each": 20, "length": [20, 24], "tupl": 20, "quick": 22, "start": 22, "instal": 22, "minim": 22, "us": [22, 28], "tip": 25, "usag": 25, "creat": 26, "json": [26, 29], "decim": [6, 26], "e": 26, "t": 26, "c": 26, "string": 26, "timelin": 27, "data": 27, "depend": 27, "previou": 27, "chang": [2, 27], "smpl_datetim": 27, "str": [10, 24, 27], "As": [28, 29], "iter": [3, 19, 28], "obj": 30, "content": [30, 31], "indic": 30, "tabl": 30, "randog": [23, 31, 32, 33, 34], "packag": [31, 32, 33, 34], "subpackag": 31, "submodul": 31, "modul": 31, "except": 32, "run": 0, "command": [0, 22], "format": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12], "file": [3, 16], "extern": 16, "definit": 16, "enum": 15, "randenum": 15, "special": 13, "increment": 17, "integ": 17, "from": 23, "sqlalchemi": [23, 34], "support": 23, "column": 23, "limit": 23, "model": [], "instanc": 23, "some": [], "field": 23, "specifi": [18, 23, 24], "mode": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "argument": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "byfil": 2, "common": 3, "bool": 1, "exampl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "int": 9, "float": 8, "datetim": 5, "date": 4, "time": 11, "timedelta": 12, "simpl": [12, 18, 24], "code": 12, "csv": [2, 29], "charact": 24, "set": 24, "regular": 24, "express": [4, 5, 11, 24], "behavior": 2, "pattern": 2, "environ": [2, 3], "variabl": [2, 3], "modifi": 3, "log": [3, 21], "warn": 3, "api": 21, "import": 16, "minimum": [4, 5, 11], "maximum": [4, 5, 11], "seed": 3, "lowercas": 1, "repeatedli": [1, 4, 5, 6, 7, 8, 9, 11, 12], "infin": [6, 8], "nan": [6, 8], "numer": 1, "0": 9, "pad": 9, "etc": [4, 5, 6, 8, 9, 10, 11, 12], "signific": 8, "digit": [6, 8, 9], "thousand": 6, "separ": 6, "align": 10, "iso": [4, 5, 11, 12], "8601": [4, 5, 11, 12], "probabl": [6, 8, 9], "distribut": [6, 8, 9], "uniform": [6, 8, 9], "itertool": [], "countoutput": [], "attribut": 16, "rang": 19, "step": 19, "cyclic": 19, "program": 22, "dice": 7, "ipv4": 18, "address": 18, "network": [], "space": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Run as Command": [[0, "run-as-command"]], "Modes": [[0, "modes"]], "Arguments and Options": [[0, "arguments-and-options"], [1, "arguments-and-options"], [2, "arguments-and-options"], [4, "arguments-and-options"], [5, "arguments-and-options"], [6, "arguments-and-options"], [7, "arguments-and-options"], [8, "arguments-and-options"], [9, "arguments-and-options"], [10, "arguments-and-options"], [11, "arguments-and-options"], [12, "arguments-and-options"]], "Details of Modes": [[0, "details-of-modes"]], "bool Mode": [[1, "bool-mode"]], "Examples": [[1, "examples"], [2, "examples"], [4, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"]], "Format: Lowercase or Numeric": [[1, "format-lowercase-or-numeric"]], "Repeatedly Generate": [[1, "repeatedly-generate"], [4, "repeatedly-generate"], [5, "repeatedly-generate"], [6, "repeatedly-generate"], [7, "repeatedly-generate"], [8, "repeatedly-generate"], [9, "repeatedly-generate"], [11, "repeatedly-generate"], [12, "repeatedly-generate"]], "byfile Mode": [[2, "byfile-mode"]], "output as CSV": [[2, "output-as-csv"]], "Change behavior patterns by environment variables": [[2, "change-behavior-patterns-by-environment-variables"]], "Common Options": [[3, "common-options"]], "Output format": [[3, "output-format"]], "Output to file": [[3, "output-to-file"]], "Iteration": [[3, "iteration"]], "Seed": [[3, "seed"]], "Modify environment variable": [[3, "modify-environment-variable"]], "Logging": [[3, "logging"], [21, "logging"]], "Warning": [[3, "warning"]], "date Mode": [[4, "date-mode"]], "Expression of MINIMUM and MAXIMUM": [[4, "expression-of-minimum-and-maximum"], [5, "expression-of-minimum-and-maximum"], [11, "expression-of-minimum-and-maximum"]], "Format: ISO-8601, etc.": [[4, "format-iso-8601-etc"], [5, "format-iso-8601-etc"], [11, "format-iso-8601-etc"], [12, "format-iso-8601-etc"]], "datetime Mode": [[5, "datetime-mode"]], "decimal Mode": [[6, "decimal-mode"]], "Infinity and NaN": [[6, "infinity-and-nan"], [8, "infinity-and-nan"]], "Format: Thousands Separator, etc.": [[6, "format-thousands-separator-etc"]], "Probability Distribution; uniform distribution of digits": [[6, "probability-distribution-uniform-distribution-of-digits"], [8, "probability-distribution-uniform-distribution-of-digits"], [9, "probability-distribution-uniform-distribution-of-digits"]], "dice Mode": [[7, "dice-mode"]], "float Mode": [[8, "float-mode"]], "Format: Significant Digits, etc.": [[8, "format-significant-digits-etc"]], "int Mode": [[9, "int-mode"]], "Format: 0-padding, etc.": [[9, "format-0-padding-etc"]], "str Mode": [[10, "str-mode"]], "Format: align, etc.": [[10, "format-align-etc"]], "time Mode": [[11, "time-mode"]], "timedelta Mode": [[12, "timedelta-mode"]], "Simple Format": [[12, "simple-format"]], "Format codes": [[12, "format-codes"]], "Construct Factories (generator of random values)": [[13, "construct-factories-generator-of-random-values"]], "Elemental types": [[13, "elemental-types"]], "Nullable": [[13, "nullable"]], "Union type": [[13, "union-type"]], "Randomly choice": [[13, "randomly-choice"]], "Constance": [[13, "constance"]], "Processing output": [[13, "processing-output"]], "Custom Factory": [[13, "custom-factory"]], "Details on how to build individual factories": [[13, "details-on-how-to-build-individual-factories"]], "Special Factory": [[13, "special-factory"]], "Dict factory": [[14, "dict-factory"]], "Factory by randdict": [[14, "factory-by-randdict"]], "Factory by from_example": [[14, "factory-by-from-example"], [15, "factory-by-from-example"], [20, "factory-by-from-example"], [23, "factory-by-from-example"]], "Enum factory": [[15, "enum-factory"]], "Factory by randenum": [[15, "factory-by-randenum"]], "External File Definition of Factory": [[16, "external-file-definition-of-factory"]], "Attributes": [[16, "attributes"]], "Importable definition files": [[16, "importable-definition-files"]], "Incremental integer factory": [[17, "incremental-integer-factory"]], "IPv4 address factory": [[18, "ipv4-address-factory"]], "Simple factory": [[18, "simple-factory"], [24, "simple-factory"]], "Specify the address space": [[18, "specify-the-address-space"]], "Iteration of range": [[19, "iteration-of-range"]], "Step": [[19, "step"]], "Cyclic": [[19, "cyclic"]], "Types of values": [[19, "types-of-values"]], "List factory": [[20, "list-factory"]], "Each elements": [[20, "each-elements"]], "Length": [[20, "length"]], "Generate tuple": [[20, "generate-tuple"]], "API": [[21, "api"]], "Quick start": [[22, "quick-start"]], "Installation": [[22, "installation"]], "Minimal use (as command)": [[22, "minimal-use-as-command"]], "Minimal use (in programs)": [[22, "minimal-use-in-programs"]], "Factory from sqlalchemy": [[23, "factory-from-sqlalchemy"]], "Factory by randog.sqlalchemy.factory": [[23, "factory-by-randog-sqlalchemy-factory"]], "Supported column type": [[23, "supported-column-type"]], "Limitations": [[23, "limitations"]], "Specify factories for individual fields": [[23, "specify-factories-for-individual-fields"]], "Generate a dict instance": [[23, "generate-a-dict-instance"]], "Str factory": [[24, "str-factory"]], "Specify the length or/and character set": [[24, "specify-the-length-or-and-character-set"]], "Specify a regular expression": [[24, "specify-a-regular-expression"]], "Tips (Usage)": [[25, "tips-usage"]], "Create JSON randomly": [[26, "create-json-randomly"]], "Decimal e.t.c.": [[26, "decimal-e-t-c"]], "Factory of JSON string": [[26, "factory-of-json-string"]], "Random timeline data \u2013 depends on previous data": [[27, "random-timeline-data-depends-on-previous-data"]], "Change the type of smpl_datetime to str": [[27, "change-the-type-of-smpl-datetime-to-str"]], "Use Factories": [[28, "use-factories"]], "As iterator": [[28, "as-iterator"]], "Output Generated Values": [[29, "output-generated-values"]], "As JSON": [[29, "as-json"]], "As CSV": [[29, "as-csv"]], "random-obj-generator": [[30, "random-obj-generator"]], "Contents:": [[30, null]], "Indices and tables": [[30, "indices-and-tables"]], "randog package": [[31, "randog-package"]], "Subpackages and submodules": [[31, "subpackages-and-submodules"]], "Module contents": [[31, "module-randog"]], "randog.exceptions package": [[32, "module-randog.exceptions"]], "randog.factory package": [[33, "module-randog.factory"]], "randog.sqlalchemy package": [[34, "module-randog.sqlalchemy"]]}, "indexentries": {"dictitemexample (class in randog)": [[31, "randog.DictItemExample"]], "example (class in randog)": [[31, "randog.Example"]], "example (randog.dictitemexample attribute)": [[31, "randog.DictItemExample.example"]], "generate_to_csv() (in module randog)": [[31, "randog.generate_to_csv"]], "module": [[31, "module-randog"], [32, "module-randog.exceptions"], [33, "module-randog.factory"], [34, "module-randog.sqlalchemy"]], "prop_exists (randog.dictitemexample attribute)": [[31, "randog.DictItemExample.prop_exists"]], "randog": [[31, "module-randog"]], "factoryconstructionerror": [[32, "randog.exceptions.FactoryConstructionError"]], "randogwarning": [[32, "randog.exceptions.RandogWarning"]], "message (randog.exceptions.factoryconstructionerror property)": [[32, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[32, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[33, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[33, "randog.factory.Factory"]], "factorydef (class in randog.factory)": [[33, "randog.factory.FactoryDef"]], "factorystopexception": [[33, "randog.factory.FactoryStopException"]], "fromexamplecontext (class in randog.factory)": [[33, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[33, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[33, "randog.factory.by_iterator"]], "const() (in module randog.factory)": [[33, "randog.factory.const"]], "csv_columns (randog.factory.factorydef attribute)": [[33, "randog.factory.FactoryDef.csv_columns"]], "current_example (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.current_example"]], "custom_chain_length (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.custom_chain_length"]], "custom_funcs (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.custom_funcs"]], "dice() (in module randog.factory)": [[33, "randog.factory.dice"]], "examples (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[33, "randog.factory.DictItem.factory"]], "factory (randog.factory.factorydef attribute)": [[33, "randog.factory.FactoryDef.factory"]], "from_example() (in module randog.factory)": [[33, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[33, "randog.factory.FromExampleContext.from_example"]], "from_pyfile() (in module randog.factory)": [[33, "randog.factory.from_pyfile"]], "increment() (in module randog.factory)": [[33, "randog.factory.increment"]], "infinity_iter() (randog.factory.factory method)": [[33, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[33, "randog.factory.Factory.iter"]], "iterrange() (in module randog.factory)": [[33, "randog.factory.iterrange"]], "next() (randog.factory.factory method)": [[33, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[33, "randog.factory.Factory.or_none"]], "output_encoding (randog.factory.factorydef attribute)": [[33, "randog.factory.FactoryDef.output_encoding"]], "output_linesep (randog.factory.factorydef attribute)": [[33, "randog.factory.FactoryDef.output_linesep"]], "parse_dice_notation() (in module randog.factory)": [[33, "randog.factory.parse_dice_notation"]], "path (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[33, "randog.factory.Factory.post_process"]], "post_process_items() (randog.factory.factory method)": [[33, "randog.factory.Factory.post_process_items"]], "prop_exists (randog.factory.dictitem attribute)": [[33, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[33, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[33, "randog.factory.randchoice"]], "randdate() (in module randog.factory)": [[33, "randog.factory.randdate"]], "randdatetime() (in module randog.factory)": [[33, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[33, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[33, "randog.factory.randdict"]], "randenum() (in module randog.factory)": [[33, "randog.factory.randenum"]], "randfloat() (in module randog.factory)": [[33, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[33, "randog.factory.randint"]], "randipv4() (in module randog.factory)": [[33, "randog.factory.randipv4"]], "randlist() (in module randog.factory)": [[33, "randog.factory.randlist"]], "randog.factory": [[33, "module-randog.factory"]], "randstr() (in module randog.factory)": [[33, "randog.factory.randstr"]], "randtime() (in module randog.factory)": [[33, "randog.factory.randtime"]], "randtimedelta() (in module randog.factory)": [[33, "randog.factory.randtimedelta"]], "recursive() (randog.factory.fromexamplecontext method)": [[33, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.rnd"]], "set_warned_too_long_custom_chain() (randog.factory.fromexamplecontext method)": [[33, "randog.factory.FromExampleContext.set_warned_too_long_custom_chain"]], "signal_terminate_custom (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.signal_terminate_custom"]], "terminate_custom_chain() (randog.factory.fromexamplecontext method)": [[33, "randog.factory.FromExampleContext.terminate_custom_chain"]], "union() (in module randog.factory)": [[33, "randog.factory.union"]], "warned_too_long_custom_chain (randog.factory.fromexamplecontext property)": [[33, "randog.factory.FromExampleContext.warned_too_long_custom_chain"]], "custom() (in module randog.sqlalchemy)": [[34, "randog.sqlalchemy.custom"]], "factory() (in module randog.sqlalchemy)": [[34, "randog.sqlalchemy.factory"]], "factory_from_column() (in module randog.sqlalchemy)": [[34, "randog.sqlalchemy.factory_from_column"]], "randog.sqlalchemy": [[34, "module-randog.sqlalchemy"]]}})