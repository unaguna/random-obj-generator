str Mode
========

In str mode, string values are generated. The format of the command is as follows:

.. code-block:: shell

    randog str [--length LENGTH] [--charset CHARSET] [--fmt FORMAT] [common-options]

    randog str [--regex REGEX] [--fmt FORMAT] [common-options]

.. warning::
    This string generation is not guaranteed to be cryptographically secure.
    In cases where there are security requirements, such as the generation of tokens for authentication, consider using `secrets <https://docs.python.org/3/library/secrets.html>`_ module or similar.


Arguments and Options
---------------------

- :code:`--length LENGTH` (optional):

    - the length of generated strings. You can specify an integer such as :code:`--length 5` or a range such as :code:`--length 3:8`.

- :code:`--charset CHARSET` (optional):

    - the characters which contained by generated strings.

- :code:`--regex REGEX` (optional):

    - the regular expression for generated string. It cannot be used with :code:`--length` or :code:`--charset`.

- :code:`--fmt FORMAT` (optional):

    - the output format written in `format specification mini-language <https://docs.python.org/3/library/string.html?highlight=string#format-specification-mini-language>`_

- :code:`common-options`

    - :doc:`common options <doc.as_command.common_option>`


Examples
--------

The simplest example is the following:

.. code-block:: shell

    randog str

You can specify the length or/and characters as follows:

.. code-block:: shell

    # generate a string of length 16
    randog str --length 16

    # generate a string of length 8 - 16, which uses chars "0123456789abcdef"
    randog str --length 8:16 --charset 0123456789abcdef

.. warning::
    This string generation is not guaranteed to be cryptographically secure.
    In cases where there are security requirements, such as the generation of tokens for authentication, consider using `secrets <https://docs.python.org/3/library/secrets.html>`_ module or similar.

Alternatively, you can specify a string to be generated by a regular expression.

.. code-block:: shell

    # generate a string of length 10 - 20, which uses numeric chars and alphabets
    randog str --regex '[a-zA-Z0-9]{10,20}'

.. note::
    To generate strings using regular expressions, use the `rstr <https://pypi.org/project/rstr/>`_ package, which must be installed beforehand, e.g., by :code:`pip install rstr`.

.. warning::
    To generate strings using regular expressions, use the `rstr <https://pypi.org/project/rstr/>`_ package.
    If you use it, please review and follow the license terms of rstr.


Format: align, etc.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The output format can be specified in `format specification mini-language <https://docs.python.org/3/library/string.html?highlight=string#format-specification-mini-language>`_ as follows:

.. code-block:: shell

    # output string such as '      zy7q'
    randog str --length 4 --fmt '>10'
