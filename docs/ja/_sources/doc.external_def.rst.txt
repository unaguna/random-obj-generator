External File Definition of Factory
===================================

In most generation of factories described so far, the definition of factory was directly described in the python file executed, but factories can also be generated by describing them in an external file and loading that file at runtime.

The external definition file is written as follows, in python code, so that the generated factory is bound to the variable :code:`FACTORY`.

.. code-block:: python

    import uuid

    FACTORY = randog.factory.from_example({
        "uuid": uuid.uuid4,
        "name": "",
        "age": 20,
    })

    # (optional) Settings used by 'byfile' mode of command executing
    CSV_COLUMNS = ["uuid", "name", "age"]

.. note::
    In factory definition file, :code:`import randog` can be omitted.

.. note::
    :code:`CSV_COLUMNS` is used when executing randog as command in byfile mode. See also :doc:`doc.as_command.byfile`.

If you save this file under the name :code:`factory_def.py`, you can use it in your python code as follows:

.. code-block:: python

    import randog.factory

    # load factory definition
    factory = randog.factory.from_pyfile("./factory_def.py")

    generated = factory.next()
    assert isinstance(generated["name"], str)

.. seealso::
    The definition file can also be used when executing randog as command in byfile mode such as :code:`python -m randog byfile ./factory_def.py`. See also :doc:`doc.as_command.byfile`.
