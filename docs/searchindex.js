Search.setIndex({"docnames": ["doc.construct_factories", "doc.dict_factory", "doc.quickstart", "doc.use_factories", "index", "randog", "randog.exceptions", "randog.factory"], "filenames": ["doc.construct_factories.rst", "doc.dict_factory.rst", "doc.quickstart.rst", "doc.use_factories.rst", "index.rst", "randog.rst", "randog.exceptions.rst", "randog.factory.rst"], "titles": ["Construct Factories (generator of random values)", "Dict factory", "Quick start", "Use Factories", "random-obj-generator", "randog package", "randog.exceptions package", "randog.factory package"], "terms": {"In": 0, "randog": [0, 1, 2, 3, 4], "i": [0, 1, 3, 4, 7], "an": [0, 1, 2, 3, 7], "object": [0, 1, 2, 5, 7], "The": [0, 1, 3, 7], "rule": [0, 7], "ar": [0, 1, 3, 7], "specifi": [0, 7], "when": [0, 7], "creat": [0, 1, 2, 3, 7], "If": [0, 1, 7], "you": [0, 1, 2, 7], "do": [0, 7], "care": [0, 3], "about": 0, "condit": [0, 7], "other": [0, 1, 7], "than": 0, "can": [0, 1, 2, 3, 7], "simpli": 0, "suppli": 0, "exampl": [0, 1, 2, 5, 7], "from_exampl": [0, 2, 7], "want": [0, 2], "us": [0, 1, 4, 7], "constructor": 0, "correspond": [0, 7], "import": [0, 1, 2, 3, 7], "factory_a": 0, "generated_a": 0, "next": [0, 1, 2, 3, 7], "assert": [0, 1, 2, 3, 7], "isinst": [0, 1, 2, 3, 7], "str": [0, 1, 2, 3, 6, 7], "factory_b": 0, "randstr": [0, 1, 3, 7], "length": [0, 1, 3, 7], "16": [0, 1], "generated_b": 0, "len": [0, 3, 7], "follow": [0, 2, 3], "argument": [0, 1, 7], "nonetyp": 0, "There": [0, 3], "dedic": 0, "function": [0, 1, 2, 7], "const": [0, 7], "instead": [0, 1], "none": [0, 7], "bool": [0, 7], "randbool": [0, 7], "true": [0, 7], "fals": [0, 7], "int": [0, 1, 2, 7], "randint": [0, 1, 7], "integ": 0, "float": [0, 5, 7], "randfloat": [0, 7], "string": [0, 7], "list": [0, 2, 3, 7], "randlist": [0, 7], "tupl": [0, 7], "dict": [0, 2, 7], "randdict": [0, 7], "decim": [0, 7], "randdecim": [0, 7], "datetim": [0, 7], "randdatetim": [0, 7], "candid": 0, "or_non": [0, 7], "factory_nul": 0, "0": [0, 1, 3, 5, 7], "1": [0, 3, 5, 7], "get": 0, "alwai": [0, 1], "return": [0, 1, 3, 7], "sever": 0, "method": [0, 3], "determin": 0, "from": [0, 1], "multipl": 0, "make": 0, "e": 0, "so": [0, 7], "boolean": 0, "_": 0, "rang": 0, "10": [0, 3, 7], "which": [0, 4, 7], "choos": [0, 7], "either": [0, 1], "each": [0, 1, 3, 7], "time": [0, 1, 3, 7], "result": [0, 7], "chosen": 0, "one": [0, 7], "specif": [0, 7], "randchoic": [0, 1, 7], "allow": [0, 7], "deni": 0, "same": 0, "python": [0, 2], "predefin": 0, "thi": [0, 1, 2, 3, 7], "chang": [0, 7], "post_process": [0, 7], "format": [0, 7], "50000": [0, 7], "decimal_len": [0, 7], "2": [0, 7], "lambda": [0, 7], "x": [0, 7], "f": [0, 1, 7], "12": [0, 7], "345": [0, 7], "67": [0, 7], "3": [0, 2, 7], "153": [0, 7], "21": [0, 7], "90": [0, 7], "etc": [0, 2, 7], "provid": 0, "also": [0, 1, 2, 3, 7], "context": [0, 7], "iter": [0, 4, 7], "includ": 0, "normal": [0, 7], "would": [0, 1], "think": 0, "could": 0, "just": [0, 2, 3], "directli": [0, 7], "need": 0, "itertool": 0, "uuid": [0, 2], "defin": 0, "class": [0, 5, 7], "mailaddressfactori": 0, "def": 0, "self": 0, "com": 0, "http": 0, "doc": 0, "org": 0, "librari": 0, "html": 0, "count": 0, "id": 0, "uuid4": [0, 2], "name": [0, 1, 2], "mail": 0, "set": 0, "endswith": 0, "by_cal": [0, 7], "by_iter": [0, 7], "gener": [1, 2, 3, 7], "element": [1, 4, 7], "randomli": [1, 2, 4, 7], "like": [1, 7], "ani": [1, 5, 7], "built": 1, "two": 1, "wai": [1, 3], "code": [1, 3], "look": 1, "dictitem": [1, 7], "sex": 1, "m": 1, "ag": [1, 2], "kei": [1, 3, 7], "exist": 1, "random": [1, 3, 7], "100": 1, "9": 1, "As": [1, 4], "pass": [1, 2, 7], "valu": [1, 3, 4, 7], "keyword": [1, 7], "By": [1, 2], "possibl": 1, "whether": 1, "dictionari": 1, "abov": 1, "see": 1, "here": 1, "how": [1, 4], "build": [1, 4], "dictitemexampl": [1, 5], "smith": 1, "22": 1, "Not": 1, "limit": 1, "given": 1, "output": [1, 4], "similar": 1, "its": [1, 3, 7], "Or": 1, "wrap": 1, "try": 2, "step": 2, "prepar": 2, "8": [2, 7], "newer": 2, "pip": 2, "command": 2, "factori": [2, 4, 5], "20": 2, "onc": 3, "128": 3, "generated1": 3, "generated2": 3, "note": 3, "low": 3, "probabl": [3, 7], "thei": 3, "mai": [3, 7], "ident": 3, "usual": 3, "sugar": 3, "coat": 3, "syntax": 3, "although": 3, "itself": 3, "cnt": 3, "generated_valu": 3, "5": [3, 7], "dispos": 3, "must": [3, 7], "regener": 3, "infinity_it": [3, 7], "termin": 3, "foo": [3, 7], "bar": [3, 7], "k": [3, 7], "v": [3, 7], "zip": [3, 7], "warn": 3, "run": 3, "below": 3, "continu": 3, "indefinit": 3, "caus": 3, "infinit": 3, "loop": 3, "handl": 3, "packag": 4, "help": 4, "data": 4, "quick": 4, "start": 4, "instal": 4, "minim": 4, "construct": [4, 7], "type": [4, 7], "nullabl": 4, "union": [4, 7], "choic": 4, "constanc": 4, "process": [4, 7], "custom": [4, 7], "detail": 4, "individu": 4, "subpackag": 4, "submodul": 4, "modul": 4, "index": 4, "except": 5, "prop_exist": [5, 7], "base": [5, 6, 7], "obj": 5, "sequenc": [5, 7], "factoryconstructionerror": [6, 7], "messag": 6, "properti": [6, 7], "item": 7, "A": 7, "arg": 7, "kwd": 7, "abc": 7, "t": 7, "infin": 7, "serv": 7, "NOT": 7, "size": 7, "paramet": 7, "number": 7, "abstract": 7, "accord": 7, "assembl": 7, "prob": 7, "rnd": 7, "whose": 7, "default": 7, "option": 7, "callabl": 7, "r": 7, "modifi": 7, "map": 7, "fromexamplecontext": 7, "path": 7, "custom_func": 7, "_customfunc": 7, "example_is_custom": 7, "examples_stack": 7, "child": 7, "current_exampl": 7, "recurs": 7, "classmethod": 7, "root": 7, "func": 7, "It": 7, "accept": 7, "match": 7, "execut": 7, "first": 7, "new": 7, "recommend": 7, "receiv": 7, "kwarg": 7, "more": 7, "futur": 7, "updat": 7, "should": 7, "take": 7, "preced": 7, "over": 7, "rais": 7, "support": 7, "prop_tru": 7, "inconsist": 7, "weight": 7, "chose": 7, "equal": 7, "No": 7, "minimum": 7, "date": 7, "maximum": 7, "tzinfo": 7, "liter": 7, "fix": 7, "mean": 7, "awar": 7, "correct": 7, "otherwis": 7, "onli": 7, "supportsfloat": 7, "p_inf": 7, "n_inf": 7, "nan": 7, "part": 7, "posit": 7, "neg": 7, "items_dict": 7, "hashabl": 7, "ignor": 7, "cannot": 7, "_base": 7, "_list": 7, "items_list": 7, "charset": 7, "charact": 7}, "objects": {"": [[5, 0, 0, "-", "randog"]], "randog": [[5, 1, 1, "", "DictItemExample"], [5, 1, 1, "", "Example"], [6, 0, 0, "-", "exceptions"], [7, 0, 0, "-", "factory"]], "randog.DictItemExample": [[5, 2, 1, "", "example"], [5, 2, 1, "", "prop_exists"]], "randog.exceptions": [[6, 3, 1, "", "FactoryConstructionError"]], "randog.exceptions.FactoryConstructionError": [[6, 4, 1, "", "message"]], "randog.factory": [[7, 1, 1, "", "DictItem"], [7, 1, 1, "", "Factory"], [7, 1, 1, "", "FromExampleContext"], [7, 6, 1, "", "by_callable"], [7, 6, 1, "", "by_iterator"], [7, 6, 1, "", "const"], [7, 6, 1, "", "from_example"], [7, 6, 1, "", "randbool"], [7, 6, 1, "", "randchoice"], [7, 6, 1, "", "randdatetime"], [7, 6, 1, "", "randdecimal"], [7, 6, 1, "", "randdict"], [7, 6, 1, "", "randfloat"], [7, 6, 1, "", "randint"], [7, 6, 1, "", "randlist"], [7, 6, 1, "", "randstr"], [7, 6, 1, "", "union"]], "randog.factory.DictItem": [[7, 2, 1, "", "factory"], [7, 2, 1, "", "prop_exists"]], "randog.factory.Factory": [[7, 5, 1, "", "infinity_iter"], [7, 5, 1, "", "iter"], [7, 5, 1, "", "next"], [7, 5, 1, "", "or_none"], [7, 5, 1, "", "post_process"]], "randog.factory.FromExampleContext": [[7, 5, 1, "", "child"], [7, 4, 1, "", "current_example"], [7, 4, 1, "", "custom_func"], [7, 5, 1, "", "customized"], [7, 4, 1, "", "example_is_customized"], [7, 4, 1, "", "examples"], [7, 5, 1, "", "from_example"], [7, 4, 1, "", "path"], [7, 5, 1, "", "recursive"], [7, 4, 1, "", "rnd"], [7, 5, 1, "", "root"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:exception", "4": "py:property", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"construct": 0, "factori": [0, 1, 3, 7], "gener": [0, 4], "random": [0, 4], "valu": 0, "element": 0, "type": 0, "nullabl": 0, "union": 0, "randomli": 0, "choic": 0, "constanc": 0, "process": 0, "output": 0, "custom": 0, "detail": 0, "how": 0, "build": 0, "individu": 0, "dict": 1, "randdict": 1, "from_exampl": 1, "quick": 2, "start": 2, "instal": 2, "minim": 2, "us": [2, 3], "As": 3, "iter": 3, "obj": 4, "content": [4, 5], "indic": 4, "tabl": 4, "randog": [5, 6, 7], "packag": [5, 6, 7], "subpackag": 5, "submodul": 5, "modul": 5, "except": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Construct Factories (generator of random values)": [[0, "construct-factories-generator-of-random-values"]], "Elemental types": [[0, "elemental-types"]], "Nullable": [[0, "nullable"]], "Union type": [[0, "union-type"]], "Randomly choice": [[0, "randomly-choice"]], "Constance": [[0, "constance"]], "Processing output": [[0, "processing-output"]], "Custom Factory": [[0, "custom-factory"]], "Details on how to build individual factories": [[0, "details-on-how-to-build-individual-factories"]], "Dict factory": [[1, "dict-factory"]], "Factory by randdict": [[1, "factory-by-randdict"]], "Factory by from_example": [[1, "factory-by-from-example"]], "Quick start": [[2, "quick-start"]], "Installation": [[2, "installation"]], "Minimal use": [[2, "minimal-use"]], "Use Factories": [[3, "use-factories"]], "As iterator": [[3, "as-iterator"]], "random-obj-generator": [[4, "random-obj-generator"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "randog package": [[5, "randog-package"]], "Subpackages and submodules": [[5, "subpackages-and-submodules"]], "Module contents": [[5, "module-randog"]], "randog.exceptions package": [[6, "module-randog.exceptions"]], "randog.factory package": [[7, "module-randog.factory"]]}, "indexentries": {"dictitemexample (class in randog)": [[5, "randog.DictItemExample"]], "example (class in randog)": [[5, "randog.Example"]], "example (randog.dictitemexample attribute)": [[5, "randog.DictItemExample.example"]], "module": [[5, "module-randog"], [6, "module-randog.exceptions"], [7, "module-randog.factory"]], "prop_exists (randog.dictitemexample attribute)": [[5, "randog.DictItemExample.prop_exists"]], "randog": [[5, "module-randog"]], "factoryconstructionerror": [[6, "randog.exceptions.FactoryConstructionError"]], "message (randog.exceptions.factoryconstructionerror property)": [[6, "randog.exceptions.FactoryConstructionError.message"]], "randog.exceptions": [[6, "module-randog.exceptions"]], "dictitem (class in randog.factory)": [[7, "randog.factory.DictItem"]], "factory (class in randog.factory)": [[7, "randog.factory.Factory"]], "fromexamplecontext (class in randog.factory)": [[7, "randog.factory.FromExampleContext"]], "by_callable() (in module randog.factory)": [[7, "randog.factory.by_callable"]], "by_iterator() (in module randog.factory)": [[7, "randog.factory.by_iterator"]], "child() (randog.factory.fromexamplecontext method)": [[7, "randog.factory.FromExampleContext.child"]], "const() (in module randog.factory)": [[7, "randog.factory.const"]], "current_example (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.current_example"]], "custom_func (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.custom_func"]], "customized() (randog.factory.fromexamplecontext method)": [[7, "randog.factory.FromExampleContext.customized"]], "example_is_customized (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.example_is_customized"]], "examples (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.examples"]], "factory (randog.factory.dictitem attribute)": [[7, "randog.factory.DictItem.factory"]], "from_example() (in module randog.factory)": [[7, "randog.factory.from_example"]], "from_example() (randog.factory.fromexamplecontext method)": [[7, "randog.factory.FromExampleContext.from_example"]], "infinity_iter() (randog.factory.factory method)": [[7, "randog.factory.Factory.infinity_iter"]], "iter() (randog.factory.factory method)": [[7, "randog.factory.Factory.iter"]], "next() (randog.factory.factory method)": [[7, "randog.factory.Factory.next"]], "or_none() (randog.factory.factory method)": [[7, "randog.factory.Factory.or_none"]], "path (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.path"]], "post_process() (randog.factory.factory method)": [[7, "randog.factory.Factory.post_process"]], "prop_exists (randog.factory.dictitem attribute)": [[7, "randog.factory.DictItem.prop_exists"]], "randbool() (in module randog.factory)": [[7, "randog.factory.randbool"]], "randchoice() (in module randog.factory)": [[7, "randog.factory.randchoice"]], "randdatetime() (in module randog.factory)": [[7, "randog.factory.randdatetime"]], "randdecimal() (in module randog.factory)": [[7, "randog.factory.randdecimal"]], "randdict() (in module randog.factory)": [[7, "randog.factory.randdict"]], "randfloat() (in module randog.factory)": [[7, "randog.factory.randfloat"]], "randint() (in module randog.factory)": [[7, "randog.factory.randint"]], "randlist() (in module randog.factory)": [[7, "randog.factory.randlist"]], "randog.factory": [[7, "module-randog.factory"]], "randstr() (in module randog.factory)": [[7, "randog.factory.randstr"]], "recursive() (randog.factory.fromexamplecontext method)": [[7, "randog.factory.FromExampleContext.recursive"]], "rnd (randog.factory.fromexamplecontext property)": [[7, "randog.factory.FromExampleContext.rnd"]], "root() (randog.factory.fromexamplecontext class method)": [[7, "randog.factory.FromExampleContext.root"]], "union() (in module randog.factory)": [[7, "randog.factory.union"]]}})