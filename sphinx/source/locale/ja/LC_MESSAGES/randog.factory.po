# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, k-izumi
# This file is distributed under the same license as the
# random-obj-generator package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: random-obj-generator 0.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-09 18:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/randog.factory.rst:2
msgid "randog.factory package"
msgstr ""

#: of randog.factory._dict.DictItem:1
#: randog.factory._from_example.FromExampleContext:1
#: randog.factory._from_pyfile.FactoryDef:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: of randog.factory._dict.DictItem:1
msgid ""
"A rule for generating values corresponding to a key in the random "
"generation of dict."
msgstr "dict のランダム生成において、キーに対応する値を生成する際のルール。"

#: ../../docstring of randog.factory.DictItem.factory:1
msgid "a factory to generate values"
msgstr "値を生成する factory"

#: ../../docstring of randog.factory.DictItem.prop_exists:1
msgid "probability of key generation"
msgstr "キーを生成する確率"

#: of randog.factory._base.Factory:1
msgid ""
"Bases: :py:class:`~abc.ABC`, :py:class:`~typing.Generic`\\ "
"[:py:obj:`~randog.factory._base.T`]"
msgstr ""

#: of randog.factory._base.Factory.infinity_iter:1
msgid "Returns an infinity iterator which serves result randomly."
msgstr "ランダムに値を生成する無限イテレータを返す。"

#: of randog.factory._base.Factory.infinity_iter:3
msgid ""
"The result is INFINITY so do NOT use it directly with `for`, `list`, and "
"so on."
msgstr "このイテレータは無限です。for, list などで直接使用しないでください。"

#: of randog.factory._base.Factory.infinity_iter:5
msgid ""
"However, if the argument `raise_on_factory_stopped` is not True, the "
"iterator will be stopped if the factory is stopped."
msgstr "ただし、引数 `raise_on_factory_stopped` が True でない場合、factory が停止するとイテレーションも停止する。"

#: of randog.factory._base.Factory.infinity_iter:9
#: randog.factory._base.Factory.iter:4 randog.factory._base.Factory.or_none:4
#: randog.factory._base.Factory.post_process:4
#: randog.factory._base.Factory.post_process_items:5
msgid "Examples"
msgstr ""

#: of randog.factory._base.Factory.infinity_iter
#: randog.factory._base.Factory.iter randog.factory._base.Factory.next
#: randog.factory._base.Factory.or_none
#: randog.factory._base.Factory.post_process
#: randog.factory._base.Factory.post_process_items
#: randog.factory._bool.randbool randog.factory._by_callable.by_callable
#: randog.factory._by_iterator.by_iterator randog.factory._choice.randchoice
#: randog.factory._choice.randenum randog.factory._const.const
#: randog.factory._date.randdate randog.factory._datetime.randdatetime
#: randog.factory._decimal.randdecimal randog.factory._dict.randdict
#: randog.factory._float.randfloat randog.factory._from_example.from_example
#: randog.factory._from_pyfile.from_pyfile randog.factory._increment.increment
#: randog.factory._int.randint randog.factory._list.randlist
#: randog.factory._str.randstr randog.factory._time.randtime
#: randog.factory._timedelta.randtimedelta randog.factory._union.union
msgid "Parameters"
msgstr ""

#: of randog.factory._base.Factory.infinity_iter:18
#: randog.factory._base.Factory.iter:20
msgid ""
"the probability that the original factory generation value is not "
"returned as is, but is regenerated. It affects cases where the original "
"factory returns a value that is not completely random."
msgstr ""
"factory が生成した値をそのまま使用せずに再生成する確率。このオプションは factory "
"が完全にランダムでない値を生成する場合に効果がある。"

#: of randog.factory._base.Factory.infinity_iter:23
#: randog.factory._base.Factory.iter:30
msgid ""
"If True, the iteration raises `FactoryStopException` in case the factory "
"cannot generate value due to `StopIteration`. If False, the iteration "
"simply stops in the case."
msgstr ""
"True を指定すると、factory が `StopIteration` によって生成を停止した場合に例外 "
"`FactoryStopException` を発する。False を指定するか何も指定しない場合、先述のケースで単にイテレーションを停止する。"

#: of randog.factory._base.Factory.infinity_iter:27
#: randog.factory._base.Factory.iter:34 randog.factory._base.Factory.or_none:21
#: randog.factory._bool.randbool:5 randog.factory._choice.randchoice:8
#: randog.factory._choice.randenum:7 randog.factory._date.randdate:7
#: randog.factory._datetime.randdatetime:12
#: randog.factory._decimal.randdecimal:18 randog.factory._dict.randdict:8
#: randog.factory._float.randfloat:16
#: randog.factory._from_example.from_example:20
#: randog.factory._from_pyfile.from_pyfile:8 randog.factory._int.randint:10
#: randog.factory._list.randlist:12 randog.factory._str.randstr:10
#: randog.factory._time.randtime:12 randog.factory._timedelta.randtimedelta:9
#: randog.factory._union.union:13
msgid "random number generator to be used"
msgstr "乱数生成に使用するインスタンス"

#: of randog.factory._base.Factory.infinity_iter
#: randog.factory._base.Factory.iter randog.factory._base.Factory.next
#: randog.factory._base.Factory.or_none
#: randog.factory._base.Factory.post_process
#: randog.factory._base.Factory.post_process_items
msgid "Returns"
msgstr ""

#: of randog.factory._base.Factory.infinity_iter:30
msgid "An infinity iterator"
msgstr "無限イテレータ"

#: of randog.factory._base.Factory.infinity_iter
#: randog.factory._base.Factory.iter randog.factory._base.Factory.next
#: randog.factory._base.Factory.or_none
#: randog.factory._base.Factory.post_process
#: randog.factory._base.Factory.post_process_items
msgid "Return type"
msgstr ""

#: of randog.factory._base.Factory.iter:1
msgid "Returns an iterator which serves result randomly `size` times."
msgstr "`size` 回だけランダムに値を生成するイテレータを返す。"

#: of randog.factory._base.Factory.iter:14
msgid ""
"the number of the iterator. However, if the argument "
"`raise_on_factory_stopped` is not True, fewer iterations than the "
"specified `size` will be executed if the factory is stopped. Also, if the"
" argument `discard` is specified, the size may be less."
msgstr ""
"繰り返しの回数。ただし、引数 `raise_on_factory_stopped` が True でない場合、factory が停止すると "
"`size` より少ないイテレーションで停止する。また、引数 `discard` "
"が指定されている場合、イテレーションの回数が少なくなる場合がある。"

#: of randog.factory._base.Factory.iter:25
msgid ""
"the probability that the original factory generation value is not "
"returned as is, but is discarded. If discarded, the number of times the "
"value is generated is less than `size`."
msgstr "factory が生成した値をそのまま使用せずに廃棄する確率。廃棄が生じた場合、生成される数は `size` で指定した数より少なくなる"

#: of randog.factory._base.Factory.iter:37
msgid "An iterator"
msgstr "イテレータ"

#: of randog.factory._base.Factory.next:1
msgid ""
"Generate a value randomly according to the rules specified when "
"assembling the factory."
msgstr "Factory の作成時に指定したルールに沿ってランダムに値を生成する。"

#: of randog.factory._base.Factory.next:4
msgid ""
"If True, raises `FactoryStopException` in case the factory cannot "
"generate value due to `StopIteration`. If False, simply raises "
"`StopIteration`."
msgstr ""
"True を指定すると、factory が `StopIteration` によって生成を停止した場合に例外 "
"`FactoryStopException` を発する。False を指定するか何も指定しない場合、先述のケースで単に StopIteration"
" を発する。"

#: of randog.factory._base.Factory.next:9
msgid "a value generated randomly"
msgstr "ランダムに生成された値"

#: of randog.factory._base.Factory.or_none:1
msgid "Returns a factory whose result may be None with the specified probability."
msgstr "指定した確率で None を生成する factory を返す。"

#: of randog.factory._base.Factory.or_none:12
msgid "Probability that the result is None"
msgstr "None を生成する確率"

#: of randog.factory._base.Factory.or_none:14
msgid ""
"If it is True, when generating a value, first generate value with the "
"base factory and then decides whether to adopt it or None. Otherwise, it "
"first decides whether to return None or generate a value and return it, "
"and then generates a value only if it is returned."
msgstr ""
"Trueである場合、値の生成時に、まず factory "
"で値を生成してから、それを採用するかNoneを採用するかを決定する。そうでない場合、まずNoneを返すか値を生成して返すか決定してから、生成した値を返す場合のみ値を生成する。"

#: of randog.factory._base.Factory.or_none:24
msgid "A factory whose result may be None with the specified probability."
msgstr "指定した確率で None を生成する factory"

#: of randog.factory._base.Factory.post_process:1
msgid "Returns a factory whose result will be modified by `post_process`"
msgstr "生成した値を `post_process` で加工してから返す factory を返す。"

#: of randog.factory._base.Factory.post_process:18
msgid "the mapping to modify the result"
msgstr "結果を加工する関数"

#: of randog.factory._base.Factory.post_process:21
msgid "A factory whose result will be modified by `post_process`."
msgstr "生成した値を `post_process` で加工してから返す factory"

#: of randog.factory._base.Factory.post_process_items:1
msgid ""
"Returns a factory whose result will be dict whose items is modified by "
"`processes`"
msgstr "生成した辞書の要素を `processes` で加工してから返す factory を返す。"

#: of randog.factory._base.Factory.post_process_items:21
msgid "the mapping to modify items which is not defined in `processes`"
msgstr "`processes` に加工が定義されていない要素を加工する関数"

#: of randog.factory._base.Factory.post_process_items:23
msgid "functions to modify each item"
msgstr "各要素を加工する関数"

#: of randog.factory._base.Factory.post_process_items:26
msgid "A factory whose result will be dict whose items is modified by `processes`"
msgstr "生成した辞書の要素を `processes` で加工してから返す factory"

#: of randog.factory._base.FactoryStopException:1
msgid "Bases: :py:class:`Exception`"
msgstr ""

#: of randog.factory._by_callable.by_callable:1
msgid "Return a factory generating values by specified callable."
msgstr "指定した関数で値を生成する factory を返す。"

#: of randog.factory._by_callable.by_callable:3
msgid "the function generating value"
msgstr "値を生成する関数"

#: of randog.factory._by_iterator.by_iterator:1
msgid "Return a factory generating values by specified iterator."
msgstr "指定したイテレータで値を生成する factory を返す。"

#: of randog.factory._by_iterator.by_iterator:3
msgid "the iterator generating value"
msgstr "値を生成するイテレータ"

#: of randog.factory._const.const:1
msgid "Return a factory which returns the specified value."
msgstr "指定した値を生成した値として返す factory を返す。"

#: of randog.factory._const.const:3
msgid "the value"
msgstr "値"

#: of randog.factory._const.const:5 randog.factory._increment.increment:9
msgid ""
"It is not normally used, but it can be accepted as an argument to match "
"other Factory construction functions."
msgstr "通常は使用しませんが、他の factory 作成関数と同様に引数として受け取ることができます。"

#: of randog.factory._from_example.from_example:1
msgid "Returns a factory generating value like specified example or type."
msgstr "指定された例に似た値を生成する factory を返す。"

#: of randog.factory._from_example.from_example:3
msgid "the type or the example"
msgstr "生成する値の型、もしくは例"

#: of randog.factory._from_example.from_example:5
msgid ""
"If specified, this function is executed first and its return value is "
"used as a new example. If it returns a factory, it is used as is. If it "
"returns `NotImplemented`, `from_example` behaves as if `custom_func` was "
"not specified. The context is passed to this function. Multiple functions"
" may be specified for `custom_func`, and if multiple functions are "
"specified, they are executed in sequence until a value other than "
"NotImplemented is returned. This sequence of processing is also used to "
"create factories for child elements of dict and list. It is recommended "
"that `custom_func` receives `**kwargs` to allow for more keyword "
"arguments in future updates."
msgstr ""
"指定された場合、渡された例はまずこの関数に通され、その戻り値が代わりに例として使用されます。ただし、戻り値が factory "
"である場合はそのまま使用され、戻り値が `NotImplemented` "
"である場合は、その関数がそもそも指定されなかった場合と同じように動作します。context "
"は、この関数にも渡されます。複数の関数を指定した場合、`NotImplemented` "
"以外の値が返されるまで、順にそれらを実行します。この一連の処理は、dict や list の子要素の factory "
"を作成する際にも実施されます。将来のアップデートでキーワード引数を増やせるように、`custom_func` は `**kwargs` "
"を受け取ることが推奨されています。"

#: of randog.factory._from_example.from_example:22
msgid ""
"the context of generation. Normally, you should not specify it. If "
"specified, the context property takes precedence over other arguments."
msgstr "factory 作成のコンテキスト。通常、指定するべきではありません。もし指定した場合、他の引数よりも優先されます。"

#: of randog.factory._bool.randbool randog.factory._choice.randchoice
#: randog.factory._choice.randenum randog.factory._date.randdate
#: randog.factory._datetime.randdatetime randog.factory._decimal.randdecimal
#: randog.factory._float.randfloat randog.factory._from_example.from_example
#: randog.factory._increment.increment randog.factory._int.randint
#: randog.factory._list.randlist randog.factory._str.randstr
#: randog.factory._time.randtime randog.factory._timedelta.randtimedelta
#: randog.factory._union.union
msgid "Raises"
msgstr ""

#: of randog.factory._from_example.from_example:26
msgid "When the specified example or type is not supported."
msgstr "指定された例や型をサポートしていない場合。"

#: of randog.factory._from_pyfile.from_pyfile:1
msgid "Returns a factory defined in the specified file."
msgstr "指定したファイルで定義される factory を返す。"

#: of randog.factory._from_pyfile.from_pyfile:3
msgid "the filename of the factory definition"
msgstr "factory 定義ファイルのパス"

#: of randog.factory._from_pyfile.from_pyfile:5
msgid ""
"If True is specified, the return value is the FactoryDef dataclass, and "
"data other than the factory can be obtained."
msgstr "Trueを指定すると、戻り値が FactoryDef データクラスになり、factory本体以外のデータも得られる。"

#: of randog.factory._increment.increment:1
msgid "Return a factory which returns sequential numbers."
msgstr "連番を返す factory を返す。"

#: of randog.factory._increment.increment:3
msgid "the first value"
msgstr "最初に返す値"

#: of randog.factory._increment.increment:5
msgid ""
"the maximum value. If the generated value reaches the maximum value, 1 is"
" generated next. If the maximum value is not specified, it is not reset "
"to 1."
msgstr "最大値。生成値がこの値に達した場合、次の生成値は1になる。最大値が指定されない場合、生成値は1に戻されない。"

#: of randog.factory._increment.increment:13
msgid "if it is not satisfied `1 <= initial_value <= maximum`"
msgstr "引数が `1 <= initial_value <= maximum` を満たさない場合"

#: of randog.factory._bool.randbool:1
msgid "Return a factory generating random bool values."
msgstr "bool 値をランダムに生成する factory を返す。"

#: of randog.factory._bool.randbool:3
msgid "the probability of True"
msgstr "True を生成する確率"

#: of randog.factory._bool.randbool:8 randog.factory._date.randdate:10
#: randog.factory._datetime.randdatetime:15
#: randog.factory._decimal.randdecimal:21 randog.factory._float.randfloat:19
#: randog.factory._int.randint:13 randog.factory._list.randlist:17
#: randog.factory._str.randstr:13 randog.factory._time.randtime:15
#: randog.factory._timedelta.randtimedelta:12
msgid "When the specified generating conditions are inconsistent."
msgstr "指定した生成条件に矛盾がある場合。"

#: of randog.factory._choice.randchoice:1
msgid "Return a factory choosing one of values."
msgstr "values のうちの1つをランダムに選ぶ factory を返す。"

#: of randog.factory._choice.randchoice:3
msgid "the values"
msgstr "値"

#: of randog.factory._choice.randchoice:5
msgid ""
"the probabilities that each value is chosen. The length must equal to the"
" number of values."
msgstr "それぞれの値が選ばれる確率。長さは値の数に一致しなければならない。"

#: of randog.factory._choice.randchoice:11 randog.factory._choice.randenum:10
msgid "No values are specified."
msgstr "値が一つも指定されていない。"

#: of randog.factory._date.randdate:1
msgid "Return a factory generating random date values."
msgstr "ランダムに date 型の値を生成する factory を返す。"

#: of randog.factory._date.randdate:3 randog.factory._datetime.randdatetime:3
#: randog.factory._decimal.randdecimal:3 randog.factory._float.randfloat:3
#: randog.factory._int.randint:3 randog.factory._time.randtime:3
#: randog.factory._timedelta.randtimedelta:3
msgid "the minimum"
msgstr "最小値"

#: of randog.factory._date.randdate:5 randog.factory._datetime.randdatetime:5
#: randog.factory._decimal.randdecimal:5 randog.factory._float.randfloat:5
#: randog.factory._int.randint:5 randog.factory._time.randtime:5
#: randog.factory._timedelta.randtimedelta:5
msgid "the maximum"
msgstr "最大値"

#: of randog.factory._datetime.randdatetime:1
msgid "Return a factory generating random datetime values."
msgstr "ランダムに datetime 型の値を生成する factory を返す。"

#: of randog.factory._datetime.randdatetime:7 randog.factory._time.randtime:7
msgid ""
"If specified, the tzinfo of result will be fixed to this value (False "
"means no specification). When it fixes aware datetime to aware, the time "
"is corrected. Otherwise, only the tzinfo is changed."
msgstr ""
"指定した場合、生成される値の tzinfo がこの値に矯正される (False は指定しないことを意味する)。aware "
"な日時を別のタイムゾーンの aware な日時に矯正する場合、時刻は時差に応じて変更される。それ以外の場合、tzinfo のみが変更される。"

#: of randog.factory._decimal.randdecimal:1
msgid "Return a factory generating random Decimal values."
msgstr "ランダムに Decimal 型の値を生成する factory を返す。"

#: of randog.factory._decimal.randdecimal:7
msgid "the length of decimal part"
msgstr "小数部分の桁数"

#: of randog.factory._decimal.randdecimal:9 randog.factory._float.randfloat:7
msgid "the probability of positive infinity"
msgstr "正の無限を生成する確率"

#: of randog.factory._decimal.randdecimal:11 randog.factory._float.randfloat:9
msgid "the probability of negative infinity"
msgstr "負の無限を生成する確率"

#: of randog.factory._decimal.randdecimal:13 randog.factory._float.randfloat:11
msgid "the probability of NaN"
msgstr "NaN を生成する確率"

#: of randog.factory._decimal.randdecimal:15 randog.factory._float.randfloat:13
#: randog.factory._int.randint:7
msgid ""
"probability distribution. If 'uniform', the distribution is uniform. If "
"'exp_uniform', the distribution of digits (log with a base of 2) is "
"uniform."
msgstr ""

#: of randog.factory._dict.randdict:1
msgid "Return a factory generating random dict."
msgstr "ランダムに dict 型の値を生成する factory を返す。"

#: of randog.factory._dict.randdict:3
msgid ""
"the factories of each key. If `items_dict` is specified, `items` will be "
"ignored."
msgstr "各キーの値を生成する factory。`items_dict` が指定された場合、`items` は無視される。"

#: of randog.factory._dict.randdict:6
msgid "the factories of each key. Use when keyword arguments cannot be specified."
msgstr "各キーの値を生成する factory。キーワード引数を指定できない場合に使用する。"

#: of randog.factory._choice.randenum:1
msgid "Return a factory choosing one of specified enum."
msgstr "指定された列挙子の値のうちの1つをランダムに選ぶ factory を返す。"

#: of randog.factory._choice.randenum:3
msgid "the enum class"
msgstr "列挙型"

#: of randog.factory._choice.randenum:5
msgid "the probabilities that each value is chosen."
msgstr "それぞれの値が選ばれる確率。"

#: of randog.factory._float.randfloat:1
msgid "Return a factory generating random float values."
msgstr "ランダムに float 型の値を生成する factory を返す。"

#: of randog.factory._int.randint:1
msgid "Return a factory generating random int values."
msgstr "ランダムに int 型の値を生成する factory を返す。"

#: of randog.factory._list.randlist:1
msgid "Return a factory generating random list."
msgstr "ランダムに list 型の値を生成する factory を返す。"

#: of randog.factory._list.randlist:3
msgid ""
"the factories of each item. If `items_list` is specified, `items` will be"
" ignored."
msgstr "各要素を生成する factory。`items_list` が指定された場合、`items` は無視される。"

#: of randog.factory._list.randlist:6
msgid ""
"length of generated list. If not specified, the length of generated list "
"will be equals to the number of `items`."
msgstr "生成されるリストの長さ。指定されなかった場合、生成されるリストの長さは `items` の長さに等しくなる。"

#: of randog.factory._list.randlist:10
msgid "the type of generated object"
msgstr "生成されるオブジェクトの型"

#: of randog.factory._list.randlist:14
msgid ""
"the factories of each item. Use when positional arguments cannot be "
"specified."
msgstr "各要素を生成する factory。位置引数を指定できない場合に使用する。"

#: of randog.factory._str.randstr:1
msgid "Return a factory generating random str values."
msgstr "ランダムに str 型の値を生成する factory を返す。"

#: of randog.factory._str.randstr:3
msgid "length of generated string"
msgstr "生成される文字列の長さ"

#: of randog.factory._str.randstr:5
msgid "characters to be used"
msgstr "文字列の生成に使用する文字"

#: of randog.factory._str.randstr:7
msgid ""
"regular expression for generated string. It cannot be used with `length` "
"or `charset`."
msgstr "生成される文字列が満たす正規表現。`length` や `charset` と同時に使用することはできない。"

#: of randog.factory._time.randtime:1
msgid "Return a factory generating random time values."
msgstr "ランダムに time 型の値を生成する factory を返す。"

#: of randog.factory._timedelta.randtimedelta:1
msgid "Return a factory generating random timedelta values."
msgstr "ランダムに timedelta 型の値を生成する factory を返す。"

#: of randog.factory._timedelta.randtimedelta:7
msgid "the atomic unit"
msgstr "値の生成の最小単位"

#: of randog.factory._union.union:1
msgid "Return a factory generating value by one of specified factories."
msgstr "指定した factory のうちの一つをランダムに選んで値を生成する factory を返す。"

#: of randog.factory._union.union:3
msgid "the factories"
msgstr "factory"

#: of randog.factory._union.union:5
msgid ""
"the probabilities that each factory is chosen. The length must equal to "
"the number of factories."
msgstr "それぞれの factory が選ばれる確率。長さは factory の数に一致しなければならない。"

#: of randog.factory._union.union:8
msgid ""
"If it is True, when generating a value, first generate values with all "
"factories and then decide which of them to adopt. Otherwise, it first "
"decides which factory to adopt, and then generates a value using only "
"that factory."
msgstr ""
"Trueである場合、値の生成時に、まずすべての factory で値を生成してから、そのどれを採用するか決定する。そうでない場合、まずどの "
"factory を採用するか決定してから、そのfactoryのみで値を生成する。"

#: of randog.factory._union.union:16
msgid "No factories are specified."
msgstr "factory が一つも指定されていない。"

